Similarity Analyser 2.3.34 - http://www.harukizaemon.com/simian
Copyright (c) 2003-2013 Simon Harris.  All rights reserved.
Simian is not free unless used solely for non-commercial or evaluation purposes.
{failOnDuplication=true, ignoreCharacterCase=true, ignoreCurlyBraces=true, ignoreIdentifierCase=true, ignoreModifiers=true, ignoreStringCase=true, reportDuplicateText=true, threshold=6}
Found 6 duplicate lines in the following files:
 Between lines 769 and 776 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 513 and 520 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
				visibilitymap_pin(onerel, blkno, &vmbuffer);				LockBuffer(buf, BUFFER_LOCK_SHARE);
				if (PageIsAllVisible(page))
					visibilitymap_set(onerel, blkno, PageGetLSN(page), &vmbuffer);
				LockBuffer(buf, BUFFER_LOCK_UNLOCK);
			}

			ReleaseBuffer(buf);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1969 and 1975 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1807 and 1813 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
						 HeapTuple tup, Relation relMap){
	Oid			cfgId = HeapTupleGetOid(tup);
	ScanKeyData skey[2];
	SysScanDesc scan;
	HeapTuple	maptup;
	int			i;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 655 and 666 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
 Between lines 560 and 571 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
				PageSetLSN(page, lsn);				PageSetTLI(page, ThisTimeLineID);
				MarkBufferDirty(buffer);
			}
			UnlockReleaseBuffer(buffer);
		}
	}

	UnlockReleaseBuffer(metabuffer);
}

static void
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 325 and 334 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
 Between lines 280 and 288 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
		if (cur->sk_flags & SK_ISNULL)		{
			if (cur->sk_flags & SK_SEARCHNULL)
			{
				cur->sk_strategy = BTEqualStrategyNumber;
				cur->sk_subtype = InvalidOid;
			}
			else
				so->qual_ok = false;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 359 and 367 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 315 and 323 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
		cstate->copy_dest = COPY_OLD_FE;	}
	else
	{
		/* very old way */
		if (cstate->binary)
			ereport(ERROR,
					(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			errmsg("COPY BINARY is not supported to stdout or from stdin")));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 782 and 788 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 765 and 771 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
				appendStringInfo(str, " on %s",								 quote_identifier(rte->ctename));
				if (strcmp(rte->eref->aliasname, rte->ctename) != 0)
					appendStringInfo(str, " %s",
									 quote_identifier(rte->eref->aliasname));
			}
			break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 411 and 416 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-fsstubs.c
 Between lines 345 and 350 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-fsstubs.c
	File		fd;	int			nbytes,
				tmp;
	char		buf[BUFSIZE];
	char		fnamebuf[MAXPGPATH];
	LargeObjectDesc *lobj;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 953 and 981 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtsearch.c
 Between lines 898 and 924 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtsearch.c
		if (!_bt_steppage(scan, dir))			return false;
	}

	/* Drop the lock, but not pin, on the current page */
	LockBuffer(so->currPos.buf, BUFFER_LOCK_UNLOCK);

	/* OK, itemIndex says what to return */
	scan->xs_ctup.t_self = so->currPos.items[so->currPos.itemIndex].heapTid;

	return true;
}

/*
 *	_bt_next() -- Get the next item in a scan.
 *
 *		On entry, so->currPos describes the current page, which is pinned
 *		but not locked, and so->currPos.itemIndex identifies which item was
 *		previously returned.
 *
 *		On successful exit, scan->xs_ctup.t_self is set to the TID of the
 *		next heap tuple, and so->currPos is updated as needed.
 *
 *		On failure exit (no more tuples), we release pin and set
 *		so->currPos.buf to InvalidBuffer.
 */
bool
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1072 and 1077 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 280 and 285 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/aggregatecmds.c
	tup = SearchSysCacheCopy(PROCOID,							 ObjectIdGetDatum(procOid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for function %u", procOid);
	procForm = (Form_pg_proc) GETSTRUCT(tup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1193 and 1199 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 453 and 458 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
	tup = SearchSysCache(TSTEMPLATEOID,						 ObjectIdGetDatum(tmplId),
						 0, 0, 0);
	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for text search template %u",
			 tmplId);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1892 and 1897 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 186 and 191 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
#define yyless(n) \	do \
		{ \
		/* Undo effects of setting up boot_yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 292 and 301 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistget.c
 Between lines 247 and 254 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistget.c
 Between lines 194 and 202 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistget.c
			stk = so->stack->next;			pfree(so->stack);
			so->stack = stk;

			/* If we're out of stack entries, we're done */
			if (so->stack == NULL)
			{
				ReleaseBuffer(so->curbuf);
				so->curbuf = InvalidBuffer;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 236 and 244 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 142 and 150 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gindatapage.c
		else if (result > 0)			low = mid + 1;
		else
			high = mid;
	}

	Assert(high >= FirstOffsetNumber && high <= maxoff);

	stack->off = high;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1664 and 1671 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1981 and 1986 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
						 ObjectIdGetDatum(cfgid),						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for text search configuration %u",
			 cfgid);
	form = (Form_pg_ts_config) GETSTRUCT(tup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 422 and 439 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/reloptions.c
 Between lines 403 and 415 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/reloptions.c
												  name, desc);	newoption->default_val = default_val;
	newoption->min = min_val;
	newoption->max = max_val;

	add_reloption((relopt_gen *) newoption);
}

/*
 * add_real_reloption
 *		Add a new float reloption
 */
void
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 956 and 961 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
 Between lines 591 and 596 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
	HeapScanDesc scan;	HeapTuple	lTuple,
				rTuple;
	Datum		value[Natts_pg_listener];
	bool		repl[Natts_pg_listener],
				nulls[Natts_pg_listener];
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3253 and 3262 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2645 and 2654 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1452 and 1461 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1367 and 1376 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1281 and 1290 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	ListCell   *l;
	recomputeNamespacePath();

	foreach(l, activeSearchPath)
	{
		Oid			namespaceId = lfirst_oid(l);

		if (namespaceId == myTempNamespace)
			continue;			/* do not look in temp namespace */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1286 and 1295 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 732 and 740 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
			nextrdata->buffer_std = true;			nextrdata->next = NULL;

			recptr = XLogInsert(RM_BTREE_ID, xlinfo, rdata);

			if (BufferIsValid(metabuf))
			{
				PageSetLSN(metapg, recptr);
				PageSetTLI(metapg, ThisTimeLineID);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 155 and 163 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlogutils.c
 Between lines 120 and 128 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlogutils.c
	HASH_SEQ_STATUS status;	xl_invalid_page *hentry;

	if (invalid_page_tab == NULL)
		return;					/* nothing to do */

	hash_seq_init(&status, invalid_page_tab);

	while ((hentry = (xl_invalid_page *) hash_seq_search(&status)) != NULL)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 321 and 343 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
 Between lines 239 and 261 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	for (i = 0; i < targetObjects->numrefs; i++)	{
		ObjectAddress *thisobj = targetObjects->refs + i;

		deleteOneObject(thisobj, depRel);
	}

	/* And clean up */
	free_object_addresses(targetObjects);

	heap_close(depRel, RowExclusiveLock);
}

/*
 * performMultipleDeletions: Similar to performDeletion, but act on multiple
 * objects at once.
 *
 * The main difference from issuing multiple performDeletion calls is that the
 * list of objects that would be implicitly dropped, for each object to be
 * dropped, is the union of the implicit-object list for all objects.  This
 * makes each check be more relaxed.
 */
void
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 706 and 711 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_proc.c
 Between lines 660 and 665 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_proc.c
 Between lines 610 and 615 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_proc.c
	tuple = SearchSysCache(PROCOID,						   ObjectIdGetDatum(funcoid),
						   0, 0, 0);
	if (!HeapTupleIsValid(tuple))
		elog(ERROR, "cache lookup failed for function %u", funcoid);
	proc = (Form_pg_proc) GETSTRUCT(tuple);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 128 and 136 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginscan.c
 Between lines 93 and 101 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginscan.c
	uint32		i,				j;

	if (keys == NULL)
		return;

	for (i = 0; i < nkeys; i++)
	{
		GinScanKey	key = keys + i;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 337 and 345 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtree.c
 Between lines 28 and 35 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginscan.c
	Relation	rel = (Relation) PG_GETARG_POINTER(0);	int			keysz = PG_GETARG_INT32(1);
	ScanKey		scankey = (ScanKey) PG_GETARG_POINTER(2);
	IndexScanDesc scan;

	scan = RelationGetIndexScan(rel, keysz, scankey);

	PG_RETURN_POINTER(scan);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1186 and 1196 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
 Between lines 948 and 958 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
								mtype)));			return STATUS_ERROR;
		}

		/* Get the actual GSS token */
		initStringInfo(&buf);
		if (pq_getmessage(&buf, PG_MAX_AUTH_TOKEN_LENGTH))
		{
			/* EOF - pq_getmessage already logged error */
			pfree(buf.data);
			return STATUS_ERROR;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 863 and 870 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1724 and 1729 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
						 ObjectIdGetDatum(dictId),						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for text search dictionary %u",
			 dictId);
	form = (Form_pg_ts_dict) GETSTRUCT(tup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 275 and 285 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 180 and 190 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gindatapage.c
	if (high < low)	{
		stack->off = FirstOffsetNumber;
		return false;
	}

	high++;

	while (high > low)
	{
		OffsetNumber mid = low + ((high - low) / 2);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3764 and 3771 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 3678 and 3685 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
				if (*isNull)				{
					*isNull = false;
					return BoolGetDatum(false);
				}
				else
					return BoolGetDatum(true);
			default:
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 589 and 594 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/rewriteheap.c
 Between lines 171 and 176 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/hio.c
	if (len > MaxHeapTupleSize)		ereport(ERROR,
				(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),
				 errmsg("row is too big: size %lu, maximum size %lu",
						(unsigned long) len,
						(unsigned long) MaxHeapTupleSize)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1365 and 1375 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1283 and 1296 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	Oid			argList[1];	Oid			procOid;

	/*
	 * Output functions can take a single argument of the type.
	 *
	 * For backwards compatibility we allow OPAQUE in place of the actual type
	 * name; if we see this, we issue a warning and fix up the pg_proc entry.
	 */
	argList[0] = typeOid;

	procOid = LookupFuncName(procname, 1, argList, true);
	if (OidIsValid(procOid))
		return procOid;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 752 and 758 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 715 and 721 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1723 and 1728 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	tup = SearchSysCache(TSDICTOID,						 ObjectIdGetDatum(dictId),
						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for text search dictionary %u",
			 dictId);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1082 and 1087 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
 Between lines 1021 and 1026 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
			if ((subkey->sk_flags & SK_BT_REQFWD) &&				ScanDirectionIsForward(dir))
				*continuescan = false;
			else if ((subkey->sk_flags & SK_BT_REQBKWD) &&
					 ScanDirectionIsBackward(dir))
				*continuescan = false;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3263 and 3271 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3136 and 3144 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
		MarkBufferDirty(old_buf);
	/* XLOG stuff */
	if (!rel->rd_istemp)
	{
		XLogRecPtr	recptr = log_heap_move(rel, old_buf, old_tup->t_self,
										   dst_buf, &newtup,
										   all_visible_cleared,
										   all_visible_cleared_new);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 950 and 957 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 2972 and 2979 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
										NULL, 0, NULL, 0,										unused, uncnt,
										false);
				PageSetLSN(page, recptr);
				PageSetTLI(page, ThisTimeLineID);
			}

			END_CRIT_SECTION();
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 601 and 610 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
 Between lines 575 and 584 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
		if (BufferIsValid(buffer))		{
			page = (Page) BufferGetPage(buffer);
			if (XLByteLE(lsn, PageGetLSN(page)))
			{
				UnlockReleaseBuffer(buffer);
			}
			else
			{
				pageop = (BTPageOpaque) PageGetSpecialPointer(page);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 405 and 410 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2635 and 2640 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	relTup = SearchSysCache(RELOID,							ObjectIdGetDatum(relid),
							0, 0, 0);
	if (!HeapTupleIsValid(relTup))
		elog(ERROR, "cache lookup failed for relation %u", relid);
	relForm = (Form_pg_class) GETSTRUCT(relTup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1881 and 1895 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 805 and 814 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
		if (recurse)		{
			ListCell   *child;
			List	   *children;

			children = find_all_inheritors(myrelid, AccessExclusiveLock);

			foreach(child, children)
			{
				Oid			childrelid = lfirst_oid(child);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 341 and 346 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 331 and 336 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
	{ \	if ( ! YY_CURRENT_BUFFER ){ \
        boot_yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            boot_yy_create_buffer(boot_yyin,YY_BUF_SIZE ); \
	} \
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2562 and 2567 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 2546 and 2551 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
						if (!cstate->csv_mode)							ereport(ERROR,
									(errcode(ERRCODE_BAD_COPY_FILE_FORMAT),
									 errmsg("end-of-copy marker corrupt")));
						else
							NO_END_OF_COPY_GOTO;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2092 and 2098 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1737 and 1743 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
		stats->stats_valid = true;		/* Do the simple null-frac and width stats */
		stats->stanullfrac = (double) null_cnt / (double) samplerows;
		if (is_varwidth)
			stats->stawidth = total_width / (double) nonnull_cnt;
		else
			stats->stawidth = stats->attrtype->typlen;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 441 and 446 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 190 and 195 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashutil.c
 Between lines 178 and 183 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashutil.c
 Between lines 605 and 610 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistutil.c
		ereport(ERROR,				(errcode(ERRCODE_INDEX_CORRUPTED),
				 errmsg("index \"%s\" contains corrupted page at block %u",
						RelationGetRelationName(rel),
						BufferGetBlockNumber(buf)),
				 errhint("Please REINDEX it.")));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 541 and 547 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 244 and 250 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1349 and 1355 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	if (dconnlimit)	{
		connlimit = intVal(dconnlimit->arg);
		if (connlimit < -1)
			ereport(ERROR,
					(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
					 errmsg("invalid connection limit: %d", connlimit)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 686 and 702 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1584 and 1599 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 692 and 707 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
		object.objectSubId = 0;
		add_exact_object_address(&object, objects);

		ReleaseSysCache(tup);
	}

	performMultipleDeletions(objects, drop->behavior);

	free_object_addresses(objects);
}

/*
 * Guts of TS dictionary deletion.
 */
void
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 4679 and 4685 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4274 and 4280 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	htup = (HeapTupleHeader) PageGetItem(page, lp);
	htup->t_infomask &= ~(HEAP_XMAX_COMMITTED |
						  HEAP_XMAX_INVALID |
						  HEAP_XMAX_IS_MULTI |
						  HEAP_IS_LOCKED |
						  HEAP_MOVED);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1569 and 1574 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 1062 and 1067 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
		case T_Param:		case T_CoerceToDomainValue:
		case T_CaseTestExpr:
		case T_SetToDefault:
		case T_CurrentOfExpr:
		case T_RangeTblRef:
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2186 and 2193 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1840 and 1847 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
			if (ndistinct < 0)				ndistinct = -ndistinct * totalrows;
			/* estimate # of occurrences in sample of a typical value */
			avgcount = (double) samplerows / ndistinct;
			/* set minimum threshold count to store a value */
			mincount = avgcount * 1.25;
			if (mincount < 2)
				mincount = 2;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3154 and 3160 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 2995 and 3001 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
				break;			case CONSTR_FOREIGN:
				/* Nothing to do here */
				break;
			default:
				elog(ERROR, "unrecognized constraint type: %d",
					 (int) con->contype);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1860 and 1867 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
 Between lines 1787 and 1794 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
			break;		default:
			elog(ERROR, "unrecognized window seek type: %d", seektype);
			abs_pos = 0;		/* keep compiler quiet */
			break;
	}

	gottuple = window_gettupleslot(winobj, abs_pos, slot);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 603 and 612 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
 Between lines 521 and 530 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
					for (i = 0; i < data->ntuples; i++)					{
						tupsize = IndexTupleSize(tuples);

						l = PageAddItem(page, (Item) tuples, tupsize, off, false, false);

						if (l == InvalidOffsetNumber)
							elog(ERROR, "failed to add item to index page");

						tuples = (IndexTuple) (((char *) tuples) + tupsize);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 885 and 891 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 864 and 869 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 857 and 862 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 831 and 836 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
			show_scan_qual(plan->qual,						   "Filter",
						   ((Scan *) plan)->scanrelid,
						   plan, outer_plan,
						   str, indent, es);
			break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 130 and 135 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
 Between lines 146 and 151 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
	int16		inputtypeLen,				resulttypeLen,
				transtypeLen;
	bool		inputtypeByVal,
				resulttypeByVal,
				transtypeByVal;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 339 and 345 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/read.c
 Between lines 319 and 325 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/read.c
						char	   *endptr;
						token = pg_strtok(&tok_len);
						if (token == NULL)
							elog(ERROR, "unterminated List structure");
						if (token[0] == ')')
							break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 913 and 918 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 814 and 819 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
				runtime_keys[n_runtime_keys].key_expr =					ExecInitExpr(rightop, planstate);
				runtime_keys[n_runtime_keys].key_toastable =
					TypeIsToastable(op_righttype);
				n_runtime_keys++;
				scanvalue = (Datum) 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 925 and 930 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 826 and 831 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
								   flags,								   varattno,	/* attribute number to scan */
								   op_strategy, /* op's strategy */
								   op_righttype,		/* strategy subtype */
								   opfuncid,	/* reg proc to use */
								   scanvalue);	/* constant */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1344 and 1354 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 513 and 523 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
	aclresult = pg_namespace_aclcheck(namespaceoid, GetUserId(), ACL_CREATE);	if (aclresult != ACLCHECK_OK)
		aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
					   get_namespace_name(namespaceoid));

	/*
	 * loop over the definition list and extract the information we need.
	 */
	foreach(pl, parameters)
	{
		DefElem    *defel = (DefElem *) lfirst(pl);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 176 and 181 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/proclang.c
 Between lines 141 and 146 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/proclang.c
										 pltemplate->tmpllibrary,										 false, /* isAgg */
										 false, /* isWindowFunc */
										 false, /* security_definer */
										 false, /* isStrict */
										 PROVOLATILE_VOLATILE,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 713 and 719 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
 Between lines 622 and 628 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
													  PointerGetDatum(key),													PointerGetDatum(query)));
			break;
		default:
			retval = FALSE;
	}
	return retval;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 940 and 950 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 3471 and 3481 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	PageRepairFragmentation(page);
	MarkBufferDirty(buffer);

	/* XLOG stuff */
	if (!onerel->rd_istemp)
	{
		XLogRecPtr	recptr;

		recptr = log_heap_clean(onerel, buffer,
								NULL, 0, NULL, 0,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 387 and 394 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execUtils.c
 Between lines 316 and 323 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execUtils.c
	econtext->ecxt_aggvalues = NULL;	econtext->ecxt_aggnulls = NULL;

	econtext->caseValue_datum = (Datum) 0;
	econtext->caseValue_isNull = true;

	econtext->domainValue_datum = (Datum) 0;
	econtext->domainValue_isNull = true;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 939 and 944 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
 Between lines 377 and 382 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
 Between lines 282 and 287 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
				break;			default:
				ereport(COMMERROR,
						(errcode(ERRCODE_PROTOCOL_VIOLATION),
						 errmsg("unrecognized SSL error code: %d",
								err)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2083 and 2088 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1986 and 1991 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1900 and 1905 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1819 and 1824 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1752 and 1757 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1682 and 1687 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1621 and 1626 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
		LocTriggerData.tg_trigger = trigger;		newtuple = ExecCallTriggerFunc(&LocTriggerData,
									   tgindx[i],
									   relinfo->ri_TrigFunctions,
									   relinfo->ri_TrigInstrument,
									   GetPerTupleMemoryContext(estate));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1327 and 1335 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 916 and 924 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
				innerTupleSlot = ExecProcNode(innerPlan);				node->mj_InnerTupleSlot = innerTupleSlot;
				MJ_DEBUG_PROC_NODE(innerTupleSlot);
				node->mj_MatchedInner = false;

				/* Compute join values and check for unmatchability */
				switch (MJEvalInnerValues(node, innerTupleSlot))
				{
					case MJEVAL_MATCHABLE:
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 195 and 201 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
 Between lines 114 and 120 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
		default:			ereport(ERROR,
					(errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("%s requires a numeric value",
							def->defname)));
	}
	return 0;					/* keep compiler quiet */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1232 and 1239 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 1145 and 1152 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
		return;
	/* Set up deparsing context */
	context = deparse_context_for_plan((Node *) plan,
									   NULL,
									   es->rtable,
									   es->pstmt->subplans);
	useprefix = list_length(es->rtable) > 1;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 489 and 497 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 431 and 438 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	SysScanDesc scan;	HeapTuple	tup;

	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3277 and 3283 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 3248 and 3254 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 1047 and 1053 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
					   RelationGetRelationName(rel));
	if (!allowSystemTableMods && IsSystemRelation(rel))
		ereport(ERROR,
				(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
				 errmsg("permission denied: \"%s\" is a system catalog",
						RelationGetRelationName(rel))));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2922 and 2934 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2859 and 2871 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2795 and 2807 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2728 and 2740 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2644 and 2656 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2588 and 2600 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2532 and 2544 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2476 and 2488 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		aclDatum = (Datum) 0;	}
	else
	{
		/* detoast rel's ACL if necessary */
		acl = DatumGetAclP(aclDatum);
	}

	result = aclmask(acl, roleid, ownerId, mask, how);

	/* if we have a detoasted copy, free it */
	if (acl && (Pointer) acl != DatumGetPointer(aclDatum))
		pfree(acl);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 474 and 481 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
 Between lines 4721 and 4728 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4662 and 4669 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4556 and 4563 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4345 and 4352 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4257 and 4264 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4159 and 4166 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4099 and 4106 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 212 and 219 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistxlog.c
	if (!BufferIsValid(buffer))		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))
	{
		UnlockReleaseBuffer(buffer);
		return;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1176 and 1184 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
 Between lines 938 and 946 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
	do	{
		mtype = pq_getbyte();
		if (mtype != 'p')
		{
			/* Only log error if client didn't disconnect. */
			if (mtype != EOF)
				ereport(COMMERROR,
						(errcode(ERRCODE_PROTOCOL_VIOLATION),
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 4696 and 4703 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4292 and 4299 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	htup->t_ctid = xlrec->target.tid;	PageSetLSN(page, lsn);
	PageSetTLI(page, ThisTimeLineID);
	MarkBufferDirty(buffer);
	UnlockReleaseBuffer(buffer);
}

static void
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2311 and 2318 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 1286 and 1293 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
			break;		case T_List:
			foreach(temp, (List *) node)
			{
				if (walker((Node *) lfirst(temp), context))
					return true;
			}
			break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1211 and 1216 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
 Between lines 402 and 407 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
	ScanKeyInit(&entry[0],				Anum_pg_tablespace_spcname,
				BTEqualStrategyNumber, F_NAMEEQ,
				CStringGetDatum(tablespacename));
	scandesc = heap_beginscan(rel, SnapshotNow, 1, entry);
	tuple = heap_getnext(scandesc, ForwardScanDirection);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 5034 and 5039 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 4949 and 4954 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 3860 and 3865 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
		indexTuple = SearchSysCache(INDEXRELID,									ObjectIdGetDatum(indexoid),
									0, 0, 0);
		if (!HeapTupleIsValid(indexTuple))
			elog(ERROR, "cache lookup failed for index %u", indexoid);
		indexStruct = (Form_pg_index) GETSTRUCT(indexTuple);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 343 and 348 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 298 and 303 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
		pq_sendbyte(&buf, format);		/* overall format */		pq_sendint(&buf, natts, 2);
		for (i = 0; i < natts; i++)
			pq_sendint(&buf, format, 2);		/* per-column formats */
		pq_endmessage(&buf);
		cstate->copy_dest = COPY_NEW_FE;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1812 and 1818 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
 Between lines 1739 and 1745 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
								int nchildren,								TransactionId *children,
								int nrels,
								RelFileNode *rels)
{
	XLogRecData rdata[3];
	int			lastrdata = 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2491 and 2497 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
 Between lines 3700 and 3709 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/copyfuncs.c
			break;
			/*
			 * VALUE NODES
			 */
		case T_Integer:
		case T_Float:
		case T_String:
		case T_BitString:
		case T_Null:
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3913 and 3920 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 3896 and 3903 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 3880 and 3887 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
			else			{
				Assert(oldtup == NULL);
				Assert(newtup == NULL);
				ItemPointerSetInvalid(&(new_event.ate_ctid1));
				ItemPointerSetInvalid(&(new_event.ate_ctid2));
			}
			break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1922 and 1933 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 1680 and 1691 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	ResourceOwnerRelease(TopTransactionResourceOwner,						 RESOURCE_RELEASE_BEFORE_LOCKS,
						 true, true);

	/* Check we've released all buffer pins */
	AtEOXact_Buffers(true);

	/* Clean up the relation cache */
	AtEOXact_RelationCache(true);

	/* Clean up the snapshot manager */
	AtEarlyCommit_Snapshot();
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 545 and 553 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 487 and 495 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	Relation	depRel;	ScanKeyData key[3];
	SysScanDesc scan;
	HeapTuple	tup;

	/* Search the dependency table for the dependent index */
	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2738 and 2744 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 2646 and 2652 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 2459 and 2465 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	rel = heap_open(TypeRelationId, RowExclusiveLock);
	tup = SearchSysCacheCopy(TYPEOID,
							 ObjectIdGetDatum(typeOid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for type %u", typeOid);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 125 and 130 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
 Between lines 78 and 83 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
		ScanKeyEntryInitializeWithInfo(&skey[i],									   flags,
									   (AttrNumber) (i + 1),
									   InvalidStrategy,
									   InvalidOid,
									   procinfo,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 328 and 334 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeNestloop.c
 Between lines 412 and 418 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeHashjoin.c
	switch (node->join.jointype)	{
		case JOIN_INNER:
		case JOIN_SEMI:
			break;
		case JOIN_LEFT:
		case JOIN_ANTI:
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1450 and 1455 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1423 and 1428 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1396 and 1401 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	procOid = LookupFuncName(procname, 1, argList, true);	if (!OidIsValid(procOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_FUNCTION),
				 errmsg("function %s does not exist",
						func_signature_string(procname, 1, argList))));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1655 and 1661 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 1439 and 1445 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
					 residx,					 toast_pointer.va_valueid,
					 RelationGetRelationName(toastrel));
		}
		else
			elog(ERROR, "unexpected chunk number %d (out of range %d..%d) for toast value %u in %s",
				 residx,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1542 and 1547 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
 Between lines 1526 and 1531 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
	hints.ai_socktype = SOCK_STREAM;	hints.ai_protocol = 0;
	hints.ai_addrlen = 0;
	hints.ai_canonname = NULL;
	hints.ai_addr = NULL;
	hints.ai_next = NULL;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 520 and 530 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 481 and 491 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
		result = ExecProject(node->js.ps.ps_ProjInfo, &isDone);
		if (isDone != ExprEndResult)
		{
			node->js.ps.ps_TupFromTlist =
				(isDone == ExprMultipleResult);
			return result;
		}
	}

	return NULL;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2649 and 2659 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
 Between lines 2611 and 2621 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
		evalPlanQual *oldepq;
		/* stop execution */
		EvalPlanQualStop(epq);
		/* pop old PQ from the stack */
		oldepq = epq->next;
		if (oldepq == NULL)
		{
			/* this is the first (oldest) PQ - mark as free */
			epq->rti = 0;
			estate->es_useEvalPlan = false;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 839 and 844 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
 Between lines 827 and 832 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
 Between lines 815 and 820 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
 Between lines 803 and 808 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
								 xlrec->node.spcNode, xlrec->node.dbNode,								 xlrec->node.relNode);
				appendStringInfo(buf, "left %u, right %u, next %u, level %u, firstright %d",
							   xlrec->leftsib, xlrec->rightsib, xlrec->rnext,
								 xlrec->level, xlrec->firstright);
				break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2173 and 2182 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1828 and 1837 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
			stats->stadistinct > 0 &&			track_cnt <= num_mcv)
		{
			/* Track list includes all values seen, and all will fit */
			num_mcv = track_cnt;
		}
		else
		{
			double		ndistinct = stats->stadistinct;
			double		avgcount,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2616 and 2626 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1936 and 1946 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1808 and 1818 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1679 and 1689 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1551 and 1561 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	else	{
		/* search for it in search path */
		recomputeNamespacePath();

		foreach(l, activeSearchPath)
		{
			namespaceId = lfirst_oid(l);

			if (namespaceId == myTempNamespace)
				continue;		/* do not look in temp namespace */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 862 and 868 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 594 and 600 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
	tup = SearchSysCacheCopy(TSDICTOID,							 ObjectIdGetDatum(dictId),
							 0, 0, 0);

	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for text search dictionary %u",
			 dictId);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 525 and 530 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapHeapscan.c
 Between lines 472 and 477 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapHeapscan.c
	if (node->tbmiterator)		tbm_end_iterate(node->tbmiterator);
	if (node->prefetch_iterator)
		tbm_end_iterate(node->prefetch_iterator);
	if (node->tbm)
		tbm_free(node->tbm);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 164 and 177 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execCurrent.c
 Between lines 120 and 130 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execCurrent.c
							cursor_name, table_name)));
		/*
		 * The cursor must have a current result row: per the SQL spec, it's
		 * an error if not.
		 */
		if (portal->atStart || portal->atEnd)
			ereport(ERROR,
					(errcode(ERRCODE_INVALID_CURSOR_STATE),
					 errmsg("cursor \"%s\" is not positioned on a row",
							cursor_name)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1079 and 1084 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 801 and 806 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	if (CountOtherDBBackends(db_id, &notherbackends, &npreparedxacts))		ereport(ERROR,
				(errcode(ERRCODE_OBJECT_IN_USE),
				 errmsg("database \"%s\" is being accessed by other users",
						dbname),
				 errdetail_busy_db(notherbackends, npreparedxacts)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1463 and 1470 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1330 and 1337 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
	pg_authmem_rel = heap_open(AuthMemRelationId, RowExclusiveLock);	pg_authmem_dsc = RelationGetDescr(pg_authmem_rel);

	forboth(nameitem, memberNames, iditem, memberIds)
	{
		const char *membername = strVal(lfirst(nameitem));
		Oid			memberid = lfirst_oid(iditem);
		HeapTuple	authmem_tuple;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3219 and 3224 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 3054 and 3059 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	xldir = AllocateDir(XLOGDIR);	if (xldir == NULL)
		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not open transaction log directory \"%s\": %m",
						XLOGDIR)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 5583 and 5588 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 4190 and 4195 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	tuple = SearchSysCacheAttName(RelationGetRelid(rel), colName);	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_COLUMN),
				 errmsg("column \"%s\" of relation \"%s\" does not exist",
						colName, RelationGetRelationName(rel))));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1663 and 1669 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1493 and 1499 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
	tup = SearchSysCacheCopy(TSCONFIGOID,							 ObjectIdGetDatum(cfgId),
							 0, 0, 0);

	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for text search configuration %u",
			 cfgId);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 402 and 409 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtsort.c
 Between lines 1886 and 1893 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
		trunctuple = *itup;		trunctuple.t_info = sizeof(IndexTupleData);
		itup = &trunctuple;
		itemsize = sizeof(IndexTupleData);
	}

	if (PageAddItem(page, (Item) itup, itemsize, itup_off,
					false, false) == InvalidOffsetNumber)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 477 and 483 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 350 and 356 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
	res = _SPI_begin_call(true);	if (res < 0)
		return res;

	memset(&plan, 0, sizeof(_SPI_plan));
	plan.magic = _SPI_PLAN_MAGIC;
	plan.cursor_options = 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1224 and 1230 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1980 and 1985 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	tup = SearchSysCache(TSCONFIGOID,						 ObjectIdGetDatum(cfgid),
						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for text search configuration %u",
			 cfgid);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1454 and 1459 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 742 and 748 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput (void );
#else
static int input (void );
#endif
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1896 and 1905 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
 Between lines 1869 and 1878 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
					   const ObjectAddresses *addrs){
	int			i;

	for (i = addrs->numrefs - 1; i >= 0; i--)
	{
		const ObjectAddress *thisobj = addrs->refs + i;

		if (object->classId == thisobj->classId &&
			object->objectId == thisobj->objectId)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 241 and 247 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashsearch.c
 Between lines 57 and 63 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashsearch.c
	offnum = ItemPointerGetOffsetNumber(current);	_hash_checkpage(rel, buf, LH_BUCKET_PAGE | LH_OVERFLOW_PAGE);
	page = BufferGetPage(buf);
	itup = (IndexTuple) PageGetItem(page, PageGetItemId(page, offnum));
	so->hashso_heappos = itup->t_tid;

	return true;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 743 and 749 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 717 and 723 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 692 and 698 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 521 and 527 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
		tup = heap_modify_tuple(tup,								RelationGetDescr(pg_operator_desc),
								values,
								nulls,
								replaces);

		simple_heap_update(pg_operator_desc, &tup->t_self, tup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 78 and 83 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
 Between lines 70 and 75 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
	4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,	5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 490 and 495 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 236 and 241 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
	i = 0;	namestrcpy(&oname, operatorName);
	values[i++] = NameGetDatum(&oname); /* oprname */
	values[i++] = ObjectIdGetDatum(operatorNamespace);	/* oprnamespace */
	values[i++] = ObjectIdGetDatum(GetUserId());		/* oprowner */
	values[i++] = CharGetDatum(leftTypeId ? (rightTypeId ? 'b' : 'r') : 'l');	/* oprkind */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 993 and 1000 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 484 and 491 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
	plan.nargs = nargs;	plan.argtypes = argtypes;

	paramLI = _SPI_convert_params(nargs, argtypes,
								  Values, Nulls,
								  PARAM_FLAG_CONST);

	_SPI_prepare_plan(src, &plan, paramLI);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1239 and 1251 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
 Between lines 1199 and 1211 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
	Relation	rel;	HeapScanDesc scandesc;
	HeapTuple	tuple;
	ScanKeyData entry[1];

	/*
	 * Search pg_tablespace.  We use a heapscan here even though there is an
	 * index on name, on the theory that pg_tablespace will usually have just
	 * a few entries and so an indexed lookup is a waste of effort.
	 */
	rel = heap_open(TableSpaceRelationId, AccessShareLock);

	ScanKeyInit(&entry[0],
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 297 and 305 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistsplit.c
 Between lines 289 and 296 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
	maxoff = entryvec->n - 1;
	nbytes = (maxoff + 2) * sizeof(OffsetNumber);
	v->spl_left = (OffsetNumber *) palloc(nbytes);
	v->spl_right = (OffsetNumber *) palloc(nbytes);
	v->spl_nleft = v->spl_nright = 0;

	for (i = FirstOffsetNumber; i <= maxoff; i = OffsetNumberNext(i))
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 758 and 765 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 566 and 573 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
			bool *isNull, ExprDoneCond *isDone){
	Var		   *variable = (Var *) exprstate->expr;
	TupleTableSlot *slot;
	AttrNumber	attnum;

	if (isDone)
		*isDone = ExprSingleResult;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2213 and 2220 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2187 and 2194 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	switch (aclerr)	{
		case ACLCHECK_OK:
			/* no error, so return to caller */
			break;
		case ACLCHECK_NO_PRIV:
			ereport(ERROR,
					(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 392 and 400 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gininsert.c
 Between lines 436 and 444 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginfast.c
	Datum	   *entries;	int32		i,
				nentries;

	entries = extractEntriesSU(ginstate, attnum, value, &nentries);

	if (nentries == 0)
		/* nothing to insert */
		return 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 7800 and 7805 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 7725 and 7730 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	text	   *location = PG_GETARG_TEXT_P(0);	char	   *locationstr;
	unsigned int uxlogid;
	unsigned int uxrecoff;
	uint32		xlogid;
	uint32		xlogseg;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1448 and 1455 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1309 and 1316 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 756 and 763 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
		if (!superuser())			ereport(ERROR,
					(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
					 errmsg("must be superuser to alter superusers")));
	}
	else
	{
		if (!have_createrole_privilege() &&
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 355 and 360 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 4324 and 4329 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
		tuple = SearchSysCacheCopy(RELOID,								   ObjectIdGetDatum(RelationGetRelid(rel)),
								   0, 0, 0);
		if (!HeapTupleIsValid(tuple))
			elog(ERROR, "cache lookup failed for relation %u",
				 RelationGetRelid(rel));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 499 and 505 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 187 and 193 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 188 and 194 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
		else if (strcmp(defel->defname, "connectionlimit") == 0)		{
			if (dconnlimit)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dconnlimit = defel;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 151 and 167 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execJunk.c
 Between lines 80 and 96 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execJunk.c
	if (slot)		ExecSetSlotDescriptor(slot, cleanTupType);
	else
		slot = MakeSingleTupleTableSlot(cleanTupType);

	/*
	 * Now calculate the mapping between the original tuple's attributes and
	 * the "clean" tuple's attributes.
	 *
	 * The "map" is an array of "cleanLength" attribute numbers, i.e. one
	 * entry for every attribute of the "clean" tuple. The value of this entry
	 * is the attribute number of the corresponding attribute of the
	 * "original" tuple.  (Zero indicates a NULL output attribute, but we do
	 * not use that feature in this routine.)
	 */
	cleanLength = cleanTupType->natts;
	if (cleanLength > 0)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 429 and 436 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 338 and 345 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	Relation	depRel;	ScanKeyData key[2];
	SysScanDesc scan;
	HeapTuple	tup;

	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 97 and 103 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/scankey.c
 Between lines 37 and 43 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/scankey.c
					   Datum argument){
	entry->sk_flags = flags;
	entry->sk_attno = attributeNumber;
	entry->sk_strategy = strategy;
	entry->sk_subtype = subtype;
	entry->sk_argument = argument;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 219 and 236 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapOr.c
 Between lines 203 and 220 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapAnd.c
	int			i;
	for (i = 0; i < node->nplans; i++)
	{
		PlanState  *subnode = node->bitmapplans[i];

		/*
		 * ExecReScan doesn't know about my subplans, so I have to do
		 * changed-parameter signaling myself.
		 */
		if (node->ps.chgParam != NULL)
			UpdateChangedParamSet(subnode, node->ps.chgParam);

		/*
		 * Always rescan the inputs immediately, to ensure we can pass down
		 * any outer tuple that might be used in index quals.
		 */
		ExecReScan(subnode, exprCtxt);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 6323 and 6330 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 2199 and 2206 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 2050 and 2057 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
			check_is_member_of_role(GetUserId(), newOwnerId);
			/* New owner must have CREATE privilege on namespace */
			aclresult = pg_namespace_aclcheck(namespaceOid, newOwnerId,
											  ACL_CREATE);
			if (aclresult != ACLCHECK_OK)
				aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
							   get_namespace_name(namespaceOid));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1548 and 1553 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 1440 and 1445 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 1368 and 1373 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	scan = systable_beginscan(rel, DatabaseNameIndexId, true,							  SnapshotNow, 1, &scankey);
	tuple = systable_getnext(scan);
	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_DATABASE),
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1673 and 1680 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
 Between lines 1658 and 1665 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
				itemid = PageGetItemId(page, offnum);				item = (IndexTuple) PageGetItem(page, itemid);
				if (BTEntrySame(item, &stack->bts_btentry))
				{
					/* Return accurate pointer to where link is now */
					stack->bts_blkno = blkno;
					stack->bts_offset = offnum;
					return buf;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1441 and 1446 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 1405 and 1410 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 1286 and 1292 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
	tup = SearchSysCacheCopy(PROCOID,							 ObjectIdGetDatum(funcOid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for function %u", funcOid);

	procForm = (Form_pg_proc) GETSTRUCT(tup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 525 and 530 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
 Between lines 373 and 378 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
	heap_close(rel, NoLock);#else							/* !HAVE_SYMLINK */
	ereport(ERROR,
			(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			 errmsg("tablespaces are not supported on this platform")));
#endif   /* HAVE_SYMLINK */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1012 and 1020 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
 Between lines 657 and 667 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
				rTuple = heap_modify_tuple(lTuple, tdesc, value, nulls, repl);				simple_heap_update(lRel, &lTuple->t_self, rTuple);

#ifdef NOT_USED					/* currently there are no indexes */
				CatalogUpdateIndexes(lRel, rTuple);
#endif
			}
		}
	}

	heap_endscan(scan);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 723 and 730 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
 Between lines 699 and 706 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
	List	   *result;	ListCell   *cell;

	Assert(IsPointerList(list1));
	Assert(IsPointerList(list2));

	result = list_copy(list1);
	foreach(cell, list2)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 159 and 166 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapOr.c
 Between lines 135 and 142 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapAnd.c
		subresult = (TIDBitmap *) MultiExecProcNode(subnode);
		if (!subresult || !IsA(subresult, TIDBitmap))
			elog(ERROR, "unrecognized result from subplan");

		if (result == NULL)
			result = subresult; /* first subplan */
		else
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1682 and 1691 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 881 and 890 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
							   NameListToString(name));
			/* Must be able to become new owner */
			check_is_member_of_role(GetUserId(), newOwnerId);

			/* New owner must have CREATE privilege on namespace */
			aclresult = pg_namespace_aclcheck(namespaceOid, newOwnerId, ACL_CREATE);
			if (aclresult != ACLCHECK_OK)
				aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
							   get_namespace_name(namespaceOid));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1895 and 1901 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1795 and 1801 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
							 ObjectIdGetDatum(amOid),							 CStringGetDatum(newname),
							 ObjectIdGetDatum(namespaceOid),
							 0))
	{
		ereport(ERROR,
				(errcode(ERRCODE_DUPLICATE_OBJECT),
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 391 and 397 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 194 and 200 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
		AclResult	aclresult;
		aclresult = pg_namespace_aclcheck(namespaceId, GetUserId(),
										  ACL_CREATE);
		if (aclresult != ACLCHECK_OK)
			aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
						   get_namespace_name(namespaceId));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1753 and 1768 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 1666 and 1674 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
						indexIt = false;						/* mark the index as unsafe for old snapshots */
						indexInfo->ii_BrokenHotChain = true;
					}
					else
						indexIt = true;
					/* In any case, exclude the tuple from unique-checking */
					tupleIsAlive = false;
					break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 916 and 921 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 905 and 910 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 894 and 899 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
							"Join Filter", plan,							str, indent, es);
			show_upper_qual(plan->qual,
							"Filter", plan,
							str, indent, es);
			break;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 838 and 847 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 749 and 758 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
	SPI_result = 0;
	if (fnumber > tupdesc->natts || fnumber == 0 ||
		fnumber <= FirstLowInvalidHeapAttributeNumber)
	{
		SPI_result = SPI_ERROR_NOATTRIBUTE;
		return NULL;
	}

	if (fnumber > 0)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1190 and 1195 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 592 and 597 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1029 and 1034 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
				   true,		/* yes, this is an array type */				   InvalidOid,	/* this has no array type */
				   InvalidOid,	/* domain base type - irrelevant */
				   NULL,		/* default value - none */
				   NULL,		/* default binary representation */
				   false,		/* passed by reference */
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1405 and 1410 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2702 and 2707 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	opfTup = SearchSysCache(OPFAMILYOID,							ObjectIdGetDatum(opfid),
							0, 0, 0);
	if (!HeapTupleIsValid(opfTup))
		elog(ERROR, "cache lookup failed for opfamily %u", opfid);
	opfForm = (Form_pg_opfamily) GETSTRUCT(opfTup);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1749 and 1755 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 1254 and 1260 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
							cstate->filename)));
		fstat(fileno(cstate->copy_file), &st);
		if (S_ISDIR(st.st_mode))
			ereport(ERROR,
					(errcode(ERRCODE_WRONG_OBJECT_TYPE),
					 errmsg("\"%s\" is a directory", cstate->filename)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 320 and 326 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 1455 and 1461 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	pg_rusage_init(&ru0);
	relname = RelationGetRelationName(onerel);
	ereport(elevel,
			(errmsg("vacuuming \"%s.%s\"",
					get_namespace_name(RelationGetNamespace(onerel)),
					relname)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 592 and 599 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
 Between lines 569 and 576 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
	ListCell   *cell;	ListCell   *prev;

	Assert(IsPointerList(list));
	check_list_invariants(list);

	prev = NULL;
	foreach(cell, list)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 141 and 150 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeRecursiveunion.c
 Between lines 93 and 102 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeRecursiveunion.c
			if (plan->numCols > 0)			{
				/* Find or build hashtable entry for this tuple's group */
				entry = (RUHashEntry)
					LookupTupleHashEntry(node->hashtable, slot, &isnew);
				/* Must reset temp context after each hashtable lookup */
				MemoryContextReset(node->tempContext);
				/* Ignore tuple if already seen */
				if (!isnew)
					continue;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1178 and 1185 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 542 and 549 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
		maxoff = PageGetMaxOffsetNumber(page);		for (offnum = FirstOffsetNumber;
			 offnum <= maxoff;
			 offnum = OffsetNumberNext(offnum))
		{
			ItemId		itemid;

			itemid = PageGetItemId(page, offnum);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 980 and 987 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
 Between lines 935 and 942 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
				if (!_bt_pgaddtup(rightpage, newitemsz, newitem, rightoff))				{
					memset(rightpage, 0, BufferGetPageSize(rbuf));
					elog(ERROR, "failed to add new item to the right sibling"
						 " while splitting block %u of index \"%s\"",
						 origpagenumber, RelationGetRelationName(rel));
				}
				rightoff = OffsetNumberNext(rightoff);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 152 and 157 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWorktablescan.c
 Between lines 227 and 232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeValuesscan.c
 Between lines 148 and 153 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeFunctionscan.c
 Between lines 233 and 238 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeCtescan.c
 Between lines 590 and 595 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapHeapscan.c
	scanstate->ss.ps.targetlist = (List *)		ExecInitExpr((Expr *) node->scan.plan.targetlist,
					 (PlanState *) scanstate);
	scanstate->ss.ps.qual = (List *)
		ExecInitExpr((Expr *) node->scan.plan.qual,
					 (PlanState *) scanstate);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 63 and 71 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/foreigncmds.c
 Between lines 651 and 660 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/reloptions.c
			SET_VARSIZE(t, len);			sprintf(VARDATA(t), "%s=%s", def->defname, value);

			astate = accumArrayResult(astate, PointerGetDatum(t),
									  false, TEXTOID,
									  CurrentMemoryContext);
		}
	}

	if (astate)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 4172 and 4183 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 4130 and 4145 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2370 and 2381 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2237 and 2248 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
			int			save_errno = errno;
			/*
			 * If we fail to make the file, delete it to release disk space
			 */
			unlink(tmppath);
			/* if write didn't set errno, assume problem is no disk space */
			errno = save_errno ? save_errno : ENOSPC;

			ereport(ERROR,
					(errcode_for_file_access(),
					 errmsg("could not write to file \"%s\": %m", tmppath)));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 594 and 599 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 545 and 550 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gindatapage.c
	data.node = btree->index->rd_node;	data.rootBlkno = InvalidBlockNumber;
	data.lblkno = BufferGetBlockNumber(lbuf);
	data.rblkno = BufferGetBlockNumber(rbuf);
	data.separator = separator;
	data.nitem = maxoff;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 447 and 454 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hash.c
 Between lines 406 and 413 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hash.c
		if (BufferIsValid(so->hashso_curbuf))			_hash_dropbuf(rel, so->hashso_curbuf);
		so->hashso_curbuf = InvalidBuffer;

		/* release lock on bucket, too */
		if (so->hashso_bucket_blkno)
			_hash_droplock(rel, so->hashso_bucket_blkno, HASH_SHARE);
		so->hashso_bucket_blkno = 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 280 and 285 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 218 and 223 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
			tuple = SearchSysCache(TYPEOID,								   ObjectIdGetDatum(keyType),
								   0, 0, 0);
			if (!HeapTupleIsValid(tuple))
				elog(ERROR, "cache lookup failed for type %u", keyType);
			typeTup = (Form_pg_type) GETSTRUCT(tuple);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2024 and 2036 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1895 and 1907 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1767 and 1779 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1638 and 1650 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
									 PointerGetDatum(name),									 ObjectIdGetDatum(namespaceId),
									 0, 0))
			{
				/* Found something else first in path */
				break;
			}
		}
	}

	ReleaseSysCache(tup);

	return visible;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 359 and 365 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/prepare.c
 Between lines 2200 and 2205 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
									 COERCION_ASSIGNMENT,									 COERCE_IMPLICIT_CAST,
									 -1);
		if (expr == NULL)
			ereport(ERROR,
					(errcode(ERRCODE_DATATYPE_MISMATCH),
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 774 and 783 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 373 and 382 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
	START_CRIT_SECTION();
	MarkBufferDirty(buf);

	/* XLOG stuff */
	if (!seqrel->rd_istemp)
	{
		xl_seq_rec	xlrec;
		XLogRecPtr	recptr;
		XLogRecData rdata[2];
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 668 and 676 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 599 and 607 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
		SPI_result = SPI_ERROR_ARGUMENT;		return NULL;
	}

	if (_SPI_curid + 1 == _SPI_connected)		/* connected */
	{
		if (_SPI_current != &(_SPI_stack[_SPI_curid + 1]))
			elog(ERROR, "SPI stack corrupted");
		oldcxt = MemoryContextSwitchTo(_SPI_current->savedcxt);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3512 and 3520 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 3494 and 3502 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
				ExprState  *e;
				/* argument type is known to be xml */
				Assert(list_length(xmlExpr->args) == 1);

				e = (ExprState *) linitial(xmlExpr->args);
				value = ExecEvalExpr(e, econtext, &isnull, NULL);
				if (isnull)
					return (Datum) 0;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2088 and 2097 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 2007 and 2016 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	if (vacuumed_pages > 0)	{
		/* get last reaped page from vacuum_pages */
		last_vacuum_page = vacuum_pages->pagedesc[vacuumed_pages - 1];
		last_vacuum_block = last_vacuum_page->blkno;
	}
	else
	{
		last_vacuum_page = NULL;
		last_vacuum_block = InvalidBlockNumber;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 7969 and 7977 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 7926 and 7934 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	ListCell   *cur_item;	ListCell   *prev_item;

	prev_item = NULL;
	cur_item = list_head(on_commits);

	while (cur_item != NULL)
	{
		OnCommitItem *oc = (OnCommitItem *) lfirst(cur_item);
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 274 and 281 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/foreign/foreign.c
 Between lines 742 and 749 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/prepare.c
	MemoryContext per_query_ctx;	MemoryContext oldcontext;

	/* check to see if caller supports us returning a tuplestore */
	if (rsinfo == NULL || !IsA(rsinfo, ReturnSetInfo))
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("set-valued function called in context that cannot accept a set")));
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1377 and 1385 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1354 and 1362 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1323 and 1331 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1272 and 1280 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	ereport(ERROR,			(errcode(ERRCODE_UNDEFINED_FUNCTION),
			 errmsg("function %s does not exist",
					func_signature_string(procname, 1, argList))));

	return InvalidOid;			/* keep compiler quiet */
}

static Oid
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 3671 and 3679 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 3618 and 3626 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 3586 and 3594 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	if (TransactionIdIsNormal(xid) &&		TransactionIdPrecedes(xid, cutoff_xid))
	{
		if (buf != InvalidBuffer)
		{
			/* trade in share lock for exclusive lock */
			LockBuffer(buf, BUFFER_LOCK_UNLOCK);
			LockBuffer(buf, BUFFER_LOCK_EXCLUSIVE);
			buf = InvalidBuffer;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1003 and 1010 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/multixact.c
 Between lines 752 and 766 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/multixact.c
	LWLockAcquire(MultiXactOffsetControlLock, LW_EXCLUSIVE);
	pageno = MultiXactIdToOffsetPage(multi);
	entryno = MultiXactIdToOffsetEntry(multi);

	/*
	 * Note: we pass the MultiXactId to SimpleLruReadPage as the "transaction"
	 * to complain about if there's any I/O error.  This is kinda bogus, but
	 * since the errors will always give the full pathname, it should be clear
	 * enough that a MultiXactId is really involved.  Perhaps someday we'll
	 * take the trouble to generalize the slru.c error reporting code.
	 */
	slotno = SimpleLruReadPage(MultiXactOffsetCtl, pageno, true, multi);
	offptr = (MultiXactOffset *) MultiXactOffsetCtl->shared->page_buffer[slotno];
	offptr += entryno;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 1305 and 1317 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 893 and 905 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
				if (doFillInner && !node->mj_MatchedInner)				{
					/*
					 * Generate a fake join tuple with nulls for the outer
					 * tuple, and return it if it passes the non-join quals.
					 */
					TupleTableSlot *result;

					node->mj_MatchedInner = true;		/* do it only once */

					result = MJFillInner(node);
					if (result)
						return result;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 2908 and 2913 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2654 and 2659 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	char		lastRestartPointFname[MAXPGPATH];	char	   *dp;
	char	   *endp;
	const char *sp;
	int			rc;
	bool		signaled;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 4098 and 4106 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4158 and 4166 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 473 and 481 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtxlog.c
	buffer = XLogReadBuffer(xlrec->node, xlrec->block, false);	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))
	{
		UnlockReleaseBuffer(buffer);
		return;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1942 and 1949 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
 Between lines 2104 and 2111 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
 Between lines 1630 and 1637 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
						case HeapTupleMayBeUpdated:							break;

						case HeapTupleUpdated:
							if (IsXactIsoLevelSerializable)
								ereport(ERROR,
								 (errcode(ERRCODE_T_R_SERIALIZATION_FAILURE),
								  errmsg("could not serialize access due to concurrent update")));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 148 and 156 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 176 and 184 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 190 and 198 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 78 and 86 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 120 and 128 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 134 and 142 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 92 and 100 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 106 and 114 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 162 and 170 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
	if (a > b)		PG_RETURN_INT32(1);
	else if (a == b)
		PG_RETURN_INT32(0);
	else
		PG_RETURN_INT32(-1);
}

Datum
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2500 and 2507 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2556 and 2563 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2612 and 2619 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2668 and 2675 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2821 and 2828 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2884 and 2891 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
						  AclMode mask, AclMaskHow how){
	AclMode		result;
	HeapTuple	tuple;
	Datum		aclDatum;
	bool		isNull;
	Acl		   *acl;
	Oid			ownerId;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 622 and 632 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
 Between lines 705 and 715 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
		other = a;	}
	else
	{
		result = a;
		other = b;
	}
	/* And union the shorter input into the result */
	otherlen = other->nwords;
	for (i = 0; i < otherlen; i++)
		result->words[i] |= other->words[i];
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1325 and 1334 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1338 and 1347 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1351 and 1360 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1364 and 1373 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
	for (i = 0; i < TRIGGER_NUM_EVENT_CLASSES; i++)	{
		if (n[i] > 0)
		{
			tnew = (int *) palloc(n[i] * sizeof(int));
			memcpy(tnew, t[i], n[i] * sizeof(int));
			t[i] = tnew;
		}
		else
			t[i] = NULL;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 489 and 520 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
 Between lines 588 and 607 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
	PopActiveSnapshot();
	/*
	 * Commit this transaction to make the indisready update visible.
	 */
	CommitTransactionCommand();
	StartTransactionCommand();

	/*
	 * Phase 3 of concurrent index build
	 *
	 * We once again wait until no transaction can have the table open with
	 * the index marked as read-only for updates.
	 */
	old_lockholders = GetLockConflicts(&heaplocktag, ShareLock);

	while (VirtualTransactionIdIsValid(*old_lockholders))
	{
		VirtualXactLockTableWait(*old_lockholders);
		old_lockholders++;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1626 and 1633 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 1691 and 1698 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
					if (do_shrinking &&						!(tuple.t_data->t_infomask & HEAP_XMIN_COMMITTED))
					{
						ereport(LOG,
								(errmsg("relation \"%s\" TID %u/%u: XMIN_COMMITTED not set for transaction %u --- cannot shrink relation",
										relname, blkno, offnum,
									 HeapTupleHeaderGetXmin(tuple.t_data))));
						do_shrinking = false;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 210 and 217 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
 Between lines 242 and 249 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
	if (def->arg == NULL)		ereport(ERROR,
				(errcode(ERRCODE_SYNTAX_ERROR),
				 errmsg("%s requires a parameter",
						def->defname)));
	switch (nodeTag(def->arg))
	{
		case T_TypeName:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 523 and 537 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/foreigncmds.c
 Between lines 791 and 805 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/foreigncmds.c
 Between lines 1060 and 1074 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/foreigncmds.c
	tp = heap_modify_tuple(tp, RelationGetDescr(rel),						   repl_val, repl_null, repl_repl);

	simple_heap_update(rel, &tp->t_self, tp);
	CatalogUpdateIndexes(rel, tp);

	heap_close(rel, RowExclusiveLock);
	heap_freetuple(tp);
}


/*
 * Drop user mapping
 */
void
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 390 and 397 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 469 and 476 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
	else	{
		resultArray = array_get_slice(array_source, i,
									  upper.indx, lower.indx,
									  astate->refattrlength,
									  astate->refelemlength,
									  astate->refelembyval,
									  astate->refelemalign);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3022 and 3029 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3114 and 3121 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_SUBABORT:			while (s->parent != NULL)
			{
				if (s->blockState == TBLOCK_SUBINPROGRESS)
					s->blockState = TBLOCK_SUBABORT_PENDING;
				else if (s->blockState == TBLOCK_SUBABORT)
					s->blockState = TBLOCK_SUBABORT_END;
				else
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 220 and 228 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
 Between lines 608 and 616 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/bitmapset.c
	Bitmapset  *result;	const Bitmapset *other;
	int			otherlen;
	int			i;

	/* Handle cases where either input is NULL */
	if (a == NULL)
		return bms_copy(b);
	if (b == NULL)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 884 and 892 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
 Between lines 897 and 905 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
 Between lines 1164 and 1172 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
	WRITE_OID_FIELD(opno);	WRITE_OID_FIELD(opfuncid);
	WRITE_OID_FIELD(opresulttype);
	WRITE_BOOL_FIELD(opretset);
	WRITE_NODE_FIELD(args);
	WRITE_LOCATION_FIELD(location);
}

static void
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 971 and 980 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 1003 and 1012 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
				   LVRelStats *vacrelstats){
	IndexVacuumInfo ivinfo;
	PGRUsage	ru0;

	pg_rusage_init(&ru0);

	ivinfo.index = indrel;
	ivinfo.vacuum_full = false;
	ivinfo.analyze_only = false;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1638 and 1658 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1767 and 1787 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1895 and 1915 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
									 PointerGetDatum(name),									 ObjectIdGetDatum(namespaceId),
									 0, 0))
			{
				/* Found something else first in path */
				break;
			}
		}
	}

	ReleaseSysCache(tup);

	return visible;
}

/*
 * TSConfigGetCfgid - find a TS config by possibly qualified name
 *
 * If not found, returns InvalidOid if failOK, else throws error
 */
Oid
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1155 and 1164 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
 Between lines 1285 and 1294 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
		if (isSharedObjectPinned(AuthIdRelationId, roleid, sdepRel))		{
			ObjectAddress obj;

			obj.classId = AuthIdRelationId;
			obj.objectId = roleid;
			obj.objectSubId = 0;

			ereport(ERROR,
					(errcode(ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST),
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 589 and 600 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/multixact.c
 Between lines 620 and 631 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/multixact.c
	TransactionId *members;	int			nmembers;

	nmembers = GetMultiXactIdMembers(multi, &members);

	if (nmembers >= 0)
	{
		int			i;

		for (i = 0; i < nmembers; i++)
		{
			TransactionId member = members[i];
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 7940 and 7947 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 7982 and 7989 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
			on_commits = list_delete_cell(on_commits, cur_item, prev_item);			pfree(oc);
			if (prev_item)
				cur_item = lnext(prev_item);
			else
				cur_item = list_head(on_commits);
		}
		else
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2204 and 2212 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 2280 and 2288 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
									"SPI Plan",									ALLOCSET_SMALL_MINSIZE,
									ALLOCSET_SMALL_INITSIZE,
									ALLOCSET_SMALL_MAXSIZE);
	oldcxt = MemoryContextSwitchTo(plancxt);

	/* Copy the SPI plan into its own context */
	newplan = (SPIPlanPtr) palloc(sizeof(_SPI_plan));
	newplan->magic = _SPI_PLAN_MAGIC;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 75 and 83 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execGrouping.c
 Between lines 145 and 153 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execGrouping.c
	for (i = numCols; --i >= 0;)	{
		AttrNumber	att = matchColIdx[i];
		Datum		attr1,
					attr2;
		bool		isNull1,
					isNull2;

		attr1 = slot_getattr(slot1, att, &isNull1);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 549 and 557 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/reloptions.c
 Between lines 629 and 637 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/reloptions.c
			if (namspace == NULL)			{
				if (def->defnamespace != NULL)
					continue;
			}
			else if (def->defnamespace == NULL)
				continue;
			else if (pg_strcasecmp(def->defnamespace, namspace) != 0)
				continue;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 343 and 351 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
 Between lines 697 and 705 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
	WRITE_INT_FIELD(numCols);
	appendStringInfo(str, " :dupColIdx");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %d", node->dupColIdx[i]);

	appendStringInfo(str, " :dupOperators");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %u", node->dupOperators[i]);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 576 and 582 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1174 and 1180 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
			   InvalidOid,		/* relation oid (n/a here) */			   0,				/* relation kind (ditto) */
			   GetUserId(),		/* owner's ID */
			   -1,				/* internal size (always varlena) */
			   TYPTYPE_BASE,	/* type-type (base type) */
			   TYPCATEGORY_ARRAY,		/* type-category (array) */
			   false,			/* array types are never preferred */
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1665 and 1673 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1842 and 1850 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1537 and 1545 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	tup = SearchSysCacheCopy(TYPEOID,							 ObjectIdGetDatum(domainoid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for type %u", domainoid);
	typTup = (Form_pg_type) GETSTRUCT(tup);

	/* Check it's a domain and check user has permission for ALTER DOMAIN */
	checkDomainOwner(tup, typename);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 205 and 212 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/conversioncmds.c
 Between lines 261 and 268 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/conversioncmds.c
	rel = heap_open(ConversionRelationId, RowExclusiveLock);
	conversionOid = FindConversionByName(name);
	if (!OidIsValid(conversionOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("conversion \"%s\" does not exist",
						NameListToString(name))));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1474 and 1480 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
 Between lines 1505 and 1511 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 1781 and 1787 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
	if (!pg_type_ownercheck(sourcetypeid, GetUserId())		&& !pg_type_ownercheck(targettypeid, GetUserId()))
		ereport(ERROR,
				(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
				 errmsg("must be owner of type %s or type %s",
						format_type_be(sourcetypeid),
						format_type_be(targettypeid))));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 408 and 418 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
 Between lines 490 and 498 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
			case 3:				a += ((uint32) k[2] << 16);
			case 2:
				a += ((uint32) k[1] << 8);
			case 1:
				a += k[0];
				/* case 0: nothing left to add */
		}
#endif   /* WORDS_BIGENDIAN */
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 879 and 885 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 899 and 905 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
	ScanKeyInit(&key[0],				Anum_pg_trigger_tgrelid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(relid));
	ScanKeyInit(&key[1],
				Anum_pg_trigger_tgname,
				BTEqualStrategyNumber, F_NAMEEQ,
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1896 and 1902 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 2398 and 2404 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
		stats->stats_valid = true;		stats->stanullfrac = 1.0;
		if (is_varwidth)
			stats->stawidth = 0;	/* "unknown" */
		else
			stats->stawidth = stats->attrtype->typlen;
		stats->stadistinct = 0.0;		/* "unknown" */
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3223 and 3235 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3322 and 3334 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	TransactionState s = CurrentTransactionState;	TransactionState target,
				xact;
	ListCell   *cell;
	char	   *name = NULL;

	switch (s->blockState)
	{
			/*
			 * We can't rollback to a savepoint if there is no savepoint
			 * defined.
			 */
		case TBLOCK_INPROGRESS:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 888 and 894 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 1033 and 1039 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
	heap_fill_tuple(tupleDesc,					toast_values,
					toast_isnull,
					(char *) new_data + olddata->t_hoff,
					new_data_len,
					&(new_data->t_infomask),
					has_nulls ? new_data->t_bits : NULL);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3031 and 3038 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3123 and 3130 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
						 BlockStateAsString(s->blockState));				s = s->parent;
			}
			if (s->blockState == TBLOCK_INPROGRESS)
				s->blockState = TBLOCK_ABORT_PENDING;
			else if (s->blockState == TBLOCK_ABORT)
				s->blockState = TBLOCK_ABORT_END;
			else
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 860 and 870 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
 Between lines 922 and 932 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtutils.c
			if ((key->sk_flags & SK_BT_REQFWD) &&				ScanDirectionIsForward(dir))
				*continuescan = false;
			else if ((key->sk_flags & SK_BT_REQBKWD) &&
					 ScanDirectionIsBackward(dir))
				*continuescan = false;

			/*
			 * In any case, this indextuple doesn't match the qual.
			 */
			return false;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2516 and 2522 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 3529 and 3535 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	tuple = SearchSysCache(DATABASEOID,						   ObjectIdGetDatum(db_oid),
						   0, 0, 0);
	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_DATABASE),
				 errmsg("database with OID %u does not exist", db_oid)));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1799 and 1812 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 2190 and 2203 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 1110 and 1122 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execUtils.c
			if (!ExecQual(predicate, econtext, false))				continue;
		}

		/*
		 * FormIndexDatum fills in its values and isnull parameters with the
		 * appropriate values for the column(s) of the index.
		 */
		FormIndexDatum(indexInfo,
					   slot,
					   estate,
					   values,
					   isnull);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 228 and 238 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeCtescan.c
 Between lines 147 and 157 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWorktablescan.c
	ExecAssignExprContext(estate, &scanstate->ss.ps);
	/*
	 * initialize child expressions
	 */
	scanstate->ss.ps.targetlist = (List *)
		ExecInitExpr((Expr *) node->scan.plan.targetlist,
					 (PlanState *) scanstate);
	scanstate->ss.ps.qual = (List *)
		ExecInitExpr((Expr *) node->scan.plan.qual,
					 (PlanState *) scanstate);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3878 and 3887 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 3894 and 3903 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
				ItemPointerSetInvalid(&(new_event.ate_ctid2));			}
			else
			{
				Assert(oldtup == NULL);
				Assert(newtup == NULL);
				ItemPointerSetInvalid(&(new_event.ate_ctid1));
				ItemPointerSetInvalid(&(new_event.ate_ctid2));
			}
			break;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 161 and 169 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
 Between lines 371 and 379 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
	if (record->xl_info & XLR_BKP_BLOCK_1)		return;

	buffer = XLogReadBuffer(data->node, data->blkno, false);
	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (!XLByteLE(lsn, PageGetLSN(page)))
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1784 and 1791 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
 Between lines 2028 and 2035 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
		   ItemPointer tupleid,		   TupleTableSlot *planSlot,
		   DestReceiver *dest,
		   EState *estate)
{
	HeapTuple	tuple;
	ResultRelInfo *resultRelInfo;
	Relation	resultRelationDesc;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1388 and 1394 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1506 and 1515 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
			new_record_repl[Anum_pg_auth_members_admin_option - 1] = true;
			tuple = heap_modify_tuple(authmem_tuple, pg_authmem_dsc,
									  new_record,
									  new_record_nulls, new_record_repl);
			simple_heap_update(pg_authmem_rel, &tuple->t_self, tuple);
			CatalogUpdateIndexes(pg_authmem_rel, tuple);
		}

		ReleaseSysCache(authmem_tuple);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3179 and 3193 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3445 and 3459 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_SUBINPROGRESS:			/* Normal subtransaction start */
			PushTransaction();
			s = CurrentTransactionState;		/* changed by push */

			/*
			 * Savepoint names, like the TransactionState block itself, live
			 * in TopTransactionContext.
			 */
			if (name)
				s->name = MemoryContextStrdup(TopTransactionContext, name);
			break;

			/* These cases are invalid. */
		case TBLOCK_DEFAULT:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 605 and 621 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistutil.c
 Between lines 441 and 460 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
		ereport(ERROR,				(errcode(ERRCODE_INDEX_CORRUPTED),
				 errmsg("index \"%s\" contains corrupted page at block %u",
						RelationGetRelationName(rel),
						BufferGetBlockNumber(buf)),
				 errhint("Please REINDEX it.")));
}

/*
 *	_bt_getbuf() -- Get a buffer by block number for read or write.
 *
 *		blkno == P_NEW means to get an unallocated index page.	The page
 *		will be initialized before returning it.
 *
 *		When this routine returns, the appropriate lock is set on the
 *		requested buffer and its reference count has been incremented
 *		(ie, the buffer is "locked and pinned").  Also, we apply
 *		_bt_checkpage to sanity-check the page (except in P_NEW case).
 */
Buffer
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 4555 and 4563 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4661 and 4669 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4720 and 4728 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
							false);	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))		/* changes are applied */
	{
		UnlockReleaseBuffer(buffer);
		return;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 466 and 472 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
 Between lines 485 and 491 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
											  node->keyColIdx,											  node->tab_eq_funcs,
											  node->tab_hash_funcs,
											  nbuckets,
											  sizeof(TupleHashEntryData),
											  node->hashtablecxt,
											  node->hashtempcxt);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 195 and 201 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execTuples.c
 Between lines 257 and 263 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execTuples.c
 Between lines 328 and 340 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execTuples.c
	ExecClearTuple(slot);
	/*
	 * Release any old descriptor.	Also release old Datum/isnull arrays if
	 * present (we don't bother to check if they could be re-used).
	 */
	if (slot->tts_tupleDescriptor)
		ReleaseTupleDesc(slot->tts_tupleDescriptor);

	if (slot->tts_values)
		pfree(slot->tts_values);
	if (slot->tts_isnull)
		pfree(slot->tts_isnull);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 568 and 575 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
 Between lines 709 and 716 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
	pg_index = heap_open(IndexRelationId, RowExclusiveLock);
	indexTuple = SearchSysCacheCopy(INDEXRELID,
									ObjectIdGetDatum(indexRelationId),
									0, 0, 0);
	if (!HeapTupleIsValid(indexTuple))
		elog(ERROR, "cache lookup failed for index %u", indexRelationId);
	indexForm = (Form_pg_index) GETSTRUCT(indexTuple);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1422 and 1430 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 2100 and 2108 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
		switch (rte->rtekind)		{
			case RTE_RELATION:
			case RTE_SPECIAL:
			case RTE_CTE:
				/* we don't bother to copy eref, aliases, etc; OK? */
				break;
			case RTE_SUBQUERY:
				if (!(flags & QTW_IGNORE_RT_SUBQUERIES))
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 223 and 232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 288 and 295 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
		itup = (IndexTuple) PageGetItem(page, PageGetItemId(page, mid));		result = compareAttEntries(btree->ginstate,
								   btree->entryAttnum, btree->entryValue,
								 gintuple_get_attrnum(btree->ginstate, itup),
								   gin_index_getattr(btree->ginstate, itup));
		if (result == 0)
		{
			stack->off = mid;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 333 and 340 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 672 and 682 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
		new_record_nulls[Anum_pg_authid_rolpassword - 1] = true;	}

	/* valid until */
	if (validUntil)
	{
		new_record[Anum_pg_authid_rolvaliduntil - 1] =
			DirectFunctionCall3(timestamptz_in,
								CStringGetDatum(validUntil),
								ObjectIdGetDatum(InvalidOid),
								Int32GetDatum(-1));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2894 and 2900 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3062 and 3068 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3154 and 3160 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 2214 and 2220 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3355 and 3361 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3201 and 3207 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3257 and 3263 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3530 and 3536 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_ABORT_END:		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
		case TBLOCK_PREPARE:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 362 and 369 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_constraint.c
 Between lines 456 and 463 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_constraint.c
			ScanKeyInit(&skey[0],						Anum_pg_constraint_conname,
						BTEqualStrategyNumber, F_NAMEEQ,
						CStringGetDatum(conname));

			ScanKeyInit(&skey[1],
						Anum_pg_constraint_connamespace,
						BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2758 and 2766 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2503 and 2511 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2559 and 2567 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2615 and 2623 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2671 and 2679 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	HeapTuple	tuple;	Datum		aclDatum;
	bool		isNull;
	Acl		   *acl;
	Oid			ownerId;

	/* Superusers bypass all permission checking. */
	if (superuser_arg(roleid))
		return mask;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1090 and 1096 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginget.c
 Between lines 1118 and 1124 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginget.c
												  pos->lastOffset,												  entry->entry,
												  entry->attnum,
												  datum,
												  datumExtracted,
												  entry->strategy,
												  entry->extra_data);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 769 and 778 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 855 and 864 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 962 and 971 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
			if (leftop && IsA(leftop, RelabelType))				leftop = ((RelabelType *) leftop)->arg;

			Assert(leftop != NULL);

			if (!(IsA(leftop, Var) &&
				  ((Var *) leftop)->varno == scanrelid))
				elog(ERROR, "indexqual doesn't have key on left side");

			varattno = ((Var *) leftop)->varattno;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 103 and 110 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
 Between lines 177 and 184 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
	if (def->arg == NULL)		ereport(ERROR,
				(errcode(ERRCODE_SYNTAX_ERROR),
				 errmsg("%s requires a numeric value",
						def->defname)));
	switch (nodeTag(def->arg))
	{
		case T_Integer:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3344 and 3352 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3517 and 3525 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_SUBINPROGRESS:		case TBLOCK_SUBABORT:
			break;

			/* These cases are invalid. */
		case TBLOCK_DEFAULT:
		case TBLOCK_STARTED:
		case TBLOCK_BEGIN:
		case TBLOCK_SUBBEGIN:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 197 and 203 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
 Between lines 897 and 903 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
	ScanKeyInit(&key[1],				Anum_pg_shdepend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(classId));
	ScanKeyInit(&key[2],
				Anum_pg_shdepend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2210 and 2218 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 2242 and 2250 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
						*wsptr++ = *ptr++;					}
					else
					{
						*wsptr++ = '\0';
						result = lappend(result,
										 makeDefElem(pstrdup(workspace),
								  (Node *) makeString(pstrdup(startvalue))));
						state = CS_WAITKEY;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 721 and 728 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeHash.c
 Between lines 1199 and 1207 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeHash.c
	HashJoinTuple hashTuple;	int			hashTupleSize;

	/* Create the HashJoinTuple */
	hashTupleSize = HJTUPLE_OVERHEAD + tuple->t_len;
	hashTuple = (HashJoinTuple) MemoryContextAlloc(hashtable->batchCxt,
												   hashTupleSize);
	hashTuple->hashvalue = hashvalue;
	memcpy(HJTUPLE_MINTUPLE(hashTuple), tuple, tuple->t_len);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3860 and 3868 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 4949 and 4955 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
		indexTuple = SearchSysCache(INDEXRELID,									ObjectIdGetDatum(indexoid),
									0, 0, 0);
		if (!HeapTupleIsValid(indexTuple))
			elog(ERROR, "cache lookup failed for index %u", indexoid);
		indexStruct = (Form_pg_index) GETSTRUCT(indexTuple);
		if (indexStruct->indisprimary)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 824 and 833 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
 Between lines 899 and 907 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/async.c
	for (;;)	{
		notifyInterruptEnabled = 1;
		if (!notifyInterruptOccurred)
			break;
		notifyInterruptEnabled = 0;
		if (notifyInterruptOccurred)
		{
			if (Trace_notify)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2773 and 2779 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 3348 and 3354 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	pg_tablespace = heap_open(TableSpaceRelationId, AccessShareLock);	ScanKeyInit(&entry[0],
				ObjectIdAttributeNumber,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(spc_oid));
	scan = systable_beginscan(pg_tablespace, TablespaceOidIndexId, true,
							  SnapshotNow, 1, entry);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 126 and 136 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginarrayproc.c
 Between lines 141 and 151 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginarrayproc.c
			nentries = ArrayGetNItems(ARR_NDIM(query), ARR_DIMS(query));			res = true;
			for (i = 0; i < nentries; i++)
			{
				if (!check[i])
				{
					res = false;
					break;
				}
			}
			break;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 299 and 314 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
 Between lines 970 and 984 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
			ereport(ERROR,					(errcode(ERRCODE_CARDINALITY_VIOLATION),
					 errmsg("more than one row returned by a subquery used as an expression")));

		found = true;

		/*
		 * We need to copy the subplan's tuple into our own context, in case
		 * any of the params are pass-by-ref type --- the pointers stored in
		 * the param structs will point at this copied tuple! node->curTuple
		 * keeps track of the copied tuple for eventual freeing.
		 */
		if (node->curTuple)
			heap_freetuple(node->curTuple);
		node->curTuple = ExecCopySlotTuple(slot);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 268 and 275 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/aggregatecmds.c
 Between lines 1061 and 1068 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
	Oid			procOid;	Oid			namespaceOid;
	HeapTuple	tup;
	Form_pg_proc procForm;
	Relation	rel;
	AclResult	aclresult;

	rel = heap_open(ProcedureRelationId, RowExclusiveLock);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 396 and 405 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
 Between lines 482 and 488 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
			case 7:				b += ((uint32) k[6] << 16);
			case 6:
				b += ((uint32) k[5] << 8);
			case 5:
				b += k[4];
			case 4:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1437 and 1444 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 2390 and 2397 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
	pg_index = heap_open(IndexRelationId, RowExclusiveLock);
	indexTuple = SearchSysCacheCopy(INDEXRELID,
									ObjectIdGetDatum(indexId),
									0, 0, 0);
	if (!HeapTupleIsValid(indexTuple))
		elog(ERROR, "cache lookup failed for index %u", indexId);
	indexForm = (Form_pg_index) GETSTRUCT(indexTuple);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 555 and 563 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
 Between lines 610 and 618 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/outfuncs.c
	WRITE_INT_FIELD(numCols);
	appendStringInfo(str, " :grpColIdx");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %d", node->grpColIdx[i]);

	appendStringInfo(str, " :grpOperators");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %u", node->grpOperators[i]);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1057 and 1073 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
 Between lines 1161 and 1177 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
			continue;		}

		/*
		 * Allow explicit specification of database's default tablespace in
		 * temp_tablespaces without triggering permissions checks.
		 */
		if (curoid == MyDatabaseTableSpace)
		{
			tblSpcs[numSpcs++] = InvalidOid;
			continue;
		}

		/* Check permissions similarly */
		aclresult = pg_tablespace_aclcheck(curoid, GetUserId(),
										   ACL_CREATE);
		if (aclresult != ACLCHECK_OK)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 64 and 71 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
 Between lines 270 and 277 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/define.c
	if (def->arg == NULL)		ereport(ERROR,
				(errcode(ERRCODE_SYNTAX_ERROR),
				 errmsg("%s requires a parameter",
						def->defname)));
	switch (nodeTag(def->arg))
	{
		case T_Integer:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1032 and 1039 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/copyfuncs.c
 Between lines 1050 and 1057 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/copyfuncs.c
 Between lines 1405 and 1412 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/copyfuncs.c
	COPY_SCALAR_FIELD(opno);	COPY_SCALAR_FIELD(opfuncid);
	COPY_SCALAR_FIELD(opresulttype);
	COPY_SCALAR_FIELD(opretset);
	COPY_NODE_FIELD(args);
	COPY_LOCATION_FIELD(location);

	return newnode;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 720 and 730 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
 Between lines 1472 and 1482 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
	if (hasnull)		len += BITMAPLEN(numberOfAttributes);

	if (tupleDescriptor->tdhasoid)
		len += sizeof(Oid);

	hoff = len = MAXALIGN(len); /* align user data safely */

	data_len = heap_compute_data_size(tupleDescriptor, values, isnull);

	len += data_len;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 223 and 231 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/indexcmds.c
 Between lines 420 and 428 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 2930 and 2939 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
	if (OidIsValid(tablespaceId) && tablespaceId != MyDatabaseTableSpace)	{
		AclResult	aclresult;

		aclresult = pg_tablespace_aclcheck(tablespaceId, GetUserId(),
										   ACL_CREATE);

		if (aclresult != ACLCHECK_OK)
			aclcheck_error(aclresult, ACL_KIND_TABLESPACE,
						   get_tablespace_name(tablespaceId));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 419 and 429 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
 Between lines 442 and 452 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
	if (a->coerceformat != b->coerceformat &&		a->coerceformat != COERCE_DONTCARE &&
		b->coerceformat != COERCE_DONTCARE)
		return false;

	COMPARE_LOCATION_FIELD(location);

	return true;
}

static bool
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 809 and 818 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 57 and 66 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeGroup.c
	if (node->ss.ps.ps_TupFromTlist)	{
		TupleTableSlot *result;
		ExprDoneCond isDone;

		result = ExecProject(node->ss.ps.ps_ProjInfo, &isDone);
		if (isDone == ExprMultipleResult)
			return result;
		/* Done with that source tuple... */
		node->ss.ps.ps_TupFromTlist = false;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2727 and 2733 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2924 and 2930 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	LWLockAcquire(ControlFileLock, LW_SHARED);	XLByteToSeg(ControlFile->checkPointCopy.redo,
				restartLog, restartSeg);
	XLogFileName(lastRestartPointFname,
				 ControlFile->checkPointCopy.ThisTimeLineID,
				 restartLog, restartSeg);
	LWLockRelease(ControlFileLock);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 228 and 234 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_aggregate.c
 Between lines 148 and 154 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/proclang.c
 Between lines 183 and 189 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/proclang.c
										 PointerGetDatum(NULL),										 PointerGetDatum(NULL),
										 PointerGetDatum(NULL),
										 NIL,
										 PointerGetDatum(NULL),
										 1,
										 0);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 412 and 419 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gininsert.c
 Between lines 220 and 227 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gist.c
 Between lines 162 and 169 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hash.c
	Datum	   *values = (Datum *) PG_GETARG_POINTER(1);	bool	   *isnull = (bool *) PG_GETARG_POINTER(2);
	ItemPointer ht_ctid = (ItemPointer) PG_GETARG_POINTER(3);

#ifdef NOT_USED
	Relation	heapRel = (Relation) PG_GETARG_POINTER(4);
	bool		checkUnique = PG_GETARG_BOOL(5);
#endif
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3470 and 3476 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4707 and 4713 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	Buffer		buffer;	Page		page;
	OffsetNumber offnum;
	ItemId		lp = NULL;
	HeapTupleHeader htup;
	uint32		oldlen;
	uint32		newlen;
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 3346 and 3354 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3190 and 3198 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3246 and 3254 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
			break;
			/* These cases are invalid. */
		case TBLOCK_DEFAULT:
		case TBLOCK_STARTED:
		case TBLOCK_BEGIN:
		case TBLOCK_SUBBEGIN:
		case TBLOCK_END:
		case TBLOCK_SUBEND:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 2459 and 2466 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 2646 and 2653 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	rel = heap_open(TypeRelationId, RowExclusiveLock);
	tup = SearchSysCacheCopy(TYPEOID,
							 ObjectIdGetDatum(typeOid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for type %u", typeOid);
	typTup = (Form_pg_type) GETSTRUCT(tup);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 834 and 843 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
 Between lines 860 and 869 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
	ListCell   *cell;	List	   *result = NIL;

	Assert(IsPointerList(list1));
	Assert(IsPointerList(list2));

	if (list2 == NIL)
		return list_copy(list1);

	foreach(cell, list1)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 1681 and 1687 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1818 and 1824 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
		LocTriggerData.tg_trigtuplebuf = InvalidBuffer;		LocTriggerData.tg_trigger = trigger;
		newtuple = ExecCallTriggerFunc(&LocTriggerData,
									   tgindx[i],
									   relinfo->ri_TrigFunctions,
									   relinfo->ri_TrigInstrument,
									   GetPerTupleMemoryContext(estate));
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 357 and 366 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
 Between lines 454 and 460 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
			case 7:				b += ((uint32) k[6] << 8);
			case 6:
				b += ((uint32) k[5] << 16);
			case 5:
				b += ((uint32) k[4] << 24);
			case 4:
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 278 and 288 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeHashjoin.c
 Between lines 318 and 332 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeHashjoin.c
			if (otherqual == NIL || ExecQual(otherqual, econtext, false))			{
				/*
				 * qualification was satisfied so we project and return the
				 * slot containing the result tuple using ExecProject().
				 */
				TupleTableSlot *result;

				result = ExecProject(node->js.ps.ps_ProjInfo, &isDone);

				if (isDone != ExprEndResult)
				{
					node->js.ps.ps_TupFromTlist =
						(isDone == ExprMultipleResult);
					return result;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1081 and 1093 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 1033 and 1045 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
	if (isNull == NULL)		elog(ERROR, "a NULL isNull pointer was passed");

	if (tuple == NULL)
	{
		/* Kinda bogus but compatible with old behavior... */
		*isNull = true;
		return (Datum) 0;
	}

	tupType = HeapTupleHeaderGetTypeId(tuple);
	tupTypmod = HeapTupleHeaderGetTypMod(tuple);
	tupDesc = lookup_rowtype_tupdesc(tupType, tupTypmod);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 7809 and 7818 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 7743 and 7752 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	locationstr = text_to_cstring(location);
	if (sscanf(locationstr, "%X/%X", &uxlogid, &uxrecoff) != 2)
		ereport(ERROR,
				(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
				 errmsg("could not parse transaction log location \"%s\"",
						locationstr)));

	locationpoint.xlogid = uxlogid;
	locationpoint.xrecoff = uxrecoff;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 373 and 380 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 359 and 366 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
#ifdef WIN32		  encoding == PG_UTF8 ||
#endif
		  (encoding == PG_SQL_ASCII && superuser())))
		ereport(ERROR,
				(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
				 errmsg("encoding %s does not match locale %s",
						pg_encoding_to_char(encoding),
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2041 and 2050 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1858 and 1867 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1710 and 1719 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1579 and 1588 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
	TriggerDesc *trigdesc;	int			ntrigs;
	int		   *tgindx;
	int			i;
	TriggerData LocTriggerData;

	trigdesc = relinfo->ri_TrigDesc;

	if (trigdesc == NULL)
		return;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1809 and 1822 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
 Between lines 1782 and 1795 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
				   ObjectAddresses *addrs){
	ObjectAddress *item;

	/* enlarge array if needed */
	if (addrs->numrefs >= addrs->maxrefs)
	{
		addrs->maxrefs *= 2;
		addrs->refs = (ObjectAddress *)
			repalloc(addrs->refs, addrs->maxrefs * sizeof(ObjectAddress));
		Assert(!addrs->extras);
	}
	/* record this item */
	item = addrs->refs + addrs->numrefs;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1437 and 1448 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 1409 and 1420 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 907 and 918 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
			if ( yy_accept[yy_current_state] )				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 152 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 3260 and 3268 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2572 and 2580 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	tuple = SearchSysCache(PROCOID,						   ObjectIdGetDatum(proc_oid),
						   0, 0, 0);
	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_FUNCTION),
				 errmsg("function with OID %u does not exist", proc_oid)));

	ownerId = ((Form_pg_proc) GETSTRUCT(tuple))->proowner;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 859 and 870 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/pqcomm.c
 Between lines 827 and 838 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/pqcomm.c
	size_t		amount;
	while (len > 0)
	{
		while (PqRecvPointer >= PqRecvLength)
		{
			if (pq_recvbuf())	/* If nothing in buffer, then recv some */
				return EOF;		/* Failed to recv data */
		}
		amount = PqRecvLength - PqRecvPointer;
		if (amount > len)
			amount = len;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 47 and 61 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapOr.c
 Between lines 46 and 60 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapAnd.c
	PlanState **bitmapplanstates;	int			nplans;
	int			i;
	ListCell   *l;
	Plan	   *initNode;

	/* check for unsupported flags */
	Assert(!(eflags & (EXEC_FLAG_BACKWARD | EXEC_FLAG_MARK)));

	/*
	 * Set up empty vector of subplan states
	 */
	nplans = list_length(node->bitmapplans);

	bitmapplanstates = (PlanState **) palloc0(nplans * sizeof(PlanState *));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1465 and 1476 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtsearch.c
 Between lines 852 and 863 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtsearch.c
	if (ScanDirectionIsForward(dir))	{
		so->currPos.moreLeft = false;
		so->currPos.moreRight = true;
	}
	else
	{
		so->currPos.moreLeft = true;
		so->currPos.moreRight = false;
	}
	so->numKilled = 0;			/* just paranoia */
	so->markItemIndex = -1;		/* ditto */
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2288 and 2297 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 1304 and 1313 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
		case T_JoinExpr:			{
				JoinExpr   *join = (JoinExpr *) node;

				if (walker(join->larg, context))
					return true;
				if (walker(join->rarg, context))
					return true;
				if (walker(join->quals, context))
					return true;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2339 and 2349 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2206 and 2216 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	snprintf(tmppath, MAXPGPATH, XLOGDIR "/xlogtemp.%d", (int) getpid());
	unlink(tmppath);

	/* do not use get_sync_bit() here --- want to fsync only at end of fill */
	fd = BasicOpenFile(tmppath, O_RDWR | O_CREAT | O_EXCL | PG_BINARY,
					   S_IRUSR | S_IWUSR);
	if (fd < 0)
		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not create file \"%s\": %m", tmppath)));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2062 and 2078 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 1527 and 1543 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
	Assert(OidIsValid(indexRelation->rd_rel->relam));
	/*
	 * Need an EState for evaluation of index expressions and partial-index
	 * predicates.	Also a slot to hold the current tuple.
	 */
	estate = CreateExecutorState();
	econtext = GetPerTupleExprContext(estate);
	slot = MakeSingleTupleTableSlot(RelationGetDescr(heapRelation));

	/* Arrange for econtext's scan tuple to be the tuple under test */
	econtext->ecxt_scantuple = slot;

	/* Set up execution state for predicate, if any. */
	predicate = (List *)
		ExecPrepareExpr((Expr *) indexInfo->ii_Predicate,
						estate);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1222 and 1232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 1186 and 1196 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
			   StringInfo str, int indent, ExplainState *es){
	List	   *context;
	bool		useprefix;
	Node	   *node;
	char	   *exprstr;
	int			i;

	/* No work if empty qual */
	if (qual == NIL)
		return;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 4186 and 4194 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2253 and 2261 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2385 and 2393 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	if (pg_fsync(fd) != 0)		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not fsync file \"%s\": %m", tmppath)));

	if (close(fd))
		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not close file \"%s\": %m", tmppath)));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 3255 and 3262 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3199 and 3206 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3463 and 3470 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3677 and 3684 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_ABORT:		case TBLOCK_SUBABORT:
		case TBLOCK_ABORT_END:
		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 769 and 779 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistvacuum.c
 Between lines 455 and 466 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistvacuum.c
				recptr = XLogInsert(RM_GIST_ID, XLOG_GIST_PAGE_UPDATE, rdata);				PageSetLSN(page, recptr);
				PageSetTLI(page, ThisTimeLineID);

				pfree(xlinfo);
				pfree(rdata);
			}
			else
				PageSetLSN(page, GetXLogRecPtrForTemp());
		}

		END_CRIT_SECTION();
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1050 and 1064 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 769 and 777 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
	if (pbuf == InvalidBuffer)		elog(ERROR, "failed to re-find parent key in index \"%s\" for deletion target page %u",
			 RelationGetRelationName(rel), target);
	parent = stack->bts_blkno;
	poffset = stack->bts_offset;

	page = BufferGetPage(pbuf);
	opaque = (BTPageOpaque) PageGetSpecialPointer(page);
	maxoff = PageGetMaxOffsetNumber(page);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2471 and 2478 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 2454 and 2461 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
						ereport(ERROR,								(errcode(ERRCODE_BAD_COPY_FILE_FORMAT),
								 !cstate->csv_mode ?
							errmsg("literal carriage return found in data") :
							errmsg("unquoted carriage return found in data"),
								 !cstate->csv_mode ?
						errhint("Use \"\\r\" to represent carriage return.") :
								 errhint("Use quoted CSV field to represent carriage return.")));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 421 and 435 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 158 and 172 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashutil.c
 Between lines 585 and 599 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistutil.c
	Page		page = BufferGetPage(buf);
	/*
	 * ReadBuffer verifies that every newly-read page passes
	 * PageHeaderIsValid, which means it either contains a reasonably sane
	 * page header or is all-zero.	We have to defend against the all-zero
	 * case, however.
	 */
	if (PageIsNew(page))
		ereport(ERROR,
				(errcode(ERRCODE_INDEX_CORRUPTED),
			 errmsg("index \"%s\" contains unexpected zero page at block %u",
					RelationGetRelationName(rel),
					BufferGetBlockNumber(buf)),
				 errhint("Please REINDEX it.")));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2261 and 2271 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 2246 and 2257 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
						*wsptr++ = '\0';						result = lappend(result,
										 makeDefElem(pstrdup(workspace),
								  (Node *) makeString(pstrdup(startvalue))));
						state = CS_WAITKEY;
					}
				}
				else
				{
					*wsptr++ = *ptr;
				}
				break;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2026 and 2034 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 3392 and 3400 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	depRel = heap_open(DependRelationId, AccessShareLock);
	ScanKeyInit(&key[0],
				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(TypeRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 387 and 396 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 137 and 146 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	Relation	depRel;	ScanKeyData key[2];
	SysScanDesc scan;
	HeapTuple	tup;

	depRel = heap_open(DependRelationId, RowExclusiveLock);

	ScanKeyInit(&key[0],
				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 809 and 822 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/slru.c
 Between lines 632 and 644 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/slru.c
		slru_errno = errno;		close(fd);
		return false;
	}

	if (close(fd))
	{
		slru_errcause = SLRU_CLOSE_FAILED;
		slru_errno = errno;
		return false;
	}

	return true;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 809 and 822 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
 Between lines 783 and 795 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
			fcinfo->isnull = true;			result = (Datum) 0;

			/* Deregister shutdown callback, if we made one */
			if (fcache->shutdown_reg)
			{
				UnregisterExprContextCallback(rsi->econtext,
											  ShutdownSQLFunction,
											  PointerGetDatum(fcache));
				fcache->shutdown_reg = false;
			}
		}
		else
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 83 and 95 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 93 and 105 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapHeapscan.c
	if (estate->es_evTuple != NULL &&		estate->es_evTuple[scanrelid - 1] != NULL)
	{
		if (estate->es_evTupleNull[scanrelid - 1])
			return ExecClearTuple(slot);

		ExecStoreTuple(estate->es_evTuple[scanrelid - 1],
					   slot, InvalidBuffer, false);

		/* Does the tuple meet the original qual conditions? */
		econtext->ecxt_scantuple = slot;

		ResetExprContext(econtext);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 3512 and 3521 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 3679 and 3688 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 3488 and 3497 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
		if (read(readFile, readBuf, XLOG_BLCKSZ) != XLOG_BLCKSZ)		{
			ereport(emode,
					(errcode_for_file_access(),
					 errmsg("could not read from log file %u, segment %u, offset %u: %m",
							readId, readSeg, readOff)));
			goto next_record_is_invalid;
		}
		if (!ValidXLOGHeader((XLogPageHeader) readBuf, emode))
			goto next_record_is_invalid;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1933 and 1946 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1805 and 1818 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1676 and 1689 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1548 and 1561 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
								ObjectIdGetDatum(namespaceId),								0, 0);
	}
	else
	{
		/* search for it in search path */
		recomputeNamespacePath();

		foreach(l, activeSearchPath)
		{
			namespaceId = lfirst_oid(l);

			if (namespaceId == myTempNamespace)
				continue;		/* do not look in temp namespace */
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 606 and 614 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 380 and 388 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
		xl_seq_rec	xlrec;		XLogRecPtr	recptr;
		XLogRecData rdata[2];

		xlrec.node = seqrel->rd_node;
		rdata[0].data = (char *) &xlrec;
		rdata[0].len = sizeof(xl_seq_rec);
		rdata[0].buffer = InvalidBuffer;
		rdata[0].next = &(rdata[1]);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 4169 and 4183 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 4127 and 4145 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
			errno = 0;			if ((int) write(fd, buffer, nbytes) != nbytes)
			{
				int			save_errno = errno;

				/*
				 * If we fail to make the file, delete it to release disk
				 * space
				 */
				unlink(tmppath);

				/*
				 * if write didn't set errno, assume problem is no disk space
				 */
				errno = save_errno ? save_errno : ENOSPC;

				ereport(ERROR,
						(errcode_for_file_access(),
					 errmsg("could not write to file \"%s\": %m", tmppath)));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 634 and 646 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
 Between lines 347 and 359 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
			outputbytes = SendFunctionCall(&thisState->finfo, attr);			pq_sendint(&buf, VARSIZE(outputbytes) - VARHDRSZ, 4);
			pq_sendbytes(&buf, VARDATA(outputbytes),
						 VARSIZE(outputbytes) - VARHDRSZ);
			pfree(outputbytes);
		}

		/* Clean up detoasted copy, if any */
		if (DatumGetPointer(attr) != DatumGetPointer(origattr))
			pfree(DatumGetPointer(attr));
	}

	pq_endmessage(&buf);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1333 and 1346 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 1148 and 1161 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
					switch (MJEvalInnerValues(node, innerTupleSlot))					{
						case MJEVAL_MATCHABLE:
							/* proceed to compare it to the current outer */
							node->mj_JoinState = EXEC_MJ_SKIP_TEST;
							break;
						case MJEVAL_NONMATCHABLE:
							/*
							 * current inner can't possibly match any outer;
							 * better to advance the inner scan than the outer.
							 */
							node->mj_JoinState = EXEC_MJ_SKIPINNER_ADVANCE;
							break;
						case MJEVAL_ENDOFJOIN:
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 4344 and 4356 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4256 and 4267 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	buffer = XLogReadBuffer(xlrec->target.node, blkno, false);	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))		/* changes are applied */
	{
		UnlockReleaseBuffer(buffer);
		return;
	}

	offnum = ItemPointerGetOffsetNumber(&(xlrec->target.tid));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1700 and 1708 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1671 and 1679 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	Relation	rel;	HeapTuple	tup;
	ScanKeyData skey[1];
	SysScanDesc scan;

	ScanKeyInit(&skey[0],
				ObjectIdAttributeNumber,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(entryOid));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1343 and 1352 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1228 and 1237 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	procOid = LookupFuncName(procname, 1, argList, true);	if (OidIsValid(procOid))
		return procOid;

	argList[1] = OIDOID;
	argList[2] = INT4OID;

	procOid = LookupFuncName(procname, 3, argList, true);
	if (OidIsValid(procOid))
		return procOid;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2156 and 2165 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2108 and 2124 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
			return myTempNamespace;
		/*
		 * Since this is used only for looking up existing objects, there is
		 * no point in trying to initialize the temp namespace here; and doing
		 * so might create problems for some callers. Just fall through and
		 * give the "does not exist" error.
		 */
	}

	namespaceId = GetSysCacheOid(NAMESPACENAME,
								 CStringGetDatum(nspname),
								 0, 0, 0);
	if (!OidIsValid(namespaceId))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_SCHEMA),
				 errmsg("schema \"%s\" does not exist", nspname)));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1977 and 1989 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 1742 and 1754 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 2151 and 2163 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	s->transactionId = InvalidTransactionId;	s->subTransactionId = InvalidSubTransactionId;
	s->nestingLevel = 0;
	s->gucNestLevel = 0;
	s->childXids = NULL;
	s->nChildXids = 0;
	s->maxChildXids = 0;

	/*
	 * done with abort processing, set current transaction state back to
	 * default
	 */
	s->state = TRANS_DEFAULT;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 4519 and 4526 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 4334 and 4341 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	fd = BasicOpenFile(XLOG_CONTROL_FILE,					   O_RDWR | PG_BINARY,
					   S_IRUSR | S_IWUSR);
	if (fd < 0)
		ereport(PANIC,
				(errcode_for_file_access(),
				 errmsg("could not open control file \"%s\": %m",
						XLOG_CONTROL_FILE)));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 162 and 170 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hash.c
 Between lines 220 and 228 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gist.c
	Datum	   *values = (Datum *) PG_GETARG_POINTER(1);	bool	   *isnull = (bool *) PG_GETARG_POINTER(2);
	ItemPointer ht_ctid = (ItemPointer) PG_GETARG_POINTER(3);

#ifdef NOT_USED
	Relation	heapRel = (Relation) PG_GETARG_POINTER(4);
	bool		checkUnique = PG_GETARG_BOOL(5);
#endif
	IndexTuple	itup;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 283 and 295 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginbulk.c
 Between lines 242 and 254 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginbulk.c
		for (;;)		{
			accum->stack[accum->stackpos] = entry;
			if (entry->left)
			{
				accum->stackpos++;
				entry = entry->left;
			}
			else
				break;
		}
	}
	else
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 660 and 668 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_proc.c
 Between lines 610 and 618 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_proc.c
	tuple = SearchSysCache(PROCOID,						   ObjectIdGetDatum(funcoid),
						   0, 0, 0);
	if (!HeapTupleIsValid(tuple))
		elog(ERROR, "cache lookup failed for function %u", funcoid);
	proc = (Form_pg_proc) GETSTRUCT(tuple);

	tmp = SysCacheGetAttr(PROCOID, tuple, Anum_pg_proc_prosrc, &isnull);
	if (isnull)
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 119 and 136 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/tupdesc.c
 Between lines 86 and 107 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/tupdesc.c
	desc->natts = natts;	desc->constr = NULL;
	desc->tdtypeid = RECORDOID;
	desc->tdtypmod = -1;
	desc->tdhasoid = hasoid;
	desc->tdrefcount = -1;		/* assume not reference-counted */

	return desc;
}

/*
 * CreateTupleDesc
 *		This function allocates a new TupleDesc pointing to a given
 *		Form_pg_attribute array.
 *
 * Note: if the TupleDesc is ever freed, the Form_pg_attribute array
 * will not be freed thereby.
 *
 * Tuple type ID information is initially set for an anonymous record type;
 * caller can overwrite this if needed.
 */
TupleDesc
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 428 and 435 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 97 and 104 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
	char	   *validUntil = NULL;		/* time the login is valid until */	DefElem    *dpassword = NULL;
	DefElem    *dissuper = NULL;
	DefElem    *dinherit = NULL;
	DefElem    *dcreaterole = NULL;
	DefElem    *dcreatedb = NULL;
	DefElem    *dcanlogin = NULL;
	DefElem    *dconnlimit = NULL;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 797 and 806 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 621 and 630 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 390 and 399 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
		rdata[1].data = (char *) page + ((PageHeader) page)->pd_upper;		rdata[1].len = ((PageHeader) page)->pd_special -
			((PageHeader) page)->pd_upper;
		rdata[1].buffer = InvalidBuffer;
		rdata[1].next = NULL;

		recptr = XLogInsert(RM_SEQ_ID, XLOG_SEQ_LOG, rdata);

		PageSetLSN(page, recptr);
		PageSetTLI(page, ThisTimeLineID);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 3316 and 3324 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2712 and 2720 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
	tuple = SearchSysCache(NAMESPACEOID,						   ObjectIdGetDatum(nsp_oid),
						   0, 0, 0);
	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_SCHEMA),
				 errmsg("schema with OID %u does not exist", nsp_oid)));

	ownerId = ((Form_pg_namespace) GETSTRUCT(tuple))->nspowner;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 160 and 170 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 104 and 114 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 90 and 100 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
	int64		b = PG_GETARG_INT64(1);
	if (a > b)
		PG_RETURN_INT32(1);
	else if (a == b)
		PG_RETURN_INT32(0);
	else
		PG_RETURN_INT32(-1);
}

Datum
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 897 and 909 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 798 and 810 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
			if (rightop && IsA(rightop, RelabelType))				rightop = ((RelabelType *) rightop)->arg;

			Assert(rightop != NULL);

			if (IsA(rightop, Const))
			{
				/* OK, simple constant comparison value */
				scanvalue = ((Const *) rightop)->constvalue;
				if (((Const *) rightop)->constisnull)
					flags |= SK_ISNULL;
			}
			else
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 918 and 936 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/readfuncs.c
 Between lines 565 and 583 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/readfuncs.c
 Between lines 536 and 554 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/readfuncs.c
	READ_OID_FIELD(opno);	READ_OID_FIELD(opfuncid);

	/*
	 * The opfuncid is stored in the textual format primarily for debugging
	 * and documentation reasons.  We want to always read it as zero to force
	 * it to be re-looked-up in the pg_operator entry.	This ensures that
	 * stored rules don't have hidden dependencies on operators' functions.
	 * (We don't currently support an ALTER OPERATOR command, but might
	 * someday.)
	 */
	local_node->opfuncid = InvalidOid;

	READ_OID_FIELD(opresulttype);
	READ_BOOL_FIELD(opretset);
	READ_NODE_FIELD(args);
	READ_LOCATION_FIELD(location);

	READ_DONE();
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 283 and 300 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeTidscan.c
 Between lines 70 and 87 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSeqscan.c
	if (estate->es_evTuple != NULL &&		estate->es_evTuple[scanrelid - 1] != NULL)
	{
		if (estate->es_evTupleNull[scanrelid - 1])
			return ExecClearTuple(slot);

		ExecStoreTuple(estate->es_evTuple[scanrelid - 1],
					   slot, InvalidBuffer, false);

		/*
		 * Note that unlike IndexScan, SeqScan never use keys in
		 * heap_beginscan (and this is very bad) - so, here we do not check
		 * are keys ok or not.
		 */

		/* Flag for the next call that no more tuples */
		estate->es_evTupleNull[scanrelid - 1] = true;
		return slot;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 291 and 302 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistget.c
 Between lines 246 and 255 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistget.c
			LockBuffer(so->curbuf, GIST_UNLOCK);			stk = so->stack->next;
			pfree(so->stack);
			so->stack = stk;

			if (so->stack == NULL)
			{
				ReleaseBuffer(so->curbuf);
				so->curbuf = InvalidBuffer;
				return ntids;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1887 and 1902 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1769 and 1784 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1645 and 1660 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1290 and 1305 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1528 and 1543 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1409 and 1424 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
							  ownerId, istmt->is_grant,							  noldmembers, oldmembers,
							  nnewmembers, newmembers);

		ReleaseSysCache(tuple);

		pfree(new_acl);

		/* prevent error when processing duplicate objects */
		CommandCounterIncrement();
	}

	heap_close(relation, RowExclusiveLock);
}

static void
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 684 and 691 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
 Between lines 593 and 600 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
		case RTContainsStrategyNumber:		case RTOldContainsStrategyNumber:
			retval = DatumGetBool(DirectFunctionCall2(box_contain,
													  PointerGetDatum(key),
													PointerGetDatum(query)));
			break;
		case RTContainedByStrategyNumber:
		case RTOldContainedByStrategyNumber:
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 171 and 185 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlogutils.c
 Between lines 138 and 152 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlogutils.c
				elog(DEBUG2, "page %u of relation %s has been dropped",					 hentry->key.blkno, path);
				pfree(path);
			}

			if (hash_search(invalid_page_tab,
							(void *) &hentry->key,
							HASH_REMOVE, NULL) == NULL)
				elog(ERROR, "hash table corrupted");
		}
	}
}

/* Forget any invalid pages in a whole database */
static void
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 699 and 710 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 1870 and 1881 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
		if (nfrozen > 0)		{
			MarkBufferDirty(buf);
			/* no XLOG for temp tables, though */
			if (!onerel->rd_istemp)
			{
				XLogRecPtr	recptr;

				recptr = log_heap_freeze(onerel, buf, FreezeLimit,
										 frozen, nfrozen);
				PageSetLSN(page, recptr);
				PageSetTLI(page, ThisTimeLineID);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1761 and 1771 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1531 and 1541 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	typename = makeTypeNameFromNameList(names);	domainoid = typenameTypeId(NULL, typename, NULL);

	/* Look up the domain in the type table */
	rel = heap_open(TypeRelationId, RowExclusiveLock);

	tup = SearchSysCacheCopy(TYPEOID,
							 ObjectIdGetDatum(domainoid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for type %u", domainoid);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1343 and 1351 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootparse.c
 Between lines 1325 and 1333 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootparse.c
					do_start();
					DefineIndex(makeRangeVar(NULL, LexIDStr(yyvsp[-5].ival), -1),
								LexIDStr(yyvsp[-8].ival),
								yyvsp[-7].oidval,
								LexIDStr(yyvsp[-3].ival),
								NULL,
								yyvsp[-1].list,
								NULL, NIL,
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 86 and 103 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeNestloop.c
 Between lines 655 and 672 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
	if (node->js.ps.ps_TupFromTlist)	{
		TupleTableSlot *result;
		ExprDoneCond isDone;

		result = ExecProject(node->js.ps.ps_ProjInfo, &isDone);
		if (isDone == ExprMultipleResult)
			return result;
		/* Done with that source tuple... */
		node->js.ps.ps_TupFromTlist = false;
	}

	/*
	 * Reset per-tuple memory context to free any expression evaluation
	 * storage allocated in the previous tuple cycle.  Note this can't happen
	 * until we're done projecting out tuples from a join tuple.
	 */
	ResetExprContext(econtext);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 52 and 62 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1772 and 1782 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	bool		result = false;	HeapTuple	utup;

	/* Superusers can always do everything */
	if (superuser())
		return true;

	utup = SearchSysCache(AUTHOID,
						  ObjectIdGetDatum(GetUserId()),
						  0, 0, 0);
	if (HeapTupleIsValid(utup))
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1435 and 1444 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 1413 and 1422 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
		LockBuffer(buffer, BUFFER_LOCK_UNLOCK);		if (keep_buf)
			*userbuf = buffer;
		else
		{
			ReleaseBuffer(buffer);
			*userbuf = InvalidBuffer;
		}
		tuple->t_data = NULL;
		return false;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 750 and 757 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashovfl.c
 Between lines 629 and 636 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashovfl.c
		rbuf = _hash_getbuf_with_strategy(rel,										  rblkno,
										  HASH_WRITE,
										  LH_OVERFLOW_PAGE,
										  bstrategy);
		rpage = BufferGetPage(rbuf);
		ropaque = (HashPageOpaque) PageGetSpecialPointer(rpage);
		Assert(ropaque->hasho_bucket == bucket);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 188 and 201 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execJunk.c
 Between lines 111 and 124 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execJunk.c
	else		cleanMap = NULL;

	/*
	 * Finally create and initialize the JunkFilter struct.
	 */
	junkfilter = makeNode(JunkFilter);

	junkfilter->jf_targetList = targetList;
	junkfilter->jf_cleanTupType = cleanTupType;
	junkfilter->jf_cleanMap = cleanMap;
	junkfilter->jf_resultSlot = slot;

	return junkfilter;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1688 and 1700 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 1464 and 1476 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
		elog(ERROR, "missing chunk number %d for toast value %u in %s",			 nextidx,
			 toast_pointer.va_valueid,
			 RelationGetRelationName(toastrel));

	/*
	 * End scan and close relations
	 */
	systable_endscan_ordered(toastscan);
	index_close(toastidx, AccessShareLock);
	heap_close(toastrel, AccessShareLock);

	return result;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1741 and 1752 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
 Between lines 1673 and 1685 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
	pass = getpwuid(uid);
	if (pass == NULL)
	{
		ereport(LOG,
				(errmsg("local user with ID %d does not exist",
						(int) uid)));
		return false;
	}

	strlcpy(ident_user, pass->pw_name, IDENT_USERNAME_MAX + 1);

	return true;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 7609 and 7618 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 1877 and 1886 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 2758 and 2767 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	if (isAnyTempNamespace(nspOid) || isAnyTempNamespace(oldNspOid))		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			errmsg("cannot move objects into or out of temporary schemas")));

	/* same for TOAST schema */
	if (nspOid == PG_TOAST_NAMESPACE || oldNspOid == PG_TOAST_NAMESPACE)
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("cannot move objects into or out of TOAST schema")));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 4315 and 4332 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4237 and 4254 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	BlockNumber blkno;
	blkno = ItemPointerGetBlockNumber(&(xlrec->target.tid));

	/*
	 * The visibility map may need to be fixed even if the heap page is
	 * already up-to-date.
	 */
	if (xlrec->all_visible_cleared)
	{
		Relation	reln = CreateFakeRelcacheEntry(xlrec->target.node);

		visibilitymap_clear(reln, blkno);
		FreeFakeRelcacheEntry(reln);
	}

	if (record->xl_info & XLR_BKP_BLOCK_1)
		return;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2922 and 2938 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2859 and 2875 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2728 and 2744 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2644 and 2660 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2588 and 2604 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2532 and 2548 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2476 and 2492 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		aclDatum = (Datum) 0;	}
	else
	{
		/* detoast rel's ACL if necessary */
		acl = DatumGetAclP(aclDatum);
	}

	result = aclmask(acl, roleid, ownerId, mask, how);

	/* if we have a detoasted copy, free it */
	if (acl && (Pointer) acl != DatumGetPointer(aclDatum))
		pfree(acl);

	ReleaseSysCache(tuple);

	return result;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 2939 and 2957 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 2724 and 2736 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
		if (fieldno >= maxfields)			ereport(ERROR,
					(errcode(ERRCODE_BAD_COPY_FILE_FORMAT),
					 errmsg("extra data after last expected column")));

		/* Remember start of field on both input and output sides */
		start_ptr = cur_ptr;
		fieldvals[fieldno] = output_ptr;

		/* Scan data for field */
		for (;;)
		{
			char		c;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1959 and 1973 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1835 and 1849 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1717 and 1731 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1593 and 1607 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1475 and 1489 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1356 and 1370 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1238 and 1252 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		else			old_acl = DatumGetAclPCopy(aclDatum);

		/* Determine ID to do the grant as, and available grant options */
		select_best_grantor(GetUserId(), istmt->privileges,
							old_acl, ownerId,
							&grantorId, &avail_goptions);

		/*
		 * Restrict the privileges to what we can actually grant, and emit the
		 * standards-mandated warning and error messages.
		 */
		this_privileges =
			restrict_and_check_grant(istmt->is_grant, avail_goptions,
									 istmt->all_privs, istmt->privileges,
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 221 and 232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeValuesscan.c
 Between lines 142 and 153 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeFunctionscan.c
	ExecInitResultTupleSlot(estate, &scanstate->ss.ps);	ExecInitScanTupleSlot(estate, &scanstate->ss);

	/*
	 * initialize child expressions
	 */
	scanstate->ss.ps.targetlist = (List *)
		ExecInitExpr((Expr *) node->scan.plan.targetlist,
					 (PlanState *) scanstate);
	scanstate->ss.ps.qual = (List *)
		ExecInitExpr((Expr *) node->scan.plan.qual,
					 (PlanState *) scanstate);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 395 and 402 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
 Between lines 225 and 232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
	ScanKeyInit(&skey[0],				Anum_pg_description_objoid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(oid));
	ScanKeyInit(&skey[1],
				Anum_pg_description_classoid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(classoid));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 132 and 142 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 118 and 128 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 76 and 86 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
	int32		b = PG_GETARG_INT32(1);
	if (a > b)
		PG_RETURN_INT32(1);
	else if (a == b)
		PG_RETURN_INT32(0);
	else
		PG_RETURN_INT32(-1);
}

Datum
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 946 and 966 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 898 and 919 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	r = RelationIdGetRelation(relationId);
	if (!RelationIsValid(r))
		elog(ERROR, "could not open relation with OID %u", relationId);

	/* Make note that we've accessed a temporary relation */
	if (r->rd_istemp)
		MyXactAccessedTempRel = true;

	pgstat_initstats(r);

	return r;
}

/* ----------------
 *		try_relation_open - open any relation by relation OID
 *
 *		Same as relation_open, except return NULL instead of failing
 *		if the relation does not exist.
 * ----------------
 */
Relation
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 519 and 535 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/index/indexam.c
 Between lines 1531 and 1547 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
			break;
		lp = PageGetItemId(dp, offnum);

		/* check for unused, dead, or redirected items */
		if (!ItemIdIsNormal(lp))
		{
			/* We should only see a redirect at start of chain */
			if (ItemIdIsRedirected(lp) && at_chain_start)
			{
				/* Follow the redirect */
				offnum = ItemIdGetRedirect(lp);
				at_chain_start = false;
				continue;
			}
			/* else must be end of chain */
			break;
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 174 and 184 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
 Between lines 146 and 156 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtcompare.c
	int16		b = PG_GETARG_INT16(1);
	if (a > b)
		PG_RETURN_INT32(1);
	else if (a == b)
		PG_RETURN_INT32(0);
	else
		PG_RETURN_INT32(-1);
}

Datum
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 743 and 754 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 692 and 704 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
				tup = heap_modify_tuple(tup,										RelationGetDescr(pg_operator_desc),
										values,
										nulls,
										replaces);

				simple_heap_update(pg_operator_desc, &tup->t_self, tup);

				CatalogUpdateIndexes(pg_operator_desc, tup);
			}
		}

		heap_close(pg_operator_desc, RowExclusiveLock);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 393 and 407 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 293 and 307 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
		rdata[1].buffer = InvalidBuffer;		rdata[1].next = NULL;

		recptr = XLogInsert(RM_SEQ_ID, XLOG_SEQ_LOG, rdata);

		PageSetLSN(page, recptr);
		PageSetTLI(page, ThisTimeLineID);
	}

	END_CRIT_SECTION();

	UnlockReleaseBuffer(buf);

	/* process OWNED BY if given */
	if (owned_by)
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 801 and 808 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 348 and 360 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		tup = OpFamilyCacheLookup(amoid, stmt->opfamilyname);		if (!HeapTupleIsValid(tup))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("operator family \"%s\" does not exist for access method \"%s\"",
					   NameListToString(stmt->opfamilyname), stmt->amname)));
		opfamilyoid = HeapTupleGetOid(tup);

		/*
		 * XXX given the superuser check above, there's no need for an
		 * ownership check here
		 */
		ReleaseSysCache(tup);
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 284 and 292 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 658 and 665 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	ScanKeyInit(&key[0],				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(object->classId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(object->objectId));
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 1374 and 1385 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1351 and 1362 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	if (OidIsValid(procOid))		return procOid;

	ereport(ERROR,
			(errcode(ERRCODE_UNDEFINED_FUNCTION),
			 errmsg("function %s does not exist",
					func_signature_string(procname, 1, argList))));

	return InvalidOid;			/* keep compiler quiet */
}

static Oid
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 5792 and 5799 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 7743 and 7750 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	ScanKeyInit(&key[0],				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationGetRelid(rel)));
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2476 and 2498 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2532 and 2554 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2588 and 2610 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2644 and 2666 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2728 and 2750 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2859 and 2882 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		aclDatum = (Datum) 0;	}
	else
	{
		/* detoast rel's ACL if necessary */
		acl = DatumGetAclP(aclDatum);
	}

	result = aclmask(acl, roleid, ownerId, mask, how);

	/* if we have a detoasted copy, free it */
	if (acl && (Pointer) acl != DatumGetPointer(aclDatum))
		pfree(acl);

	ReleaseSysCache(tuple);

	return result;
}

/*
 * Exported routine for examining a user's privileges for a foreign
 * server.
 */
AclMode
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 432 and 442 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 6431 and 6445 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 7735 and 7749 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	HeapTuple	tup;
	/*
	 * SERIAL sequences are those having an auto dependency on one of the
	 * table's columns (we don't care *which* column, exactly).
	 */
	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1203 and 1211 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1917 and 1925 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		Datum		aclDatum;		bool		isNull;
		AclMode		avail_goptions;
		AclMode		this_privileges;
		Acl		   *old_acl;
		Acl		   *new_acl;
		Oid			grantorId;
		Oid			ownerId;
		HeapTuple	newtuple;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2409 and 2421 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 2437 and 2449 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
				CleanupSubTransaction();
				DefineSavepoint(NULL);
				s = CurrentTransactionState;	/* changed by push */
				s->name = name;
				s->savepointLevel = savepointLevel;

				/* This is the same as TBLOCK_SUBBEGIN case */
				AssertState(s->blockState == TBLOCK_SUBBEGIN);
				StartSubTransaction();
				s->blockState = TBLOCK_SUBINPROGRESS;
			}
			break;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 570 and 578 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
 Between lines 665 and 673 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
													   PointerGetDatum(key),													PointerGetDatum(query)));
			break;
		case RTOverlapStrategyNumber:
			retval = DatumGetBool(DirectFunctionCall2(box_overlap,
													  PointerGetDatum(key),
													PointerGetDatum(query)));
			break;
		case RTOverRightStrategyNumber:
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1250 and 1258 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 233 and 241 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeTidscan.c
	if (ba < bb)		return -1;
	if (ba > bb)
		return 1;
	if (oa < ob)
		return -1;
	if (oa > ob)
		return 1;
	return 0;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1937 and 1946 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 2085 and 2094 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	char	   *schemaname;
	amOid = GetSysCacheOid(AMNAME,
						   CStringGetDatum(access_method),
						   0, 0, 0);
	if (!OidIsValid(amOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						access_method)));
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1666 and 1678 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1803 and 1815 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 3948 and 3961 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1968 and 1980 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
		Trigger    *trigger = &trigdesc->triggers[tgindx[i]];
		if (SessionReplicationRole == SESSION_REPLICATION_ROLE_REPLICA)
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_ORIGIN ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		else	/* ORIGIN or LOCAL role */
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_REPLICA ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 487 and 497 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
 Between lines 630 and 640 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginxlog.c
	metabuffer = XLogReadBuffer(data->node, GIN_METAPAGE_BLKNO, false);	if (!BufferIsValid(metabuffer))
		elog(PANIC, "GIN metapage disappeared");
	metapage = BufferGetPage(metabuffer);

	if (!XLByteLE(lsn, PageGetLSN(metapage)))
	{
		memcpy(GinPageGetMeta(metapage), &data->metadata, sizeof(GinMetaPageData));
		PageSetLSN(metapage, lsn);
		PageSetTLI(metapage, ThisTimeLineID);
		MarkBufferDirty(metabuffer);
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2864 and 2878 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 3033 and 3047 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
			strncmp(start_ptr, cstate->null_print, input_len) == 0)			fieldvals[fieldno] = NULL;

		fieldno++;
		/* Done if we hit EOL instead of a delim */
		if (!found_delim)
			break;
	}

	/* Clean up state of attribute_buf */
	output_ptr--;
	Assert(*output_ptr == '\0');
	cstate->attribute_buf.len = (output_ptr - cstate->attribute_buf.data);

	return fieldno;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 3267 and 3277 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 4019 and 4029 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	if (rel->rd_rel->relkind != RELKIND_RELATION &&		rel->rd_rel->relkind != RELKIND_INDEX)
		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("\"%s\" is not a table or index",
						RelationGetRelationName(rel))));

	/* Permissions checks */
	if (!pg_class_ownercheck(RelationGetRelid(rel), GetUserId()))
		aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_CLASS,
					   RelationGetRelationName(rel));
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 93 and 118 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeGroup.c
 Between lines 159 and 179 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeGroup.c
		ExecCopySlot(firsttupleslot, outerslot);		econtext->ecxt_outertuple = firsttupleslot;

		/*
		 * Check the qual (HAVING clause); if the group does not match, ignore
		 * it and loop back to scan the rest of the group.
		 */
		if (ExecQual(node->ss.ps.qual, econtext, false))
		{
			/*
			 * Form and return a projection tuple using the first input tuple.
			 */
			TupleTableSlot *result;
			ExprDoneCond isDone;

			result = ExecProject(node->ss.ps.ps_ProjInfo, &isDone);

			if (isDone != ExprEndResult)
			{
				node->ss.ps.ps_TupFromTlist = (isDone == ExprMultipleResult);
				return result;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 374 and 388 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtree.c
 Between lines 413 and 427 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtree.c
	if (BTScanPosIsValid(so->currPos))	{
		/* Before leaving current page, deal with any killed items */
		if (so->numKilled > 0)
			_bt_killitems(scan, false);
		ReleaseBuffer(so->currPos.buf);
		so->currPos.buf = InvalidBuffer;
	}

	if (BTScanPosIsValid(so->markPos))
	{
		ReleaseBuffer(so->markPos.buf);
		so->markPos.buf = InvalidBuffer;
	}
	so->markItemIndex = -1;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 3162 and 3187 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3288 and 3326 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	if (all_visible_cleared)		visibilitymap_clear(rel, BufferGetBlockNumber(old_buf));
	if (all_visible_cleared_new)
		visibilitymap_clear(rel, BufferGetBlockNumber(dst_buf));

	/* insert index' tuples if needed */
	if (ec->resultRelInfo->ri_NumIndices > 0)
	{
		ExecStoreTuple(&newtup, ec->slot, InvalidBuffer, false);
		ExecInsertIndexTuples(ec->slot, &(newtup.t_self), ec->estate, true);
		ResetPerTupleExprContext(ec->estate);
	}
}

/*
 *	update_hint_bits() -- update hint bits in destination pages
 *
 * Scan all the pages that we moved tuples onto and update tuple status bits.
 * This is not really necessary, but it will save time for future transactions
 * examining these tuples.
 *
 * This pass guarantees that all HEAP_MOVED_IN tuples are marked as
 * XMIN_COMMITTED, so that future tqual tests won't need to check their XVAC.
 *
 * BUT NOTICE that this code fails to clear HEAP_MOVED_OFF tuples from
 * pages that were move source pages but not move dest pages.  The bulk
 * of the move source pages will be physically truncated from the relation,
 * and the last page remaining in the rel will be fixed separately in
 * repair_frag(), so the only cases where a MOVED_OFF tuple won't get its
 * hint bits updated are tuples that are moved as part of a chain and were
 * on pages that were not either move destinations nor at the end of the rel.
 * To completely ensure that no MOVED_OFF tuples remain unmarked, we'd have
 * to remember and revisit those pages too.
 *
 * One wonders whether it wouldn't be better to skip this work entirely,
 * and let the tuple status updates happen someplace that's not holding an
 * exclusive lock on the relation.
 */
static void
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1621 and 1635 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1750 and 1764 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 1878 and 1892 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2007 and 2021 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
		ListCell   *l;
		visible = false;
		foreach(l, activeSearchPath)
		{
			Oid			namespaceId = lfirst_oid(l);

			if (namespaceId == myTempNamespace)
				continue;		/* do not look in temp namespace */

			if (namespaceId == namespace)
			{
				/* Found it first in path */
				visible = true;
				break;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 450 and 458 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 902 and 910 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 996 and 1004 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
				addFamilyMember(&operators, member, false);				break;
			case OPCLASS_ITEM_FUNCTION:
				if (item->number <= 0 || item->number > maxProcNumber)
					ereport(ERROR,
							(errcode(ERRCODE_INVALID_OBJECT_DEFINITION),
							 errmsg("invalid procedure number %d,"
									" must be between 1 and %d",
									item->number, maxProcNumber)));
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1025 and 1042 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 1276 and 1293 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
						break;					case MJEVAL_ENDOFJOIN:
						/* No more outer tuples */
						MJ_printf("ExecMergeJoin: end of outer subplan\n");
						innerTupleSlot = node->mj_InnerTupleSlot;
						if (doFillInner && !TupIsNull(innerTupleSlot))
						{
							/*
							 * Need to emit right-join tuples for remaining
							 * inner tuples.
							 */
							node->mj_JoinState = EXEC_MJ_ENDOUTER;
							break;
						}
						/* Otherwise we're done. */
						return NULL;
				}
				break;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 838 and 853 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 960 and 975 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
				  int maxOpNumber, int maxProcNumber,				  List *items)
{
	List	   *operators;		/* OpFamilyMember list for operators */
	List	   *procedures;		/* OpFamilyMember list for support procs */
	ListCell   *l;

	operators = NIL;
	procedures = NIL;

	/*
	 * Scan the "items" list to obtain additional info.
	 */
	foreach(l, items)
	{
		CreateOpClassItem *item = lfirst(l);
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1426 and 1441 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 998 and 1013 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 1249 and 1264 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
					TupleTableSlot *result;
					node->mj_MatchedOuter = true;		/* do it only once */

					result = MJFillOuter(node);
					if (result)
						return result;
				}

				/*
				 * now we get the next outer tuple, if any
				 */
				outerTupleSlot = ExecProcNode(outerPlan);
				node->mj_OuterTupleSlot = outerTupleSlot;
				MJ_DEBUG_PROC_NODE(outerTupleSlot);
				node->mj_MatchedOuter = false;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 3499 and 3509 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3572 and 3582 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	IndexBulkDeleteResult *stats;	IndexVacuumInfo ivinfo;
	PGRUsage	ru0;

	pg_rusage_init(&ru0);

	ivinfo.index = indrel;
	ivinfo.vacuum_full = true;
	ivinfo.analyze_only = false;
	ivinfo.estimated_count = false;
	ivinfo.message_level = elevel;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1491 and 1502 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 1455 and 1466 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
							transfn_oid,							finalfn_oid,
							&transfnexpr,
							&finalfnexpr);

	fmgr_info(transfn_oid, &peraggstate->transfn);
	peraggstate->transfn.fn_expr = (Node *) transfnexpr;

	if (OidIsValid(finalfn_oid))
	{
		fmgr_info(finalfn_oid, &peraggstate->finalfn);
		peraggstate->finalfn.fn_expr = (Node *) finalfnexpr;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 621 and 637 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 710 and 726 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
				continue;		/* can't happen, toast_action would be 'p' */			if (att[i]->attstorage != 'x' && att[i]->attstorage != 'e')
				continue;
			if (toast_sizes[i] > biggest_size)
			{
				biggest_attno = i;
				biggest_size = toast_sizes[i];
			}
		}

		if (biggest_attno < 0)
			break;

		/*
		 * Store this external
		 */
		i = biggest_attno;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1874 and 1886 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 7606 and 7618 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
						newschema)));
	/* disallow renaming into or out of temp schemas */
	if (isAnyTempNamespace(nspOid) || isAnyTempNamespace(oldNspOid))
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
			errmsg("cannot move objects into or out of temporary schemas")));

	/* same for TOAST schema */
	if (nspOid == PG_TOAST_NAMESPACE || oldNspOid == PG_TOAST_NAMESPACE)
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("cannot move objects into or out of TOAST schema")));
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 340 and 353 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
 Between lines 442 and 452 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
#ifdef WORDS_BIGENDIAN		switch (len)			/* all the case statements fall through */
		{
			case 11:
				c += ((uint32) k[10] << 8);
			case 10:
				c += ((uint32) k[9] << 16);
			case 9:
				c += ((uint32) k[8] << 24);
				/* the lowest byte of c is reserved for the length */
			case 8:
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 184 and 197 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 702 and 715 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	rel = heap_open(OperatorFamilyRelationId, RowExclusiveLock);
	/*
	 * Make sure there is no existing opfamily of this name (this is just to
	 * give a more friendly error message than "duplicate key").
	 */
	if (SearchSysCacheExists(OPFAMILYAMNAMENSP,
							 ObjectIdGetDatum(amoid),
							 CStringGetDatum(opfname),
							 ObjectIdGetDatum(namespaceoid),
							 0))
		ereport(ERROR,
				(errcode(ERRCODE_DUPLICATE_OBJECT),
				 errmsg("operator family \"%s\" for access method \"%s\" already exists",
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 219 and 228 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/tupconvert.c
 Between lines 2702 and 2711 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
			char	   *attname;			Oid			atttypid;
			int32		atttypmod;
			int			j;

			if (att->attisdropped)
				continue;		/* attrMap[i] is already 0 */
			attname = NameStr(att->attname);
			atttypid = att->atttypid;
			atttypmod = att->atttypmod;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 182 and 190 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_type.c
 Between lines 467 and 475 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_type.c
						 Oid inputProcedure,						 Oid outputProcedure,
						 Oid receiveProcedure,
						 Oid sendProcedure,
						 Oid typmodinProcedure,
						 Oid typmodoutProcedure,
						 Oid analyzeProcedure,
						 Oid elementType,
						 bool isImplicitArray,
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2701 and 2713 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3358 and 3370 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
			 off = OffsetNumberNext(off))		{
			ItemId		itemid = PageGetItemId(page, off);
			HeapTupleHeader htup;

			if (!ItemIdIsUsed(itemid))
				continue;
			/* Shouldn't be any DEAD or REDIRECT items anymore */
			Assert(ItemIdIsNormal(itemid));

			htup = (HeapTupleHeader) PageGetItem(page, itemid);
			if (htup->t_infomask & HEAP_XMIN_COMMITTED)
				continue;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 727 and 742 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 677 and 692 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
			old_value = toast_values[i];			toast_action[i] = 'p';
			toast_values[i] = toast_save_datum(rel, toast_values[i], options);
			if (toast_free[i])
				pfree(DatumGetPointer(old_value));
			toast_free[i] = true;
			need_change = true;
			need_free = true;
		}
	}

	/*
	 * Second we look for attributes of attstorage 'x' or 'e' that are still
	 * inline.	But skip this if there's no toast table to push them to.
	 */
	while (heap_compute_data_size(tupleDesc,
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2500 and 2511 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2556 and 2567 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2612 and 2623 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2668 and 2679 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
					 AclMode mask, AclMaskHow how){
	AclMode		result;
	HeapTuple	tuple;
	Datum		aclDatum;
	bool		isNull;
	Acl		   *acl;
	Oid			ownerId;

	/* Superusers bypass all permission checking. */
	if (superuser_arg(roleid))
		return mask;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 807 and 815 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
 Between lines 821 and 829 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
			expr = exstate->expr;			tle = makeTargetEntry(expr,
								  i,
								  NULL,
								  false);
			tlestate = makeNode(GenericExprState);
			tlestate->xprstate.expr = (Expr *) tle;
			tlestate->xprstate.evalfunc = NULL;
			tlestate->arg = exstate;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 33 and 45 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeCtescan.c
 Between lines 41 and 53 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMaterial.c
	EState	   *estate;	ScanDirection dir;
	bool		forward;
	Tuplestorestate *tuplestorestate;
	bool		eof_tuplestore;
	TupleTableSlot *slot;

	/*
	 * get state info from node
	 */
	estate = node->ss.ps.state;
	dir = estate->es_direction;
	forward = ScanDirectionIsForward(dir);
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 874 and 886 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1853 and 1865 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	if (IsA(newConstraint, FkConstraint))		ereport(ERROR,
				(errcode(ERRCODE_SYNTAX_ERROR),
				 errmsg("foreign key constraints not possible for domains")));

	/* otherwise it should be a plain Constraint */
	if (!IsA(newConstraint, Constraint))
		elog(ERROR, "unrecognized node type: %d",
			 (int) nodeTag(newConstraint));

	constr = (Constraint *) newConstraint;

	switch (constr->contype)
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 828 and 836 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 882 and 891 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
							   ((Scan *) plan)->scanrelid,							   plan, outer_plan,
							   str, indent, es);
				show_scan_qual(plan->qual,
							   "Filter",
							   ((Scan *) plan)->scanrelid,
							   plan, outer_plan,
							   str, indent, es);
			}
			break;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 688 and 700 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
 Between lines 714 and 725 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_operator.c
		values[Anum_pg_operator_oprcom - 1] = ObjectIdGetDatum(baseId);		replaces[Anum_pg_operator_oprcom - 1] = true;

		tup = heap_modify_tuple(tup,
								RelationGetDescr(pg_operator_desc),
								values,
								nulls,
								replaces);

		simple_heap_update(pg_operator_desc, &tup->t_self, tup);

		CatalogUpdateIndexes(pg_operator_desc, tup);
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 3462 and 3470 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3198 and 3206 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3254 and 3262 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_SUBEND:		case TBLOCK_ABORT:
		case TBLOCK_SUBABORT:
		case TBLOCK_ABORT_END:
		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1408 and 1424 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1527 and 1543 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
							  HeapTupleGetOid(tuple), 0,							  ownerId, istmt->is_grant,
							  noldmembers, oldmembers,
							  nnewmembers, newmembers);

		ReleaseSysCache(tuple);

		pfree(new_acl);

		/* prevent error when processing duplicate objects */
		CommandCounterIncrement();
	}

	heap_close(relation, RowExclusiveLock);
}

static void
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 850 and 858 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
 Between lines 1031 and 1039 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
				   InvalidOid,	/* domain base type - irrelevant */				   NULL,		/* default value - none */
				   NULL,		/* default binary representation */
				   false,		/* passed by reference */
				   'd',			/* alignment - must be the largest! */
				   'x',			/* fully TOASTable */
				   -1,			/* typmod */
				   0,			/* array dimensions for typBaseType */
				   false);		/* Type NOT NULL */
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 97 and 105 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 335 and 343 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
	Buffer		metabuf;	Page		metapg;
	BTPageOpaque metaopaque;
	Buffer		rootbuf;
	Page		rootpage;
	BTPageOpaque rootopaque;
	BlockNumber rootblkno;
	uint32		rootlevel;
	BTMetaPageData *metad;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 180 and 200 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapAnd.c
 Between lines 196 and 216 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapOr.c
	PlanState **bitmapplans;	int			nplans;
	int			i;

	/*
	 * get information from the node
	 */
	bitmapplans = node->bitmapplans;
	nplans = node->nplans;

	/*
	 * shut down each of the subscans (that we've initialized)
	 */
	for (i = 0; i < nplans; i++)
	{
		if (bitmapplans[i])
			ExecEndNode(bitmapplans[i]);
	}
}

void
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 177 and 195 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeNestloop.c
 Between lines 234 and 251 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeNestloop.c
			if (otherqual == NIL || ExecQual(otherqual, econtext, false))			{
				/*
				 * qualification was satisfied so we project and return the
				 * slot containing the result tuple using ExecProject().
				 */
				TupleTableSlot *result;
				ExprDoneCond isDone;

				ENL1_printf("qualification succeeded, projecting tuple");

				result = ExecProject(node->js.ps.ps_ProjInfo, &isDone);

				if (isDone != ExprEndResult)
				{
					node->js.ps.ps_TupFromTlist =
						(isDone == ExprMultipleResult);
					return result;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1522 and 1530 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 1537 and 1545 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
			vacpage->free = PageGetFreeSpaceWithFillFactor(onerel, page);			free_space += vacpage->free;
			empty_pages++;
			empty_end_pages++;
			vacpagecopy = copy_vac_page(vacpage);
			vpage_insert(vacuum_pages, vacpagecopy);
			vpage_insert(fraged_pages, vacpagecopy);
			UnlockReleaseBuffer(buf);
			continue;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1140 and 1153 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
 Between lines 1185 and 1197 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
				if (modifyTargetList && restype != rettype)				{
					tle->expr = (Expr *) makeRelabelType(tle->expr,
														 rettype,
														 -1,
														 COERCE_DONTCARE);
					/* Relabel is dangerous if sort/group or setop column */
					if (tle->ressortgroupref != 0 || parse->setOperations)
						*modifyTargetList = true;
				}
				/* Set up junk filter if needed */
				if (junkFilter)
					*junkFilter = ExecInitJunkFilter(tlist, false, NULL);
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 321 and 333 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
 Between lines 952 and 964 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeSubplan.c
		if (subLinkType == ARRAY_SUBLINK)		{
			Datum		dvalue;
			bool		disnull;

			found = true;
			/* stash away current value */
			Assert(subplan->firstColType == tdesc->attrs[0]->atttypid);
			dvalue = slot_getattr(slot, 1, &disnull);
			astate = accumArrayResult(astate, dvalue, disnull,
									  subplan->firstColType, oldcontext);
			/* keep scanning subplan to collect all values */
			continue;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 2196 and 2204 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 2223 and 2232 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
			break;		case ACLCHECK_NOT_OWNER:
			/* relation msg is OK since columns don't have separate owners */
			ereport(ERROR,
					(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
					 errmsg(not_owner_msg[objectkind], objectname)));
			break;
		default:
			elog(ERROR, "unrecognized AclResult: %d", (int) aclerr);
			break;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 1033 and 1044 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 1762 and 1773 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
		volatile XLogCtlData *xlogctl = XLogCtl;
		SpinLockAcquire(&xlogctl->info_lck);
		xlogctl->LogwrtResult = LogwrtResult;
		if (XLByteLT(xlogctl->LogwrtRqst.Write, LogwrtResult.Write))
			xlogctl->LogwrtRqst.Write = LogwrtResult.Write;
		if (XLByteLT(xlogctl->LogwrtRqst.Flush, LogwrtResult.Flush))
			xlogctl->LogwrtRqst.Flush = LogwrtResult.Flush;
		SpinLockRelease(&xlogctl->info_lck);
	}

	Write->LogwrtResult = LogwrtResult;
=====================================================================
Found 9 duplicate lines in the following files:
 Between lines 4095 and 4106 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4155 and 4166 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	if (record->xl_info & XLR_BKP_BLOCK_1)		return;

	buffer = XLogReadBuffer(xlrec->node, xlrec->block, false);
	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))
	{
		UnlockReleaseBuffer(buffer);
		return;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1799 and 1808 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1675 and 1684 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1558 and 1567 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1439 and 1448 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1320 and 1329 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
		Datum		aclDatum;		bool		isNull;
		AclMode		avail_goptions;
		AclMode		this_privileges;
		Acl		   *old_acl;
		Acl		   *new_acl;
		Oid			grantorId;
		Oid			ownerId;
		HeapTuple	tuple;
		HeapTuple	newtuple;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1247 and 1258 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 702 and 713 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtinsert.c
			if (BufferIsValid(metabuf))			{
				xlmeta.root = metad->btm_root;
				xlmeta.level = metad->btm_level;
				xlmeta.fastroot = metad->btm_fastroot;
				xlmeta.fastlevel = metad->btm_fastlevel;

				nextrdata->data = (char *) &xlmeta;
				nextrdata->len = sizeof(xl_btree_metadata);
				nextrdata->buffer = InvalidBuffer;
				nextrdata->next = nextrdata + 1;
				nextrdata++;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1976 and 1996 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1852 and 1872 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1734 and 1754 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1610 and 1630 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1492 and 1512 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1373 and 1393 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
 Between lines 1255 and 1275 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/aclchk.c
									 0, NULL);
		/*
		 * Generate new ACL.
		 *
		 * We need the members of both old and new ACLs so we can correct the
		 * shared dependency information.
		 */
		noldmembers = aclmembers(old_acl, &oldmembers);

		new_acl = merge_acl_with_grant(old_acl, istmt->is_grant,
									   istmt->grant_option, istmt->behavior,
									   istmt->grantees, this_privileges,
									   grantorId, ownerId);

		nnewmembers = aclmembers(new_acl, &newmembers);

		/* finished building new ACL value, now insert it */
		MemSet(values, 0, sizeof(values));
		MemSet(nulls, false, sizeof(nulls));
		MemSet(replaces, false, sizeof(replaces));
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 819 and 836 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 760 and 777 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
				continue;			if (att[i]->attstorage != 'm')
				continue;
			if (toast_sizes[i] > biggest_size)
			{
				biggest_attno = i;
				biggest_size = toast_sizes[i];
			}
		}

		if (biggest_attno < 0)
			break;

		/*
		 * Attempt to compress it inline
		 */
		i = biggest_attno;
		old_value = toast_values[i];
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 539 and 556 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootstrap.c
 Between lines 8087 and 8104 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
	pqsignal(SIGALRM, SIG_IGN);	pqsignal(SIGPIPE, SIG_IGN);
	pqsignal(SIGUSR1, SIG_IGN);
	pqsignal(SIGUSR2, SIG_IGN);

	/*
	 * Reset some signals that are accepted by postmaster but not here
	 */
	pqsignal(SIGCHLD, SIG_DFL);
	pqsignal(SIGTTIN, SIG_DFL);
	pqsignal(SIGTTOU, SIG_DFL);
	pqsignal(SIGCONT, SIG_DFL);
	pqsignal(SIGWINCH, SIG_DFL);

	/*
	 * Unblock signals (they were blocked when the postmaster forked us)
	 */
	PG_SETMASK(&UnBlockSig);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 123 and 135 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execGrouping.c
 Between lines 53 and 65 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execGrouping.c
				TupleTableSlot *slot2,				int numCols,
				AttrNumber *matchColIdx,
				FmgrInfo *eqfunctions,
				MemoryContext evalContext)
{
	MemoryContext oldContext;
	bool		result;
	int			i;

	/* Reset and switch into the temp context. */
	MemoryContextReset(evalContext);
	oldContext = MemoryContextSwitchTo(evalContext);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1435 and 1446 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 1399 and 1410 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
	Relation	pg_proc_rel;	HeapTuple	tup;
	Form_pg_proc procForm;

	pg_proc_rel = heap_open(ProcedureRelationId, RowExclusiveLock);

	tup = SearchSysCacheCopy(PROCOID,
							 ObjectIdGetDatum(funcOid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup)) /* should not happen */
		elog(ERROR, "cache lookup failed for function %u", funcOid);
	procForm = (Form_pg_proc) GETSTRUCT(tup);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 2179 and 2203 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
 Between lines 1788 and 1812 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
		MemoryContextReset(econtext->ecxt_per_tuple_memory);
		/* Set up for predicate or expression evaluation */
		ExecStoreTuple(heapTuple, slot, InvalidBuffer, false);

		/*
		 * In a partial index, discard tuples that don't satisfy the
		 * predicate.
		 */
		if (predicate != NIL)
		{
			if (!ExecQual(predicate, econtext, false))
				continue;
		}

		/*
		 * For the current heap tuple, extract all the attributes we use in
		 * this index, and note which are null.  This also performs evaluation
		 * of any expressions needed.
		 */
		FormIndexDatum(indexInfo,
					   slot,
					   estate,
					   values,
					   isnull);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 293 and 308 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 194 and 213 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gindatapage.c
		if (result == 0)		{
			stack->off = mid;
			return true;
		}
		else if (result > 0)
			low = mid + 1;
		else
			high = mid;
	}

	stack->off = high;
	return false;
}

/*
 * Finds links to blkno on non-leaf page, returns
 * offset of PostingItem
 */
static OffsetNumber
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 4721 and 4735 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4662 and 4676 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4257 and 4271 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	if (!BufferIsValid(buffer))		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))		/* changes are applied */
	{
		UnlockReleaseBuffer(buffer);
		return;
	}

	offnum = ItemPointerGetOffsetNumber(&(xlrec->target.tid));
	if (PageGetMaxOffsetNumber(page) >= offnum)
		lp = PageGetItemId(page, offnum);

	if (PageGetMaxOffsetNumber(page) < offnum || !ItemIdIsNormal(lp))
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1051 and 1068 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
 Between lines 759 and 773 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/auth.c
		if (!port->hba->include_realm)			*cp = '\0';
		cp++;

		if (port->hba->krb_realm != NULL && strlen(port->hba->krb_realm))
		{
			/* Match realm against configured */
			if (pg_krb_caseins_users)
				ret = pg_strcasecmp(port->hba->krb_realm, cp);
			else
				ret = strcmp(port->hba->krb_realm, cp);

			if (ret)
			{
				elog(DEBUG2,
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 652 and 663 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 318 and 329 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
	if (password)	{
		if (!encrypt_password || isMD5(password))
			new_record[Anum_pg_authid_rolpassword - 1] =
				CStringGetTextDatum(password);
		else
		{
			if (!pg_md5_encrypt(password, stmt->role, strlen(stmt->role),
								encrypted_password))
				elog(ERROR, "password encryption failed");
			new_record[Anum_pg_authid_rolpassword - 1] =
				CStringGetTextDatum(encrypted_password);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 3219 and 3230 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3092 and 3101 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	newtup.t_data->t_infomask &= ~(HEAP_XMIN_COMMITTED |								   HEAP_XMIN_INVALID |
								   HEAP_MOVED_OFF);
	newtup.t_data->t_infomask |= HEAP_MOVED_IN;
	HeapTupleHeaderClearHotUpdated(newtup.t_data);
	HeapTupleHeaderClearHeapOnly(newtup.t_data);
	HeapTupleHeaderSetXvac(newtup.t_data, myXID);
	newoff = PageAddItem(dst_page, (Item) newtup.t_data, tuple_len,
						 InvalidOffsetNumber, false, true);
	if (newoff == InvalidOffsetNumber)
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1083 and 1093 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
 Between lines 525 and 535 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
	ScanKeyInit(&key[0],				Anum_pg_shdepend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(classId));
	ScanKeyInit(&key[1],
				Anum_pg_shdepend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(objectId));

	scan = systable_beginscan(sdepRel, SharedDependReferenceIndexId, true,
							  SnapshotNow, 2, key);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 455 and 467 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 404 and 416 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/gindatapage.c
		rdata[0].data = NULL;		rdata[0].len = 0;
		rdata[0].next = &rdata[1];
		cnt++;
	}

	rdata[cnt].buffer = InvalidBuffer;
	rdata[cnt].data = (char *) &data;
	rdata[cnt].len = sizeof(ginxlogInsert);
	rdata[cnt].next = &rdata[cnt + 1];
	cnt++;

	rdata[cnt].buffer = InvalidBuffer;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1663 and 1676 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
 Between lines 1559 and 1577 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
								clde->d_name)));				RemoveTwoPhaseFile(xid, true);
				continue;
			}

			/*
			 * Note: we can't check if already processed because clog
			 * subsystem isn't up yet.
			 */

			/* Read and validate file */
			buf = ReadTwoPhaseFile(xid);
			if (buf == NULL)
			{
				ereport(WARNING,
					  (errmsg("removing corrupt two-phase state file \"%s\"",
							  clde->d_name)));
				RemoveTwoPhaseFile(xid, true);
				continue;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 327 and 338 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 299 and 310 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
													 econtext,													 &eisnull,
													 NULL));
		/* If any index expr yields NULL, result is NULL or error */
		if (eisnull)
		{
			if (isAssignment)
				ereport(ERROR,
						(errcode(ERRCODE_NULL_VALUE_NOT_ALLOWED),
				  errmsg("array subscript in assignment must not be null")));
			*isNull = true;
			return (Datum) NULL;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 570 and 583 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
 Between lines 369 and 382 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
	TupleDesc	typeinfo = slot->tts_tupleDescriptor;	DR_printtup *myState = (DR_printtup *) self;
	StringInfoData buf;
	int			natts = typeinfo->natts;
	int			i,
				j,
				k;

	/* Set or update my derived attribute info, if needed */
	if (myState->attrinfo != typeinfo || myState->nattrs != natts)
		printtup_prepare_info(myState, typeinfo, natts);

	/* Make sure the tuple is fully deconstructed */
	slot_getallattrs(slot);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 800 and 810 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 112 and 122 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
	if (rel->rd_rel->relkind != RELKIND_RELATION)		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("\"%s\" is not a table",
						RelationGetRelationName(rel))));

	if (!allowSystemTableMods && IsSystemRelation(rel))
		ereport(ERROR,
				(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
				 errmsg("permission denied: \"%s\" is a system catalog",
						RelationGetRelationName(rel))));
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 3193 and 3214 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3031 and 3050 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	TransactionId myXID = GetCurrentTransactionId();	HeapTupleData newtup;
	OffsetNumber newoff;
	ItemId		newitemid;
	Size		tuple_len = old_tup->t_len;
	bool		all_visible_cleared = false;
	bool		all_visible_cleared_new = false;

	/*
	 * make a modifiable copy of the source tuple.
	 */
	heap_copytuple_with_tuple(old_tup, &newtup);

	/*
	 * register invalidation of source tuple in catcaches.
	 */
	CacheInvalidateHeapTuple(rel, old_tup);

	/* NO EREPORT(ERROR) TILL CHANGES ARE LOGGED */
	START_CRIT_SECTION();
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 547 and 559 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 340 and 351 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	SysScanDesc scan;	HeapTuple	tup;

	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 810 and 826 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
 Between lines 695 and 711 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
	char	   *result;
	if (strspn(value, "x") == NAMEDATALEN &&
		(value[NAMEDATALEN] == 'T' || value[NAMEDATALEN] == 'F'))
	{
		/* might be a saved userid string */
		Oid			savedoid;
		char	   *endptr;

		savedoid = (Oid) strtoul(value + NAMEDATALEN + 1, &endptr, 10);

		if (endptr != value + NAMEDATALEN + 1 && *endptr == ',')
		{
			/* syntactically valid, so break out the data */
			roleid = savedoid;
			is_superuser = (value[NAMEDATALEN] == 'T');
			actual_rolename = endptr + 1;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1113 and 1125 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 1052 and 1064 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
	tmptup.t_len = HeapTupleHeaderGetDatumLength(tuple);	ItemPointerSetInvalid(&(tmptup.t_self));
	tmptup.t_tableOid = InvalidOid;
	tmptup.t_data = tuple;

	result = heap_getattr(&tmptup,
						  attrno,
						  tupDesc,
						  isNull);

	ReleaseTupleDesc(tupDesc);

	return result;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1013 and 1022 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 862 and 871 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
		new_len = offsetof(HeapTupleHeaderData, t_bits);		if (has_nulls)
			new_len += BITMAPLEN(numAttrs);
		if (olddata->t_infomask & HEAP_HASOID)
			new_len += sizeof(Oid);
		new_len = MAXALIGN(new_len);
		Assert(new_len == olddata->t_hoff);
		new_data_len = heap_compute_data_size(tupleDesc,
											  toast_values, toast_isnull);
		new_len += new_data_len;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 221 and 231 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 144 and 154 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	ScanKeyInit(&key[0],				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(classId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(objectId));

	scan = systable_beginscan(depRel, DependDependerIndexId, true,
							  SnapshotNow, 2, key);
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 878 and 892 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
 Between lines 751 and 765 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
	result = (char *) malloc(NAMEDATALEN + 32 + strlen(actual_rolename));	if (!result)
		return NULL;

	memset(result, 'x', NAMEDATALEN);

	sprintf(result + NAMEDATALEN, "%c%u,%s",
			is_superuser ? 'T' : 'F',
			roleid,
			actual_rolename);

	return result;
}

const char *
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 3272 and 3294 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 3242 and 3264 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
							RelationGetRelationName(rel))));	}

	/* Permissions checks */
	if (!pg_class_ownercheck(RelationGetRelid(rel), GetUserId()))
		aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_CLASS,
					   RelationGetRelationName(rel));

	if (!allowSystemTableMods && IsSystemRelation(rel))
		ereport(ERROR,
				(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
				 errmsg("permission denied: \"%s\" is a system catalog",
						RelationGetRelationName(rel))));
}

/*
 * ATSimplePermissionsRelationOrIndex
 *
 * - Ensure that it is a relation or an index
 * - Ensure this user is the owner
 * - Ensure that it is not a system table
 */
static void
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 978 and 989 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 856 and 867 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 404 and 415 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		OpFamilyMember *member;
		Assert(IsA(item, CreateOpClassItem));
		switch (item->itemtype)
		{
			case OPCLASS_ITEM_OPERATOR:
				if (item->number <= 0 || item->number > maxOpNumber)
					ereport(ERROR,
							(errcode(ERRCODE_INVALID_OBJECT_DEFINITION),
							 errmsg("invalid operator number %d,"
									" must be between 1 and %d",
									item->number, maxOpNumber)));
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 113 and 123 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
 Between lines 78 and 88 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gin/ginentrypage.c
		if (newsize > Min(INDEX_SIZE_MASK, GinMaxItemSize))		{
			if (errorTooBig)
				ereport(ERROR,
						(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),
						 errmsg("index row size %lu exceeds maximum %lu for index \"%s\"",
								(unsigned long) newsize,
								(unsigned long) Min(INDEX_SIZE_MASK,
													GinMaxItemSize),
								RelationGetRelationName(index))));
			return NULL;
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1568 and 1581 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1505 and 1518 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	HeapTuple	tuple;	ObjectAddress object;

	/*
	 * Get the access method's OID.
	 */
	amID = GetSysCacheOid(AMNAME,
						  CStringGetDatum(stmt->amname),
						  0, 0, 0);
	if (!OidIsValid(amID))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						stmt->amname)));
=====================================================================
Found 10 duplicate lines in the following files:
 Between lines 1836 and 1850 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1659 and 1673 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	typename = makeTypeNameFromNameList(names);	domainoid = typenameTypeId(NULL, typename, NULL);

	/* Look up the domain in the type table */
	typrel = heap_open(TypeRelationId, RowExclusiveLock);

	tup = SearchSysCacheCopy(TYPEOID,
							 ObjectIdGetDatum(domainoid),
							 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		elog(ERROR, "cache lookup failed for type %u", domainoid);
	typTup = (Form_pg_type) GETSTRUCT(tup);

	/* Check it's a domain and check user has permission for ALTER DOMAIN */
	checkDomainOwner(tup, typename);
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1738 and 1749 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1838 and 1849 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	HeapTuple	tup;	Relation	rel;
	AclResult	aclresult;

	amOid = GetSysCacheOid(AMNAME,
						   CStringGetDatum(access_method),
						   0, 0, 0);
	if (!OidIsValid(amOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						access_method)));
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1224 and 1239 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
 Between lines 1310 and 1325 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
	HeapTuple	tuple;
	Assert(list_length(arguments) == 1);
	amname = strVal(linitial(arguments));

	/*
	 * Get the access method's OID.
	 */
	amID = GetSysCacheOid(AMNAME,
						  CStringGetDatum(amname),
						  0, 0, 0);
	if (!OidIsValid(amID))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						amname)));
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 3515 and 3531 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 3592 and 3608 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 1020 and 1036 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
	if (!stats)		return;

	/*
	 * Now update statistics in pg_class, but only if the index says the count
	 * is accurate.
	 */
	if (!stats->estimated_count)
		vac_update_relstats(indrel,
							stats->num_pages, stats->num_index_tuples,
							false, InvalidTransactionId);

	ereport(elevel,
			(errmsg("index \"%s\" now contains %.0f row versions in %u pages",
					RelationGetRelationName(indrel),
					stats->num_index_tuples,
					stats->num_pages),
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1311 and 1330 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 1380 and 1399 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
					TupleTableSlot *result;
					node->mj_MatchedInner = true;		/* do it only once */

					result = MJFillInner(node);
					if (result)
						return result;
				}

				/* Mark before advancing, if wanted */
				if (node->mj_ExtraMarks)
					ExecMarkPos(innerPlan);

				/*
				 * now we get the next inner tuple, if any
				 */
				innerTupleSlot = ExecProcNode(innerPlan);
				node->mj_InnerTupleSlot = innerTupleSlot;
				MJ_DEBUG_PROC_NODE(innerTupleSlot);
				node->mj_MatchedInner = false;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1777 and 1788 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1976 and 1987 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		opcOid = OpclassnameGetOpcid(amOid, opcname);		if (!OidIsValid(opcOid))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("operator class \"%s\" does not exist for access method \"%s\"",
							opcname, access_method)));

		tup = SearchSysCacheCopy(CLAOID,
								 ObjectIdGetDatum(opcOid),
								 0, 0, 0);
		if (!HeapTupleIsValid(tup))		/* should not happen */
			elog(ERROR, "cache lookup failed for opclass %u", opcOid);
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1476 and 1489 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 1440 and 1453 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
						   &declaredArgTypes, &agg_nargs);		Assert(agg_nargs == numArguments);
		aggtranstype = enforce_generic_type_consistency(inputTypes,
														declaredArgTypes,
														agg_nargs,
														aggtranstype,
														false);
		pfree(declaredArgTypes);
	}

	/* build expression trees using actual argument & result types */
	build_aggregate_fnexprs(inputTypes,
							numArguments,
							aggtranstype,
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 692 and 710 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 801 and 819 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
	while (heap_compute_data_size(tupleDesc,								  toast_values, toast_isnull) > maxDataLen &&
		   rel->rd_rel->reltoastrelid != InvalidOid)
	{
		int			biggest_attno = -1;
		int32		biggest_size = MAXALIGN(TOAST_POINTER_SIZE);
		Datum		old_value;

		/*--------
		 * Search for the biggest yet inlined attribute with
		 * attstorage = 'm'
		 *--------
		 */
		for (i = 0; i < numAttrs; i++)
		{
			if (toast_action[i] == 'p')
				continue;
			if (VARATT_IS_EXTERNAL(DatumGetPointer(toast_values[i])))
				continue;		/* can't happen, toast_action would be 'p' */
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1939 and 1955 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1742 and 1758 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	amOid = GetSysCacheOid(AMNAME,						   CStringGetDatum(access_method),
						   0, 0, 0);
	if (!OidIsValid(amOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						access_method)));

	rel = heap_open(OperatorClassRelationId, RowExclusiveLock);

	/*
	 * Look up the opclass
	 */
	DeconstructQualifiedName(name, &schemaname, &opcname);

	if (schemaname)
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1154 and 1170 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
 Between lines 1207 and 1223 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/list.c
	while (oldlist_cur)	{
		ListCell   *newlist_cur;

		newlist_cur = (ListCell *) palloc(sizeof(*newlist_cur));
		newlist_cur->data = oldlist_cur->data;
		newlist_prev->next = newlist_cur;

		newlist_prev = newlist_cur;
		oldlist_cur = oldlist_cur->next;
	}

	newlist_prev->next = NULL;
	newlist->tail = newlist_prev;

	check_list_invariants(newlist);
	return newlist;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 321 and 342 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 593 and 614 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	OffsetNumber lineoff;	int			linesleft;
	ItemId		lpp;

	/*
	 * calculate next starting lineindex, given scan direction
	 */
	if (ScanDirectionIsForward(dir))
	{
		if (!scan->rs_inited)
		{
			/*
			 * return null immediately if relation is empty
			 */
			if (scan->rs_nblocks == 0)
			{
				Assert(!BufferIsValid(scan->rs_cbuf));
				tuple->t_data = NULL;
				return;
			}
			page = scan->rs_startblock; /* first page */
			heapgetpage(scan, page);
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1966 and 1982 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1801 and 1817 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
	for (i = 0; i < ntrigs; i++)	{
		Trigger    *trigger = &trigdesc->triggers[tgindx[i]];

		if (SessionReplicationRole == SESSION_REPLICATION_ROLE_REPLICA)
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_ORIGIN ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		else	/* ORIGIN or LOCAL role */
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_REPLICA ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		LocTriggerData.tg_trigtuple = trigtuple;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1692 and 1702 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
 Between lines 734 and 744 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/index.c
										   InvalidOid,	/* no domain */										   InvalidOid,	/* no foreign key */
										   NULL,
										   NULL,
										   NULL,
										   NULL,
										   0,
										   ' ',
										   ' ',
										   ' ',
										   InvalidOid,	/* no associated index */
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1860 and 1871 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 2107 and 2118 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		namespaceOid = LookupExplicitNamespace(schemaname);
		tup = SearchSysCacheCopy(OPFAMILYAMNAMENSP,
								 ObjectIdGetDatum(amOid),
								 PointerGetDatum(opfname),
								 ObjectIdGetDatum(namespaceOid),
								 0);
		if (!HeapTupleIsValid(tup))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("operator family \"%s\" does not exist for access method \"%s\"",
							opfname, access_method)));
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1760 and 1771 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1959 and 1970 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		namespaceOid = LookupExplicitNamespace(schemaname);
		tup = SearchSysCacheCopy(CLAAMNAMENSP,
								 ObjectIdGetDatum(amOid),
								 PointerGetDatum(opcname),
								 ObjectIdGetDatum(namespaceOid),
								 0);
		if (!HeapTupleIsValid(tup))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("operator class \"%s\" does not exist for access method \"%s\"",
							opcname, access_method)));
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 112 and 133 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapAnd.c
 Between lines 113 and 134 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeBitmapOr.c
	PlanState **bitmapplans;	int			nplans;
	int			i;
	TIDBitmap  *result = NULL;

	/* must provide our own instrumentation support */
	if (node->ps.instrument)
		InstrStartNode(node->ps.instrument);

	/*
	 * get information from the node
	 */
	bitmapplans = node->bitmapplans;
	nplans = node->nplans;

	/*
	 * Scan all the subplans and OR their result bitmaps
	 */
	for (i = 0; i < nplans; i++)
	{
		PlanState  *subnode = bitmapplans[i];
		TIDBitmap  *subresult;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 2554 and 2586 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
 Between lines 2605 and 2633 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execQual.c
	ListCell   *clause;	bool		AnyNull;

	if (isDone)
		*isDone = ExprSingleResult;

	AnyNull = false;

	/*
	 * If any of the clauses is FALSE, the AND result is FALSE regardless of
	 * the states of the rest of the clauses, so we can stop evaluating and
	 * return FALSE immediately.  If none are FALSE and one or more is NULL,
	 * we return NULL; otherwise we return TRUE.  This makes sense when you
	 * interpret NULL as "don't know", using the same sort of reasoning as for
	 * OR, above.
	 */

	foreach(clause, clauses)
	{
		ExprState  *clausestate = (ExprState *) lfirst(clause);
		Datum		clause_value;

		clause_value = ExecEvalExpr(clausestate, econtext, isNull, NULL);

		/*
		 * if we have a non-null false result, then return it.
		 */
		if (*isNull)
			AnyNull = true;		/* remember we got a null */
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 247 and 268 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
 Between lines 271 and 292 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
 Between lines 588 and 609 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/equalfuncs.c
	COMPARE_SCALAR_FIELD(opno);
	/*
	 * Special-case opfuncid: it is allowable for it to differ if one node
	 * contains zero and the other doesn't.  This just means that the one node
	 * isn't as far along in the parse/plan pipeline and hasn't had the
	 * opfuncid cache filled yet.
	 */
	if (a->opfuncid != b->opfuncid &&
		a->opfuncid != 0 &&
		b->opfuncid != 0)
		return false;

	COMPARE_SCALAR_FIELD(opresulttype);
	COMPARE_SCALAR_FIELD(opretset);
	COMPARE_NODE_FIELD(args);
	COMPARE_LOCATION_FIELD(location);

	return true;
}

static bool
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 745 and 765 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
 Between lines 822 and 842 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/gist/gistproc.c
			gistentryinit(*retval, PointerGetDatum(r),						  entry->rel, entry->page,
						  entry->offset, FALSE);

		}
		else
		{
			gistentryinit(*retval, (Datum) 0,
						  entry->rel, entry->page,
						  entry->offset, FALSE);
		}
	}
	else
		retval = entry;
	PG_RETURN_POINTER(retval);
}

/*
 * The GiST Consistent method for circles
 */
Datum
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 147 and 157 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execTuples.c
 Between lines 226 and 236 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execTuples.c
	slot->tts_isempty = true;	slot->tts_shouldFree = false;
	slot->tts_shouldFreeMin = false;
	slot->tts_tuple = NULL;
	slot->tts_tupleDescriptor = NULL;
	slot->tts_mcxt = CurrentMemoryContext;
	slot->tts_buffer = InvalidBuffer;
	slot->tts_nvalid = 0;
	slot->tts_values = NULL;
	slot->tts_isnull = NULL;
	slot->tts_mintuple = NULL;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 342 and 361 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2216 and 2233 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	else	{
		/* use the default creation namespace */
		recomputeNamespacePath();
		if (activeTempCreationPending)
		{
			/* Need to initialize temp namespace */
			InitTempTableNamespace();
			return myTempNamespace;
		}
		namespaceId = activeCreationNamespace;
		if (!OidIsValid(namespaceId))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_SCHEMA),
					 errmsg("no schema has been selected to create in")));
	}

	return namespaceId;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1071 and 1082 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 1099 and 1110 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 1129 and 1141 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
		if (r->rd_rel->relkind == RELKIND_INDEX)			ereport(ERROR,
					(errcode(ERRCODE_WRONG_OBJECT_TYPE),
					 errmsg("\"%s\" is an index",
							RelationGetRelationName(r))));
		else if (r->rd_rel->relkind == RELKIND_COMPOSITE_TYPE)
			ereport(ERROR,
					(errcode(ERRCODE_WRONG_OBJECT_TYPE),
					 errmsg("\"%s\" is a composite type",
							RelationGetRelationName(r))));
	}

	return r;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1238 and 1252 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 2269 and 2283 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
		case T_CoalesceExpr:			return walker(((CoalesceExpr *) node)->args, context);
		case T_MinMaxExpr:
			return walker(((MinMaxExpr *) node)->args, context);
		case T_XmlExpr:
			{
				XmlExpr    *xexpr = (XmlExpr *) node;

				if (walker(xexpr->named_args, context))
					return true;
				/* we assume walker doesn't care about arg_names */
				if (walker(xexpr->args, context))
					return true;
			}
			break;
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 101 and 119 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 939 and 957 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
				 attnum);			nargs = 0;			/* keep compiler quiet */
	}

	procOid = LookupFuncName(funcName, nargs, typeId, false);
	if (get_func_rettype(procOid) != retTypeId)
		ereport(ERROR,
				(errcode(ERRCODE_INVALID_OBJECT_DEFINITION),
				 errmsg("function %s should return type %s",
						func_signature_string(funcName, nargs, typeId),
						format_type_be(retTypeId))));

	return ObjectIdGetDatum(procOid);
}

/*
 * make pg_depend entries for a new pg_ts_template entry
 */
static void
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 432 and 443 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
 Between lines 431 and 442 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootscanner.c
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1877 and 1888 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 2124 and 2135 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		opfOid = OpfamilynameGetOpfid(amOid, opfname);		if (!OidIsValid(opfOid))
			ereport(ERROR,
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("operator family \"%s\" does not exist for access method \"%s\"",
							opfname, access_method)));

		tup = SearchSysCacheCopy(OPFAMILYOID,
								 ObjectIdGetDatum(opfOid),
								 0, 0, 0);
		if (!HeapTupleIsValid(tup))		/* should not happen */
			elog(ERROR, "cache lookup failed for opfamily %u", opfOid);
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 5955 and 5965 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 7473 and 7483 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	ScanKeyInit(&key[0],				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationGetRelid(rel)));
	ScanKeyInit(&key[2],
				Anum_pg_depend_objsubid,
				BTEqualStrategyNumber, F_INT4EQ,
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 2087 and 2103 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1842 and 1858 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	amOid = GetSysCacheOid(AMNAME,						   CStringGetDatum(access_method),
						   0, 0, 0);
	if (!OidIsValid(amOid))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						access_method)));

	rel = heap_open(OperatorFamilyRelationId, RowExclusiveLock);

	/*
	 * Look up the opfamily
	 */
	DeconstructQualifiedName(name, &schemaname, &opfname);

	if (schemaname)
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1140 and 1158 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
 Between lines 1028 and 1046 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablespace.c
		tblSpcs = (Oid *) MemoryContextAlloc(TopTransactionContext,										list_length(namelist) * sizeof(Oid));
		numSpcs = 0;
		foreach(l, namelist)
		{
			char	   *curname = (char *) lfirst(l);
			Oid			curoid;
			AclResult	aclresult;

			/* Allow an empty string (signifying database default) */
			if (curname[0] == '\0')
			{
				tblSpcs[numSpcs++] = InvalidOid;
				continue;
			}

			/* Else verify that name is a valid tablespace name */
			curoid = get_tablespace_oid(curname);
			if (curoid == InvalidOid)
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 442 and 456 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
 Between lines 324 and 338 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/comment.c
	ScanKeyInit(&skey[0],				Anum_pg_shdescription_objoid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(oid));
	ScanKeyInit(&skey[1],
				Anum_pg_shdescription_classoid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(classoid));

	shdescription = heap_open(SharedDescriptionRelationId, RowExclusiveLock);

	sd = systable_beginscan(shdescription, SharedDescriptionObjIndexId, true,
							SnapshotNow, 2, skey);

	while ((oldtuple = systable_getnext(sd)) != NULL)
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 2996 and 3014 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
 Between lines 2573 and 2590 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/namespace.c
	overrideStack = list_delete_first(overrideStack);	list_free(entry->searchPath);
	pfree(entry);

	/* Activate the next level down. */
	if (overrideStack)
	{
		entry = (OverrideStackEntry *) linitial(overrideStack);
		activeSearchPath = entry->searchPath;
		activeCreationNamespace = entry->creationNamespace;
		activeTempCreationPending = false;		/* XXX is this OK? */
	}
	else
	{
		/* If not baseSearchPathValid, this is useless but harmless */
		activeSearchPath = baseSearchPath;
		activeCreationNamespace = baseCreationNamespace;
		activeTempCreationPending = baseTempCreationPending;
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1142 and 1177 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 989 and 1027 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
			finalize_aggregate(aggstate, peraggstate, pergroupstate,							   &aggvalues[aggno], &aggnulls[aggno]);
		}

		/*
		 * Use the representative input tuple for any references to
		 * non-aggregated input columns in the qual and tlist.	(If we are not
		 * grouping, and there are no input rows at all, we will come here
		 * with an empty firstSlot ... but if not grouping, there can't be any
		 * references to non-aggregated input columns, so no problem.)
		 */
		econtext->ecxt_outertuple = firstSlot;

		/*
		 * Check the qual (HAVING clause); if the group does not match, ignore
		 * it and loop back to try to process another group.
		 */
		if (ExecQual(aggstate->ss.ps.qual, econtext, false))
		{
			/*
			 * Form and return a projection tuple using the aggregate results
			 * and the representative input tuple.
			 */
			TupleTableSlot *result;
			ExprDoneCond isDone;

			result = ExecProject(aggstate->ss.ps.ps_ProjInfo, &isDone);

			if (isDone != ExprEndResult)
			{
				aggstate->ss.ps.ps_TupFromTlist =
					(isDone == ExprMultipleResult);
				return result;
			}
		}
	}

	/* No more groups */
	return NULL;
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 7732 and 7749 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 6428 and 6445 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	Relation	depRel;	SysScanDesc scan;
	ScanKeyData key[2];
	HeapTuple	tup;

	/*
	 * SERIAL sequences are those having an auto dependency on one of the
	 * table's columns (we don't care *which* column, exactly).
	 */
	depRel = heap_open(DependRelationId, AccessShareLock);

	ScanKeyInit(&key[0],
				Anum_pg_depend_refclassid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_refobjid,
				BTEqualStrategyNumber, F_OIDEQ,
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1243 and 1269 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
 Between lines 992 and 1018 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeMergejoin.c
				if (doFillOuter && !node->mj_MatchedOuter)				{
					/*
					 * Generate a fake join tuple with nulls for the inner
					 * tuple, and return it if it passes the non-join quals.
					 */
					TupleTableSlot *result;

					node->mj_MatchedOuter = true;		/* do it only once */

					result = MJFillOuter(node);
					if (result)
						return result;
				}

				/*
				 * now we get the next outer tuple, if any
				 */
				outerTupleSlot = ExecProcNode(outerPlan);
				node->mj_OuterTupleSlot = outerTupleSlot;
				MJ_DEBUG_PROC_NODE(outerTupleSlot);
				node->mj_MatchedOuter = false;

				/* Compute join values and check for unmatchability */
				switch (MJEvalOuterValues(node))
				{
					case MJEVAL_MATCHABLE:
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 2255 and 2266 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 2253 and 2264 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
	if (pstate->p_hasSubLinks)		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("cannot use subquery in check constraint")));
	if (pstate->p_hasAggs)
		ereport(ERROR,
				(errcode(ERRCODE_GROUPING_ERROR),
			   errmsg("cannot use aggregate function in check constraint")));
	if (pstate->p_hasWindowFuncs)
		ereport(ERROR,
				(errcode(ERRCODE_WINDOWING_ERROR),
				 errmsg("cannot use window function in check constraint")));
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 3350 and 3361 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 2209 and 2220 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
		case TBLOCK_STARTED:		case TBLOCK_BEGIN:
		case TBLOCK_SUBBEGIN:
		case TBLOCK_END:
		case TBLOCK_SUBEND:
		case TBLOCK_ABORT_END:
		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
		case TBLOCK_PREPARE:
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 516 and 531 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 219 and 234 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
		else if (strcmp(defel->defname, "validUntil") == 0)		{
			if (dvalidUntil)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dvalidUntil = defel;
		}
		else
			elog(ERROR, "option \"%s\" not recognized",
				 defel->defname);
	}

	if (dpassword && dpassword->arg)
		password = strVal(dpassword->arg);
	if (dissuper)
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 885 and 900 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 433 and 448 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
#ifdef NOT_USED				/* XXX this is unnecessary given the superuser check above */
				/* Caller must own operator and its underlying function */
				if (!pg_oper_ownercheck(operOid, GetUserId()))
					aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_OPER,
								   get_opname(operOid));
				funcOid = get_opcode(operOid);
				if (!pg_proc_ownercheck(funcOid, GetUserId()))
					aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_PROC,
								   get_func_name(funcOid));
#endif

				/* Save the info */
				member = (OpFamilyMember *) palloc0(sizeof(OpFamilyMember));
				member->object = operOid;
				member->number = item->number;
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 777 and 794 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 640 and 657 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
			old_value = toast_values[i];			new_value = toast_compress_datum(old_value);

			if (DatumGetPointer(new_value) != NULL)
			{
				/* successful compression */
				if (toast_free[i])
					pfree(DatumGetPointer(old_value));
				toast_values[i] = new_value;
				toast_free[i] = true;
				toast_sizes[i] = VARSIZE(DatumGetPointer(toast_values[i]));
				need_change = true;
				need_free = true;
			}
			else
			{
				/* incompressible, ignore on subsequent compression passes */
				toast_action[i] = 'x';
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1923 and 1935 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1599 and 1611 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
					  AnalyzeAttrFetchFunc fetchfunc,					  int samplerows,
					  double totalrows)
{
	int			i;
	int			null_cnt = 0;
	int			nonnull_cnt = 0;
	int			toowide_cnt = 0;
	double		total_width = 0;
	bool		is_varlena = (!stats->attr->attbyval &&
							  stats->attr->attlen == -1);
	bool		is_varwidth = (!stats->attr->attbyval &&
							   stats->attr->attlen < 0);
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1099 and 1120 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 1071 and 1092 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	if (r->rd_rel->relkind == RELKIND_INDEX)		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("\"%s\" is an index",
						RelationGetRelationName(r))));
	else if (r->rd_rel->relkind == RELKIND_COMPOSITE_TYPE)
		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("\"%s\" is a composite type",
						RelationGetRelationName(r))));

	return r;
}

/* ----------------
 *		heap_openrv - open a heap relation specified
 *		by a RangeVar node
 *
 *		As above, but relation is specified by a RangeVar.
 * ----------------
 */
Relation
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 429 and 444 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 380 and 395 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
	int			res;
	if (plan == NULL || plan->magic != _SPI_PLAN_MAGIC || tcount < 0)
		return SPI_ERROR_ARGUMENT;

	if (plan->nargs > 0 && Values == NULL)
		return SPI_ERROR_PARAM;

	res = _SPI_begin_call(true);
	if (res < 0)
		return res;

	res = _SPI_execute_plan(plan,
							_SPI_convert_params(plan->nargs, plan->argtypes,
												Values, Nulls,
												0),
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1924 and 1943 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1691 and 1710 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
		rels = get_rels_with_domain(domainoid, ShareLock);
		foreach(rt, rels)
		{
			RelToCheck *rtc = (RelToCheck *) lfirst(rt);
			Relation	testrel = rtc->rel;
			TupleDesc	tupdesc = RelationGetDescr(testrel);
			HeapScanDesc scan;
			HeapTuple	tuple;

			/* Scan all tuples in this relation */
			scan = heap_beginscan(testrel, SnapshotNow, 0, NULL);
			while ((tuple = heap_getnext(scan, ForwardScanDirection)) != NULL)
			{
				int			i;

				/* Test attributes that are of the domain */
				for (i = 0; i < rtc->natts; i++)
				{
					int			attnum = rtc->atts[i];
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 3674 and 3688 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 3476 and 3497 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
		readFile = XLogFileRead(readId, readSeg, emode);		if (readFile < 0)
			goto next_record_is_invalid;

		/*
		 * Whenever switching to a new WAL segment, we read the first page of
		 * the file and validate its header, even if that's not where the
		 * target record is.  This is so that we can check the additional
		 * identification info that is present in the first page's "long"
		 * header.
		 */
		readOff = 0;
		if (read(readFile, readBuf, XLOG_BLCKSZ) != XLOG_BLCKSZ)
		{
			ereport(emode,
					(errcode_for_file_access(),
					 errmsg("could not read from log file %u, segment %u, offset %u: %m",
							readId, readSeg, readOff)));
			goto next_record_is_invalid;
		}
		if (!ValidXLOGHeader((XLogPageHeader) readBuf, emode))
			goto next_record_is_invalid;
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 261 and 277 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 83 and 99 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
			break;		case T_SubLink:
			{
				SubLink    *sublink = (SubLink *) expr;

				if (sublink->subLinkType == EXPR_SUBLINK ||
					sublink->subLinkType == ARRAY_SUBLINK)
				{
					/* get the type of the subselect's first target column */
					Query	   *qtree = (Query *) sublink->subselect;
					TargetEntry *tent;

					if (!qtree || !IsA(qtree, Query))
						elog(ERROR, "cannot get type for untransformed sublink");
					tent = (TargetEntry *) linitial(qtree->targetList);
					Assert(IsA(tent, TargetEntry));
					Assert(!tent->resjunk);
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1992 and 2006 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
 Between lines 1834 and 1848 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tsearchcmds.c
			ScanKeyInit(&skey[0],						Anum_pg_ts_config_map_mapcfg,
						BTEqualStrategyNumber, F_OIDEQ,
						ObjectIdGetDatum(cfgId));
			ScanKeyInit(&skey[1],
						Anum_pg_ts_config_map_maptokentype,
						BTEqualStrategyNumber, F_INT4EQ,
						Int32GetDatum(tokens[i]));

			scan = systable_beginscan(relMap, TSConfigMapIndexId, true,
									  SnapshotNow, 2, skey);

			while (HeapTupleIsValid((maptup = systable_getnext(scan))))
			{
				simple_heap_delete(relMap, &maptup->t_self);
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1868 and 1884 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 1799 and 1815 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	Relation	rel;	HeapScanDesc scan;
	HeapTuple	tuple;

	rel = heap_open(TableSpaceRelationId, AccessShareLock);
	scan = heap_beginscan(rel, SnapshotNow, 0, NULL);
	while ((tuple = heap_getnext(scan, ForwardScanDirection)) != NULL)
	{
		Oid			dsttablespace = HeapTupleGetOid(tuple);
		char	   *dstpath;
		struct stat st;

		/* Don't mess with the global tablespace */
		if (dsttablespace == GLOBALTABLESPACE_OID)
			continue;

		dstpath = GetDatabasePath(db_id, dsttablespace);
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1177 and 1188 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 1016 and 1027 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
				   -1,			/* Internal size (varlena) */				   TYPTYPE_BASE,	/* Not composite - typelem is */
				   TYPCATEGORY_ARRAY,	/* type-category (array) */
				   false,		/* array types are never preferred */
				   DEFAULT_TYPDELIM,	/* default array delimiter */
				   F_ARRAY_IN,	/* array input proc */
				   F_ARRAY_OUT, /* array output proc */
				   F_ARRAY_RECV,	/* array recv (bin) proc */
				   F_ARRAY_SEND,	/* array send (bin) proc */
				   InvalidOid,	/* typmodin procedure - none */
				   InvalidOid,	/* typmodout procedure - none */
				   InvalidOid,	/* analyze procedure - default */
=====================================================================
Found 12 duplicate lines in the following files:
 Between lines 1511 and 1524 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
 Between lines 1591 and 1604 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
static DatumGetAggInitVal(Datum textInitVal, Oid transtype)
{
	Oid			typinput,
				typioparam;
	char	   *strInitVal;
	Datum		initVal;

	getTypeInputInfo(transtype, &typinput, &typioparam);
	strInitVal = TextDatumGetCString(textInitVal);
	initVal = OidInputFunctionCall(typinput, strInitVal,
								   typioparam, -1);
	pfree(strInitVal);
	return initVal;
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 1366 and 1378 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 1364 and 1376 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
	Oid			inputTypes[FUNC_MAX_ARGS];	int			numArguments;
	HeapTuple	aggTuple;
	Form_pg_aggregate aggform;
	Oid			aggtranstype;
	AclResult	aclresult;
	Oid			transfn_oid,
				finalfn_oid;
	Expr	   *transfnexpr,
			   *finalfnexpr;
	Datum		textInitVal;
	int			i;
	ListCell   *lc;
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 278 and 293 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 670 and 685 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	aclresult = pg_namespace_aclcheck(namespaceoid, GetUserId(), ACL_CREATE);	if (aclresult != ACLCHECK_OK)
		aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
					   get_namespace_name(namespaceoid));

	/* Get necessary info about access method */
	tup = SearchSysCache(AMNAME,
						 CStringGetDatum(stmt->amname),
						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						stmt->amname)));

	amoid = HeapTupleGetOid(tup);
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 4062 and 4077 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 4123 and 4138 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	attrelation = heap_open(AttributeRelationId, RowExclusiveLock);
	tuple = SearchSysCacheCopyAttName(RelationGetRelid(rel), colName);

	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_COLUMN),
				 errmsg("column \"%s\" of relation \"%s\" does not exist",
						colName, RelationGetRelationName(rel))));
	attrtuple = (Form_pg_attribute) GETSTRUCT(tuple);

	if (attrtuple->attnum <= 0)
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("cannot alter system column \"%s\"",
						colName)));
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 2704 and 2724 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
 Between lines 2931 and 2951 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
				HeapTupleHeader htup;
				if (!ItemIdIsUsed(itemid))
					continue;
				/* Shouldn't be any DEAD or REDIRECT items anymore */
				Assert(ItemIdIsNormal(itemid));

				htup = (HeapTupleHeader) PageGetItem(page, itemid);
				if (htup->t_infomask & HEAP_XMIN_COMMITTED)
					continue;

				/*
				 * See comments in the walk-along-page loop above about why
				 * only MOVED_OFF tuples should be found here.
				 */
				if (htup->t_infomask & HEAP_MOVED_IN)
					elog(ERROR, "HEAP_MOVED_IN was not expected");
				if (!(htup->t_infomask & HEAP_MOVED_OFF))
					elog(ERROR, "HEAP_MOVED_OFF was expected");
				if (HeapTupleHeaderGetXvac(htup) != myXID)
					elog(ERROR, "invalid XVAC in tuple header");
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 2886 and 2900 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3054 and 3068 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3146 and 3160 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
			break;
			/* These cases are invalid. */
		case TBLOCK_DEFAULT:
		case TBLOCK_BEGIN:
		case TBLOCK_SUBBEGIN:
		case TBLOCK_END:
		case TBLOCK_SUBEND:
		case TBLOCK_ABORT_END:
		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
		case TBLOCK_PREPARE:
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 2214 and 2230 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
 Between lines 2290 and 2306 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/spi.c
	newplan->plancache_list = NIL;	newplan->plancxt = plancxt;
	newplan->cursor_options = plan->cursor_options;
	newplan->nargs = plan->nargs;
	if (plan->nargs > 0)
	{
		newplan->argtypes = (Oid *) palloc(plan->nargs * sizeof(Oid));
		memcpy(newplan->argtypes, plan->argtypes, plan->nargs * sizeof(Oid));
	}
	else
		newplan->argtypes = NULL;

	foreach(lc, plan->plancache_list)
	{
		CachedPlanSource *plansource = (CachedPlanSource *) lfirst(lc);
		CachedPlanSource *newsource;
		CachedPlan *cplan;
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 603 and 621 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 742 and 760 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
	while (heap_compute_data_size(tupleDesc,								  toast_values, toast_isnull) > maxDataLen)
	{
		int			biggest_attno = -1;
		int32		biggest_size = MAXALIGN(TOAST_POINTER_SIZE);
		Datum		old_value;
		Datum		new_value;

		/*
		 * Search for the biggest yet uncompressed internal attribute
		 */
		for (i = 0; i < numAttrs; i++)
		{
			if (toast_action[i] != ' ')
				continue;
			if (VARATT_IS_EXTERNAL(DatumGetPointer(toast_values[i])))
				continue;		/* can't happen, toast_action would be 'p' */
			if (VARATT_IS_COMPRESSED(DatumGetPointer(toast_values[i])))
				continue;
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 1167 and 1184 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
 Between lines 1296 and 1318 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_shdepend.c
						  getObjectDescription(&obj))));
			/*
			 * There's no need to tell the whole truth, which is that we
			 * didn't track these dependencies at all ...
			 */
		}

		ScanKeyInit(&key[0],
					Anum_pg_shdepend_refclassid,
					BTEqualStrategyNumber, F_OIDEQ,
					ObjectIdGetDatum(AuthIdRelationId));
		ScanKeyInit(&key[1],
					Anum_pg_shdepend_refobjid,
					BTEqualStrategyNumber, F_OIDEQ,
					ObjectIdGetDatum(roleid));

		scan = systable_beginscan(sdepRel, SharedDependReferenceIndexId, true,
								  SnapshotNow, 2, key);

		while ((tuple = systable_getnext(scan)) != NULL)
		{
			Form_pg_shdepend sdepForm = (Form_pg_shdepend) GETSTRUCT(tuple);
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 4307 and 4322 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 4532 and 4547 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
		if (errno == 0)			errno = ENOSPC;
		ereport(PANIC,
				(errcode_for_file_access(),
				 errmsg("could not write to control file: %m")));
	}

	if (pg_fsync(fd) != 0)
		ereport(PANIC,
				(errcode_for_file_access(),
				 errmsg("could not fsync control file: %m")));

	if (close(fd))
		ereport(PANIC,
				(errcode_for_file_access(),
				 errmsg("could not close control file: %m")));
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 718 and 742 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
 Between lines 834 and 858 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
		HeapTuple	roleTup;
		if (!IsTransactionState())
		{
			/*
			 * Can't do catalog lookups, so fail.  The upshot of this is that
			 * role cannot be set in postgresql.conf, which seems like a good
			 * thing anyway.
			 */
			return NULL;
		}

		roleTup = SearchSysCache(AUTHNAME,
								 PointerGetDatum(value),
								 0, 0, 0);
		if (!HeapTupleIsValid(roleTup))
		{
			ereport(GUC_complaint_elevel(source),
					(errcode(ERRCODE_UNDEFINED_OBJECT),
					 errmsg("role \"%s\" does not exist", value)));
			return NULL;
		}

		roleid = HeapTupleGetOid(roleTup);
		is_superuser = ((Form_pg_authid) GETSTRUCT(roleTup))->rolsuper;
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 1693 and 1705 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/heap.c
 Between lines 2296 and 2308 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
						  InvalidOid,	/* Foreign key fields */						  NULL,
						  NULL,
						  NULL,
						  NULL,
						  0,
						  ' ',
						  ' ',
						  ' ',
						  InvalidOid,
						  expr, /* Tree form check constraint */
						  ccbin,	/* Binary form check constraint */
						  ccsrc,	/* Source form check constraint */
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 199 and 231 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
 Between lines 347 and 379 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	Relation	depRel;	ObjectAddresses *targetObjects;
	int			i;

	/*
	 * We save some cycles by opening pg_depend just once and passing the
	 * Relation pointer down to all the recursive deletion steps.
	 */
	depRel = heap_open(DependRelationId, RowExclusiveLock);

	/*
	 * Acquire deletion lock on the target object.	(Ideally the caller has
	 * done this already, but many places are sloppy about it.)
	 */
	AcquireDeletionLock(object);

	/*
	 * Construct a list of objects to delete (ie, the given object plus
	 * everything directly or indirectly dependent on it).
	 */
	targetObjects = new_object_addresses();

	findDependentObjects(object,
						 DEPFLAG_ORIGINAL,
						 NULL,	/* empty stack */
						 targetObjects,
						 NULL,	/* no pendingObjects */
						 depRel);

	/*
	 * Check if deletion is allowed, and report about cascaded deletes.
	 */
	reportDependentObjects(targetObjects,
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 2313 and 2331 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 2978 and 2996 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
						 &update_ctid, &update_xmax,						 GetCurrentCommandId(true), InvalidSnapshot,
						 true /* wait for commit */ );
	switch (result)
	{
		case HeapTupleSelfUpdated:
			/* Tuple was already updated in current command? */
			elog(ERROR, "tuple already updated by self");
			break;

		case HeapTupleMayBeUpdated:
			/* done successfully */
			break;

		case HeapTupleUpdated:
			elog(ERROR, "tuple concurrently updated");
			break;

		default:
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 251 and 264 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
 Between lines 346 and 359 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
		err = SSL_get_error(port->ssl, n);		switch (err)
		{
			case SSL_ERROR_NONE:
				port->count += n;
				break;
			case SSL_ERROR_WANT_READ:
			case SSL_ERROR_WANT_WRITE:
#ifdef WIN32
				pgwin32_waitforsinglesocket(SSL_get_fd(port->ssl),
											(err == SSL_ERROR_WANT_READ) ?
									FD_READ | FD_CLOSE : FD_WRITE | FD_CLOSE,
											INFINITE);
#endif
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 3827 and 3844 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 3919 and 3936 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	attr_rel = heap_open(AttributeRelationId, RowExclusiveLock);
	tuple = SearchSysCacheCopyAttName(RelationGetRelid(rel), colName);

	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_COLUMN),
				 errmsg("column \"%s\" of relation \"%s\" does not exist",
						colName, RelationGetRelationName(rel))));

	attnum = ((Form_pg_attribute) GETSTRUCT(tuple))->attnum;

	/* Prevent them from altering a system attribute */
	if (attnum <= 0)
		ereport(ERROR,
				(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
				 errmsg("cannot alter system column \"%s\"",
						colName)));
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 956 and 969 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
 Between lines 1107 and 1120 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/explain.c
			SubPlanState *sps = (SubPlanState *) lfirst(lst);			SubPlan    *sp = (SubPlan *) sps->xprstate.expr;

			for (i = 0; i < indent; i++)
				appendStringInfo(str, "  ");
			appendStringInfo(str, "  %s\n", sp->plan_name);
			for (i = 0; i < indent; i++)
				appendStringInfo(str, "  ");
			appendStringInfo(str, "    ->  ");
			explain_outNode(str,
							exec_subplan_get_plan(es->pstmt, sp),
							sps->planstate,
							NULL,
							indent + 4, es);
=====================================================================
Found 13 duplicate lines in the following files:
 Between lines 382 and 407 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
 Between lines 264 and 289 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/indextuple.c
			*isnull = true;			return (Datum) NULL;
		}
#endif

		/*
		 * Now check to see if any preceding bits are null...
		 */
		{
			int byte = attnum >> 3;
			int			finalbit = attnum & 0x07;

			/* check for nulls "before" final bit of last byte */
			if ((~bp[byte]) & ((1 << finalbit) - 1))
				slow = true;
			else
			{
				/* check for nulls in any "earlier" bytes */
				int			i;

				for (i = 0; i < byte; i++)
				{
					if (bp[i] != 0xFF)
					{
						slow = true;
						break;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 910 and 924 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootstrap.c
 Between lines 605 and 619 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootstrap.c
		rel = heap_open(TypeRelationId, NoLock);		scan = heap_beginscan(rel, SnapshotNow, 0, NULL);
		i = 0;
		while ((tup = heap_getnext(scan, ForwardScanDirection)) != NULL)
			++i;
		heap_endscan(scan);
		app = Typ = ALLOC(struct typmap *, i + 1);
		while (i-- > 0)
			*app++ = ALLOC(struct typmap, 1);
		*app = NULL;
		scan = heap_beginscan(rel, SnapshotNow, 0, NULL);
		app = Typ;
		while ((tup = heap_getnext(scan, ForwardScanDirection)) != NULL)
		{
			(*app)->am_oid = HeapTupleGetOid(tup);
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 4172 and 4194 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2370 and 2393 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
			int			save_errno = errno;
			/*
			 * If we fail to make the file, delete it to release disk space
			 */
			unlink(tmppath);
			/* if write didn't set errno, assume problem is no disk space */
			errno = save_errno ? save_errno : ENOSPC;

			ereport(ERROR,
					(errcode_for_file_access(),
					 errmsg("could not write to file \"%s\": %m", tmppath)));
		}
	}

	if (pg_fsync(fd) != 0)
		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not fsync file \"%s\": %m", tmppath)));

	if (close(fd))
		ereport(ERROR,
				(errcode_for_file_access(),
				 errmsg("could not close file \"%s\": %m", tmppath)));
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 441 and 457 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 124 and 140 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
	foreach(option, stmt->options)	{
		DefElem    *defel = (DefElem *) lfirst(option);

		if (strcmp(defel->defname, "password") == 0 ||
			strcmp(defel->defname, "encryptedPassword") == 0 ||
			strcmp(defel->defname, "unencryptedPassword") == 0)
		{
			if (dpassword)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dpassword = defel;
			if (strcmp(defel->defname, "encryptedPassword") == 0)
				encrypt_password = true;
			else if (strcmp(defel->defname, "unencryptedPassword") == 0)
				encrypt_password = false;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 7753 and 7776 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 6449 and 6472 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	scan = systable_beginscan(depRel, DependReferenceIndexId, true,							  SnapshotNow, 2, key);

	while (HeapTupleIsValid(tup = systable_getnext(scan)))
	{
		Form_pg_depend depForm = (Form_pg_depend) GETSTRUCT(tup);
		Relation	seqRel;

		/* skip dependencies other than auto dependencies on columns */
		if (depForm->refobjsubid == 0 ||
			depForm->classid != RelationRelationId ||
			depForm->objsubid != 0 ||
			depForm->deptype != DEPENDENCY_AUTO)
			continue;

		/* Use relation_open just in case it's an index */
		seqRel = relation_open(depForm->objid, AccessExclusiveLock);

		/* skip non-sequence relations */
		if (RelationGetForm(seqRel)->relkind != RELKIND_SEQUENCE)
		{
			/* No need to keep the lock */
			relation_close(seqRel, AccessExclusiveLock);
			continue;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1431 and 1455 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 1292 and 1316 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
	Relation	pg_authmem_rel;	TupleDesc	pg_authmem_dsc;
	ListCell   *nameitem;
	ListCell   *iditem;

	Assert(list_length(memberNames) == list_length(memberIds));

	/* Skip permission check if nothing to do */
	if (!memberIds)
		return;

	/*
	 * Check permissions: must have createrole or admin option on the role to
	 * be changed.	To mess with a superuser role, you gotta be superuser.
	 */
	if (superuser_arg(roleid))
	{
		if (!superuser())
			ereport(ERROR,
					(errcode(ERRCODE_INSUFFICIENT_PRIVILEGE),
					 errmsg("must be superuser to alter superusers")));
	}
	else
	{
		if (!have_createrole_privilege() &&
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 6656 and 6676 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 6612 and 6632 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
	memset(repl_val, 0, sizeof(repl_val));	memset(repl_null, false, sizeof(repl_null));
	memset(repl_repl, false, sizeof(repl_repl));

	if (newOptions != (Datum) 0)
		repl_val[Anum_pg_class_reloptions - 1] = newOptions;
	else
		repl_null[Anum_pg_class_reloptions - 1] = true;

	repl_repl[Anum_pg_class_reloptions - 1] = true;

	newtuple = heap_modify_tuple(tuple, RelationGetDescr(pgclass),
								 repl_val, repl_null, repl_repl);

	simple_heap_update(pgclass, &newtuple->t_self, newtuple);

	CatalogUpdateIndexes(pgclass, newtuple);

	heap_freetuple(newtuple);

	ReleaseSysCache(tuple);
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 681 and 704 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 415 and 438 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	else	{
		/*
		 * ``no movement'' scan direction: refetch prior tuple
		 */
		if (!scan->rs_inited)
		{
			Assert(!BufferIsValid(scan->rs_cbuf));
			tuple->t_data = NULL;
			return;
		}

		page = ItemPointerGetBlockNumber(&(tuple->t_self));
		if (page != scan->rs_cblock)
			heapgetpage(scan, page);

		/* Since the tuple was previously fetched, needn't lock page here */
		dp = (Page) BufferGetPage(scan->rs_cbuf);
		lineoff = ItemPointerGetOffsetNumber(&(tuple->t_self));
		lpp = PageGetItemId(dp, lineoff);
		Assert(ItemIdIsNormal(lpp));

		tuple->t_data = (HeapTupleHeader) PageGetItem((Page) dp, lpp);
		tuple->t_len = ItemIdGetLength(lpp);
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 2245 and 2265 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
 Between lines 1202 and 1222 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/nodes/nodeFuncs.c
		case T_CaseExpr:			{
				CaseExpr   *caseexpr = (CaseExpr *) node;

				if (walker(caseexpr->arg, context))
					return true;
				/* we assume walker doesn't care about CaseWhens, either */
				foreach(temp, caseexpr->args)
				{
					CaseWhen   *when = (CaseWhen *) lfirst(temp);

					Assert(IsA(when, CaseWhen));
					if (walker(when->expr, context))
						return true;
					if (walker(when->result, context))
						return true;
				}
				if (walker(caseexpr->defresult, context))
					return true;
			}
			break;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1962 and 2001 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1643 and 1682 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
		vacuum_delay_point();
		value = fetchfunc(stats, i, &isnull);

		/* Check for null/nonnull */
		if (isnull)
		{
			null_cnt++;
			continue;
		}
		nonnull_cnt++;

		/*
		 * If it's a variable-width field, add up widths for average width
		 * calculation.  Note that if the value is toasted, we use the toasted
		 * width.  We don't bother with this calculation if it's a fixed-width
		 * type.
		 */
		if (is_varlena)
		{
			total_width += VARSIZE_ANY(DatumGetPointer(value));

			/*
			 * If the value is toasted, we want to detoast it just once to
			 * avoid repeated detoastings and resultant excess memory usage
			 * during the comparisons.	Also, check to see if the value is
			 * excessively wide, and if so don't detoast at all --- just
			 * ignore the value.
			 */
			if (toast_raw_datum_size(value) > WIDTH_THRESHOLD)
			{
				toowide_cnt++;
				continue;
			}
			value = PointerGetDatum(PG_DETOAST_DATUM(value));
		}
		else if (is_varwidth)
		{
			/* must be cstring */
			total_width += strlen(DatumGetCString(value)) + 1;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1244 and 1263 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 918 and 937 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 1839 and 1858 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
 Between lines 1761 and 1780 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/twophase.c
	rdata[0].buffer = InvalidBuffer;	/* dump rels to delete */
	if (nrels > 0)
	{
		rdata[0].next = &(rdata[1]);
		rdata[1].data = (char *) rels;
		rdata[1].len = nrels * sizeof(RelFileNode);
		rdata[1].buffer = InvalidBuffer;
		lastrdata = 1;
	}
	/* dump committed child Xids */
	if (nchildren > 0)
	{
		rdata[lastrdata].next = &(rdata[2]);
		rdata[2].data = (char *) children;
		rdata[2].len = nchildren * sizeof(TransactionId);
		rdata[2].buffer = InvalidBuffer;
		lastrdata = 2;
	}
	rdata[lastrdata].next = NULL;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 2198 and 2221 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 1848 and 1871 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
			if (num_mcv > track_cnt)				num_mcv = track_cnt;
			for (i = 0; i < num_mcv; i++)
			{
				if (track[i].count < mincount)
				{
					num_mcv = i;
					break;
				}
			}
		}

		/* Generate MCV slot entry */
		if (num_mcv > 0)
		{
			MemoryContext old_context;
			Datum	   *mcv_values;
			float4	   *mcv_freqs;

			/* Must copy the target values into anl_context */
			old_context = MemoryContextSwitchTo(stats->anl_context);
			mcv_values = (Datum *) palloc(num_mcv * sizeof(Datum));
			mcv_freqs = (float4 *) palloc(num_mcv * sizeof(float4));
			for (i = 0; i < num_mcv; i++)
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 962 and 984 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
 Between lines 769 and 791 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeIndexscan.c
			if (leftop && IsA(leftop, RelabelType))				leftop = ((RelabelType *) leftop)->arg;

			Assert(leftop != NULL);

			if (!(IsA(leftop, Var) &&
				  ((Var *) leftop)->varno == scanrelid))
				elog(ERROR, "indexqual doesn't have key on left side");

			varattno = ((Var *) leftop)->varattno;
			if (varattno < 1 || varattno > index->rd_index->indnatts)
				elog(ERROR, "bogus index qualification");

			/*
			 * We have to look up the operator's strategy number.  This
			 * provides a cross-check that the operator does match the index.
			 */
			opfamily = index->rd_opfamily[varattno - 1];

			get_op_opfamily_properties(opno, opfamily,
									   &op_strategy,
									   &op_lefttype,
									   &op_righttype);
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 284 and 299 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 779 and 794 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	tup = SearchSysCache(AMNAME,						 CStringGetDatum(stmt->amname),
						 0, 0, 0);
	if (!HeapTupleIsValid(tup))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_OBJECT),
				 errmsg("access method \"%s\" does not exist",
						stmt->amname)));

	amoid = HeapTupleGetOid(tup);
	pg_am = (Form_pg_am) GETSTRUCT(tup);
	maxOpNumber = pg_am->amstrategies;
	/* if amstrategies is zero, just enforce that op numbers fit in int16 */
	if (maxOpNumber <= 0)
		maxOpNumber = SHRT_MAX;
	maxProcNumber = pg_am->amsupport;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1313 and 1329 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
 Between lines 1253 and 1269 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/functions.c
					Expr   *null_expr;
					/* The type of the null we insert isn't important */
					null_expr = (Expr *) makeConst(INT4OID,
												   -1,
												   sizeof(int32),
												   (Datum) 0,
												   true,		/* isnull */
												   true /* byval */ );
					newtlist = lappend(newtlist,
									   makeTargetEntry(null_expr,
													   colindex,
													   NULL,
													   false));
					/* NULL insertion is dangerous in a setop */
					if (parse->setOperations)
						*modifyTargetList = true;
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1871 and 1903 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
 Between lines 1796 and 1833 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
	if (!gottuple)	{
		if (isout)
			*isout = true;
		*isnull = true;
		return (Datum) 0;
	}
	else
	{
		if (isout)
			*isout = false;
		if (set_mark)
			WinSetMarkPosition(winobj, abs_pos);
		econtext->ecxt_outertuple = slot;
		return ExecEvalExpr((ExprState *) list_nth(winobj->argstates, argno),
							econtext, isnull, NULL);
	}
}

/*
 * WinGetFuncArgInFrame
 *		Evaluate a window function's argument expression on a specified
 *		row of the window frame.  The row is identified in lseek(2) style,
 *		i.e. relative to the current, first, or last row.
 *
 * argno: argument number to evaluate (counted from 0)
 * relpos: signed rowcount offset from the seek position
 * seektype: WINDOW_SEEK_CURRENT, WINDOW_SEEK_HEAD, or WINDOW_SEEK_TAIL
 * set_mark: If the row is found and set_mark is true, the mark is moved to
 *		the row as a side-effect.
 * isnull: output argument, receives isnull status of result
 * isout: output argument, set to indicate whether target row position
 *		is out of frame (can pass NULL if caller doesn't care about this)
 *
 * Specifying a nonexistent row is not an error, it just causes a null result
 * (plus setting *isout true, if isout isn't NULL).
 */
Datum
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 394 and 411 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
 Between lines 345 and 362 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/pg_depend.c
	ScanKeyInit(&key[0],				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(RelationRelationId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(seqId));

	scan = systable_beginscan(depRel, DependDependerIndexId, true,
							  SnapshotNow, 2, key);

	while (HeapTupleIsValid((tup = systable_getnext(scan))))
	{
		Form_pg_depend depform = (Form_pg_depend) GETSTRUCT(tup);

		if (depform->refclassid == RelationRelationId &&
			depform->deptype == DEPENDENCY_AUTO)
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 631 and 662 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 362 and 393 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	else if (backward)	{
		if (!scan->rs_inited)
		{
			/*
			 * return null immediately if relation is empty
			 */
			if (scan->rs_nblocks == 0)
			{
				Assert(!BufferIsValid(scan->rs_cbuf));
				tuple->t_data = NULL;
				return;
			}

			/*
			 * Disable reporting to syncscan logic in a backwards scan; it's
			 * not very likely anyone else is doing the same thing at the same
			 * time, and much more likely that we'll just bollix things for
			 * forward scanners.
			 */
			scan->rs_syncscan = false;
			/* start from last page of the scan */
			if (scan->rs_startblock > 0)
				page = scan->rs_startblock - 1;
			else
				page = scan->rs_nblocks - 1;
			heapgetpage(scan, page);
		}
		else
		{
			/* continue from previously returned page/tuple */
			page = scan->rs_cblock;		/* current page */
=====================================================================
Found 14 duplicate lines in the following files:
 Between lines 1947 and 1965 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 1712 and 1729 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	ResourceOwnerRelease(TopTransactionResourceOwner,						 RESOURCE_RELEASE_LOCKS,
						 true, true);
	ResourceOwnerRelease(TopTransactionResourceOwner,
						 RESOURCE_RELEASE_AFTER_LOCKS,
						 true, true);

	/* Check we've released all catcache entries */
	AtEOXact_CatCache(true);

	AtEOXact_GUC(true, 1);
	AtEOXact_SPI(true);
	AtEOXact_on_commit_actions(true);
	AtEOXact_Namespace(true);
	/* smgrcommit already done */
	AtEOXact_Files();
	AtEOXact_ComboCid();
	AtEOXact_HashTables(true);
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 4373 and 4398 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 4401 and 4426 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	int			i;
	appendStringInfoString(buf, timestamptz_to_str(xlrec->xact_time));
	if (xlrec->nrels > 0)
	{
		appendStringInfo(buf, "; rels:");
		for (i = 0; i < xlrec->nrels; i++)
		{
			char	   *path = relpath(xlrec->xnodes[i], MAIN_FORKNUM);

			appendStringInfo(buf, " %s", path);
			pfree(path);
		}
	}
	if (xlrec->nsubxacts > 0)
	{
		TransactionId *xacts = (TransactionId *)
		&xlrec->xnodes[xlrec->nrels];

		appendStringInfo(buf, "; subxacts:");
		for (i = 0; i < xlrec->nsubxacts; i++)
			appendStringInfo(buf, " %u", xacts[i]);
	}
}

void
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 712 and 735 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 821 and 844 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
				continue;			if (toast_sizes[i] > biggest_size)
			{
				biggest_attno = i;
				biggest_size = toast_sizes[i];
			}
		}

		if (biggest_attno < 0)
			break;

		/*
		 * Store this external
		 */
		i = biggest_attno;
		old_value = toast_values[i];
		toast_action[i] = 'p';
		toast_values[i] = toast_save_datum(rel, toast_values[i], options);
		if (toast_free[i])
			pfree(DatumGetPointer(old_value));
		toast_free[i] = true;

		need_change = true;
		need_free = true;
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 4656 and 4676 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 4715 and 4735 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
	if (record->xl_info & XLR_BKP_BLOCK_1)		return;

	buffer = XLogReadBuffer(xlrec->target.node,
							ItemPointerGetBlockNumber(&(xlrec->target.tid)),
							false);
	if (!BufferIsValid(buffer))
		return;
	page = (Page) BufferGetPage(buffer);

	if (XLByteLE(lsn, PageGetLSN(page)))		/* changes are applied */
	{
		UnlockReleaseBuffer(buffer);
		return;
	}

	offnum = ItemPointerGetOffsetNumber(&(xlrec->target.tid));
	if (PageGetMaxOffsetNumber(page) >= offnum)
		lp = PageGetItemId(page, offnum);

	if (PageGetMaxOffsetNumber(page) < offnum || !ItemIdIsNormal(lp))
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 1363 and 1378 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
 Between lines 1435 and 1450 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/dbcommands.c
	rel = heap_open(DatabaseRelationId, RowExclusiveLock);	ScanKeyInit(&scankey,
				Anum_pg_database_datname,
				BTEqualStrategyNumber, F_NAMEEQ,
				NameGetDatum(stmt->dbname));
	scan = systable_beginscan(rel, DatabaseNameIndexId, true,
							  SnapshotNow, 1, &scankey);
	tuple = systable_getnext(scan);
	if (!HeapTupleIsValid(tuple))
		ereport(ERROR,
				(errcode(ERRCODE_UNDEFINED_DATABASE),
				 errmsg("database \"%s\" does not exist", stmt->dbname)));

	if (!pg_database_ownercheck(HeapTupleGetOid(tuple), GetUserId()))
		aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_DATABASE,
					   stmt->dbname);
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 2478 and 2494 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 2550 and 2566 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
	if (typTup->typtype == TYPTYPE_COMPOSITE &&		get_rel_relkind(typTup->typrelid) != RELKIND_COMPOSITE_TYPE)
		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("%s is a table's row type",
						format_type_be(typeOid)),
				 errhint("Use ALTER TABLE instead.")));

	/* don't allow direct alteration of array types, either */
	if (OidIsValid(typTup->typelem) &&
		get_array_type(typTup->typelem) == typeOid)
		ereport(ERROR,
				(errcode(ERRCODE_WRONG_OBJECT_TYPE),
				 errmsg("cannot alter array type %s",
						format_type_be(typeOid)),
				 errhint("You can alter type %s, which will alter the array type as well.",
						 format_type_be(typTup->typelem))));
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 369 and 392 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
 Between lines 462 and 480 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/hash/hashfunc.c
			case 3:				a += ((uint32) k[2] << 8);
			case 2:
				a += ((uint32) k[1] << 16);
			case 1:
				a += ((uint32) k[0] << 24);
				/* case 0: nothing left to add */
		}
#else							/* !WORDS_BIGENDIAN */
		switch (len)			/* all the case statements fall through */
		{
			case 11:
				c += ((uint32) k[10] << 24);
			case 10:
				c += ((uint32) k[9] << 16);
			case 9:
				c += ((uint32) k[8] << 8);
				/* the lowest byte of c is reserved for the length */
			case 8:
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 1659 and 1678 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1796 and 1815 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
		TRIGGER_EVENT_ROW |		TRIGGER_EVENT_BEFORE;
	LocTriggerData.tg_relation = relinfo->ri_RelationDesc;
	LocTriggerData.tg_newtuple = NULL;
	LocTriggerData.tg_newtuplebuf = InvalidBuffer;
	for (i = 0; i < ntrigs; i++)
	{
		Trigger    *trigger = &trigdesc->triggers[tgindx[i]];

		if (SessionReplicationRole == SESSION_REPLICATION_ROLE_REPLICA)
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_ORIGIN ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		else	/* ORIGIN or LOCAL role */
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_REPLICA ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 2289 and 2326 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 2526 and 2563 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
			s->blockState = TBLOCK_DEFAULT;			break;

			/*
			 * Here, we are already in an aborted transaction state and are
			 * waiting for a ROLLBACK, but for some reason we failed again! So
			 * we just remain in the abort state.
			 */
		case TBLOCK_ABORT:
		case TBLOCK_SUBABORT:
			break;

			/*
			 * We are in a failed transaction and we got the ROLLBACK command.
			 * We have already aborted, we just need to cleanup and go to idle
			 * state.
			 */
		case TBLOCK_ABORT_END:
			CleanupTransaction();
			s->blockState = TBLOCK_DEFAULT;
			break;

			/*
			 * We are in a live transaction and we got a ROLLBACK command.
			 * Abort, cleanup, go to idle state.
			 */
		case TBLOCK_ABORT_PENDING:
			AbortTransaction();
			CleanupTransaction();
			s->blockState = TBLOCK_DEFAULT;
			break;

			/*
			 * Here, we failed while trying to PREPARE.  Clean up the
			 * transaction and return to idle state (we do not want to stay in
			 * the transaction).
			 */
		case TBLOCK_PREPARE:
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 1286 and 1322 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 1385 and 1421 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		referenced.objectSubId = 0;
		if (OidIsValid(opclassoid))
		{
			/* if contained in an opclass, use a NORMAL dep on procedure */
			recordDependencyOn(&myself, &referenced, DEPENDENCY_NORMAL);

			/* ... and an INTERNAL dep on the opclass */
			referenced.classId = OperatorClassRelationId;
			referenced.objectId = opclassoid;
			referenced.objectSubId = 0;
			recordDependencyOn(&myself, &referenced, DEPENDENCY_INTERNAL);
		}
		else
		{
			/* if "loose" in the opfamily, use a AUTO dep on procedure */
			recordDependencyOn(&myself, &referenced, DEPENDENCY_AUTO);

			/* ... and an AUTO dep on the opfamily */
			referenced.classId = OperatorFamilyRelationId;
			referenced.objectId = opfamilyoid;
			referenced.objectSubId = 0;
			recordDependencyOn(&myself, &referenced, DEPENDENCY_AUTO);
		}
	}

	heap_close(rel, RowExclusiveLock);
}


/*
 * Remove operator entries from an opfamily.
 *
 * Note: this is only allowed for "loose" members of an opfamily, hence
 * behavior is always RESTRICT.
 */
static void
=====================================================================
Found 15 duplicate lines in the following files:
 Between lines 1790 and 1816 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
 Between lines 2130 and 2156 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/analyze.c
			int			d = f1 + nmultiple;			double		numer,
						denom,
						stadistinct;

			numer = (double) samplerows *(double) d;

			denom = (double) (samplerows - f1) +
				(double) f1 *(double) samplerows / totalrows;

			stadistinct = numer / denom;
			/* Clamp to sane range in case of roundoff error */
			if (stadistinct < (double) d)
				stadistinct = (double) d;
			if (stadistinct > totalrows)
				stadistinct = totalrows;
			stats->stadistinct = floor(stadistinct + 0.5);
		}

		/*
		 * If we estimated the number of distinct values at more than 10% of
		 * the total row count (a very arbitrary limit), then assume that
		 * stadistinct should scale with the row count rather than be a fixed
		 * value.
		 */
		if (stats->stadistinct > 0.1 * totalrows)
			stats->stadistinct = -(stats->stadistinct / totalrows);
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 3246 and 3263 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3190 and 3207 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
			break;
			/* These cases are invalid. */
		case TBLOCK_DEFAULT:
		case TBLOCK_STARTED:
		case TBLOCK_BEGIN:
		case TBLOCK_SUBBEGIN:
		case TBLOCK_END:
		case TBLOCK_SUBEND:
		case TBLOCK_ABORT:
		case TBLOCK_SUBABORT:
		case TBLOCK_ABORT_END:
		case TBLOCK_SUBABORT_END:
		case TBLOCK_ABORT_PENDING:
		case TBLOCK_SUBABORT_PENDING:
		case TBLOCK_SUBRESTART:
		case TBLOCK_SUBABORT_RESTART:
		case TBLOCK_PREPARE:
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 7537 and 7555 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
 Between lines 2270 and 2288 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/tablecmds.c
			break;
		case OBJECT_SEQUENCE:
			if (rel->rd_rel->relkind != RELKIND_SEQUENCE)
				ereport(ERROR,
						(errcode(ERRCODE_WRONG_OBJECT_TYPE),
						 errmsg("\"%s\" is not a sequence",
								RelationGetRelationName(rel))));
			break;

		case OBJECT_VIEW:
			if (rel->rd_rel->relkind != RELKIND_VIEW)
				ereport(ERROR,
						(errcode(ERRCODE_WRONG_OBJECT_TYPE),
						 errmsg("\"%s\" is not a view",
								RelationGetRelationName(rel))));
			break;

		default:
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 593 and 617 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
 Between lines 392 and 416 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/printtup.c
	j = 0;	k = 1 << 7;
	for (i = 0; i < natts; ++i)
	{
		if (!slot->tts_isnull[i])
			j |= k;				/* set bit if not null */
		k >>= 1;
		if (k == 0)				/* end of byte? */
		{
			pq_sendint(&buf, j, 1);
			j = 0;
			k = 1 << 7;
		}
	}
	if (k != (1 << 7))			/* flush last partial byte */
		pq_sendint(&buf, j, 1);

	/*
	 * send the attributes of this tuple
	 */
	for (i = 0; i < natts; ++i)
	{
		PrinttupAttrInfo *thisState = myState->myinfo + i;
		Datum		origattr = slot->tts_values[i],
					attr;
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 786 and 806 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
 Between lines 610 and 630 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/sequence.c
		xlrec.node = seqrel->rd_node;		rdata[0].data = (char *) &xlrec;
		rdata[0].len = sizeof(xl_seq_rec);
		rdata[0].buffer = InvalidBuffer;
		rdata[0].next = &(rdata[1]);

		/* set values that will be saved in xlog */
		seq->last_value = next;
		seq->is_called = true;
		seq->log_cnt = 0;

		rdata[1].data = (char *) page + ((PageHeader) page)->pd_upper;
		rdata[1].len = ((PageHeader) page)->pd_special -
			((PageHeader) page)->pd_upper;
		rdata[1].buffer = InvalidBuffer;
		rdata[1].next = NULL;

		recptr = XLogInsert(RM_SEQ_ID, XLOG_SEQ_LOG, rdata);

		PageSetLSN(page, recptr);
		PageSetTLI(page, ThisTimeLineID);
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 388 and 412 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 286 and 315 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
		rootbuf = metabuf;
		for (;;)
		{
			rootbuf = _bt_relandgetbuf(rel, rootbuf, rootblkno, BT_READ);
			rootpage = BufferGetPage(rootbuf);
			rootopaque = (BTPageOpaque) PageGetSpecialPointer(rootpage);

			if (!P_IGNORE(rootopaque))
				break;

			/* it's dead, Jim.  step right one page */
			if (P_RIGHTMOST(rootopaque))
				elog(ERROR, "no live root page found in index \"%s\"",
					 RelationGetRelationName(rel));
			rootblkno = rootopaque->btpo_next;
		}

		/* Note: can't check btpo.level on deleted pages */
		if (rootopaque->btpo.level != rootlevel)
			elog(ERROR, "root page %u of index \"%s\" has level %u, expected %u",
				 rootblkno, RelationGetRelationName(rel),
				 rootopaque->btpo.level, rootlevel);
	}

	/*
	 * By here, we have a pin and read lock on the root page, and no lock set
	 * on the metadata page.  Return the root page's buffer.
	 */
	return rootbuf;
=====================================================================
Found 16 duplicate lines in the following files:
 Between lines 1969 and 1998 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 1734 and 1765 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	CurrentResourceOwner = NULL;	ResourceOwnerDelete(TopTransactionResourceOwner);
	s->curTransactionOwner = NULL;
	CurTransactionResourceOwner = NULL;
	TopTransactionResourceOwner = NULL;

	AtCommit_Memory();

	s->transactionId = InvalidTransactionId;
	s->subTransactionId = InvalidSubTransactionId;
	s->nestingLevel = 0;
	s->gucNestLevel = 0;
	s->childXids = NULL;
	s->nChildXids = 0;
	s->maxChildXids = 0;

	/*
	 * done with commit processing, set current transaction state back to
	 * default
	 */
	s->state = TRANS_DEFAULT;

	RESUME_INTERRUPTS();
}


/*
 *	PrepareTransaction
 *
 * NB: if you change this routine, better look at CommitTransaction too!
 */
static void
=====================================================================
Found 17 duplicate lines in the following files:
 Between lines 1386 and 1413 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
 Between lines 1602 and 1629 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/tuptoaster.c
	while ((ttup = systable_getnext_ordered(toastscan, ForwardScanDirection)) != NULL)	{
		/*
		 * Have a chunk, extract the sequence number and the data
		 */
		residx = DatumGetInt32(fastgetattr(ttup, 2, toasttupDesc, &isnull));
		Assert(!isnull);
		chunk = DatumGetPointer(fastgetattr(ttup, 3, toasttupDesc, &isnull));
		Assert(!isnull);
		if (!VARATT_IS_EXTENDED(chunk))
		{
			chunksize = VARSIZE(chunk) - VARHDRSZ;
			chunkdata = VARDATA(chunk);
		}
		else if (VARATT_IS_SHORT(chunk))
		{
			/* could happen due to heap_form_tuple doing its thing */
			chunksize = VARSIZE_SHORT(chunk) - VARHDRSZ_SHORT;
			chunkdata = VARDATA_SHORT(chunk);
		}
		else
		{
			/* should never happen */
			elog(ERROR, "found toasted toast chunk for toast value %u in %s",
				 toast_pointer.va_valueid,
				 RelationGetRelationName(toastrel));
			chunksize = 0;		/* keep compiler quiet */
			chunkdata = NULL;
=====================================================================
Found 17 duplicate lines in the following files:
 Between lines 4252 and 4283 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 4295 and 4326 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
	max_xid = xid;	for (i = 0; i < xlrec->nsubxacts; i++)
	{
		if (TransactionIdPrecedes(max_xid, sub_xids[i]))
			max_xid = sub_xids[i];
	}
	if (TransactionIdFollowsOrEquals(max_xid,
									 ShmemVariableCache->nextXid))
	{
		ShmemVariableCache->nextXid = max_xid;
		TransactionIdAdvance(ShmemVariableCache->nextXid);
	}

	/* Make sure files supposed to be dropped are dropped */
	for (i = 0; i < xlrec->nrels; i++)
	{
		SMgrRelation srel = smgropen(xlrec->xnodes[i]);
		ForkNumber	fork;

		for (fork = 0; fork <= MAX_FORKNUM; fork++)
		{
			if (smgrexists(srel, fork))
			{
				XLogDropRelation(xlrec->xnodes[i], fork);
				smgrdounlink(srel, fork, false, true);
			}
		}
		smgrclose(srel);
	}
}

void
=====================================================================
Found 17 duplicate lines in the following files:
 Between lines 1449 and 1473 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 1413 and 1437 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
		aggOwner = ((Form_pg_proc) GETSTRUCT(procTuple))->proowner;		ReleaseSysCache(procTuple);

		aclresult = pg_proc_aclcheck(transfn_oid, aggOwner,
									 ACL_EXECUTE);
		if (aclresult != ACLCHECK_OK)
			aclcheck_error(aclresult, ACL_KIND_PROC,
						   get_func_name(transfn_oid));
		if (OidIsValid(finalfn_oid))
		{
			aclresult = pg_proc_aclcheck(finalfn_oid, aggOwner,
										 ACL_EXECUTE);
			if (aclresult != ACLCHECK_OK)
				aclcheck_error(aclresult, ACL_KIND_PROC,
							   get_func_name(finalfn_oid));
		}
	}

	/* resolve actual type of transition state, if polymorphic */
	aggtranstype = aggform->aggtranstype;
	if (IsPolymorphicType(aggtranstype))
	{
		/* have to fetch the agg's declared input types... */
		Oid		   *declaredArgTypes;
		int			agg_nargs;
=====================================================================
Found 18 duplicate lines in the following files:
 Between lines 1427 and 1458 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
 Between lines 675 and 706 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
	Size		len,				data_len;
	int			hoff;
	bool		hasnull = false;
	Form_pg_attribute *att = tupleDescriptor->attrs;
	int			numberOfAttributes = tupleDescriptor->natts;
	int			i;

	if (numberOfAttributes > MaxTupleAttributeNumber)
		ereport(ERROR,
				(errcode(ERRCODE_TOO_MANY_COLUMNS),
				 errmsg("number of columns (%d) exceeds limit (%d)",
						numberOfAttributes, MaxTupleAttributeNumber)));

	/*
	 * Check for nulls and embedded tuples; expand any toasted attributes in
	 * embedded tuples.  This preserves the invariant that toasting can only
	 * go one level deep.
	 *
	 * We can skip calling toast_flatten_tuple_attribute() if the attribute
	 * couldn't possibly be of composite type.  All composite datums are
	 * varlena and have alignment 'd'; furthermore they aren't arrays. Also,
	 * if an attribute is already toasted, it must have been sent to disk
	 * already and so cannot contain toasted attributes.
	 */
	for (i = 0; i < numberOfAttributes; i++)
	{
		if (isnull[i])
			hasnull = true;
		else if (att[i]->attlen == -1 &&
				 att[i]->attalign == 'd' &&
				 att[i]->attndims == 0 &&
=====================================================================
Found 18 duplicate lines in the following files:
 Between lines 1018 and 1042 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuumlazy.c
 Between lines 3590 and 3614 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/vacuum.c
	stats = index_vacuum_cleanup(&ivinfo, stats);
	if (!stats)
		return;

	/*
	 * Now update statistics in pg_class, but only if the index says the count
	 * is accurate.
	 */
	if (!stats->estimated_count)
		vac_update_relstats(indrel,
							stats->num_pages, stats->num_index_tuples,
							false, InvalidTransactionId);

	ereport(elevel,
			(errmsg("index \"%s\" now contains %.0f row versions in %u pages",
					RelationGetRelationName(indrel),
					stats->num_index_tuples,
					stats->num_pages),
			 errdetail("%.0f index row versions were removed.\n"
			 "%u index pages have been deleted, %u are currently reusable.\n"
					   "%s.",
					   stats->tuples_removed,
					   stats->pages_deleted, stats->pages_free,
					   pg_rusage_show(&ru0))));
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 1762 and 1784 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
 Between lines 1835 and 1857 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
					 int relpos, int seektype, bool set_mark,					 bool *isnull, bool *isout)
{
	WindowAggState *winstate;
	ExprContext *econtext;
	TupleTableSlot *slot;
	bool		gottuple;
	int64		abs_pos;

	Assert(WindowObjectIsValid(winobj));
	winstate = winobj->winstate;
	econtext = winstate->ss.ps.ps_ExprContext;
	slot = winstate->temp_slot_1;

	switch (seektype)
	{
		case WINDOW_SEEK_CURRENT:
			abs_pos = winstate->currentpos + relpos;
			break;
		case WINDOW_SEEK_HEAD:
			abs_pos = relpos;
			break;
		case WINDOW_SEEK_TAIL:
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 2766 and 2793 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
 Between lines 2945 and 2972 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xlog.c
				case 'r':					/* %r: filename of last restartpoint */
					sp++;
					StrNCpy(dp, lastRestartPointFname, endp - dp);
					dp += strlen(dp);
					break;
				case '%':
					/* convert %% to a single % */
					sp++;
					if (dp < endp)
						*dp++ = *sp;
					break;
				default:
					/* otherwise treat the % as not special */
					if (dp < endp)
						*dp++ = *sp;
					break;
			}
		}
		else
		{
			if (dp < endp)
				*dp++ = *sp;
		}
	}
	*dp = '\0';

	ereport(DEBUG3,
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 1506 and 1539 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeAgg.c
 Between lines 1470 and 1502 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/nodeWindowAgg.c
					&peraggstate->resulttypeLen,					&peraggstate->resulttypeByVal);
	get_typlenbyval(aggtranstype,
					&peraggstate->transtypeLen,
					&peraggstate->transtypeByVal);

	/*
	 * initval is potentially null, so don't try to access it as a struct
	 * field. Must do it the hard way with SysCacheGetAttr.
	 */
	textInitVal = SysCacheGetAttr(AGGFNOID, aggTuple,
								  Anum_pg_aggregate_agginitval,
								  &peraggstate->initValueIsNull);

	if (peraggstate->initValueIsNull)
		peraggstate->initValue = (Datum) 0;
	else
		peraggstate->initValue = GetAggInitVal(textInitVal,
											   aggtranstype);

	/*
	 * If the transfn is strict and the initval is NULL, make sure input type
	 * and transtype are the same (or at least binary-compatible), so that
	 * it's OK to use the first input value as the initial transValue.  This
	 * should have been checked at agg definition time, but just in case...
	 */
	if (peraggstate->transfn.fn_strict && peraggstate->initValueIsNull)
	{
		if (numArguments < 1 ||
			!IsBinaryCoercible(inputTypes[0], aggtranstype))
			ereport(ERROR,
					(errcode(ERRCODE_INVALID_FUNCTION_DEFINITION),
					 errmsg("aggregate %u needs to have compatible input type and transition type",
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 344 and 376 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
 Between lines 476 and 508 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/variable.c
			if (curzone)				value = curzone;
		}
	}
	else
	{
		/*
		 * Otherwise assume it is a timezone name, and try to load it.
		 */
		pg_tz	   *new_tz;

		new_tz = pg_tzset(value);

		if (!new_tz)
		{
			ereport(GUC_complaint_elevel(source),
					(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
					 errmsg("unrecognized time zone name: \"%s\"",
							value)));
			return NULL;
		}

		if (!tz_acceptable(new_tz))
		{
			ereport(GUC_complaint_elevel(source),
					(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
					 errmsg("time zone \"%s\" appears to use leap seconds",
							value),
					 errdetail("PostgreSQL does not support leap seconds.")));
			return NULL;
		}

		if (doit)
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 2678 and 2717 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 2893 and 2932 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
	int			fieldno;	char	   *output_ptr;
	char	   *cur_ptr;
	char	   *line_end_ptr;

	/*
	 * We need a special case for zero-column tables: check that the input
	 * line is empty, and return.
	 */
	if (maxfields <= 0)
	{
		if (cstate->line_buf.len != 0)
			ereport(ERROR,
					(errcode(ERRCODE_BAD_COPY_FILE_FORMAT),
					 errmsg("extra data after last expected column")));
		return 0;
	}

	resetStringInfo(&cstate->attribute_buf);

	/*
	 * The de-escaped attributes will certainly not be longer than the input
	 * data line, so we can just force attribute_buf to be large enough and
	 * then transfer data without any checks for enough space.	We need to do
	 * it this way because enlarging attribute_buf mid-stream would invalidate
	 * pointers already stored into fieldvals[].
	 */
	if (cstate->attribute_buf.maxlen <= cstate->line_buf.len)
		enlargeStringInfo(&cstate->attribute_buf, cstate->line_buf.len);
	output_ptr = cstate->attribute_buf.data;

	/* set pointer variables for loop */
	cur_ptr = cstate->line_buf.data;
	line_end_ptr = cstate->line_buf.data + cstate->line_buf.len;

	/* Outer loop iterates over fields */
	fieldno = 0;
	for (;;)
	{
		bool		found_delim = false;
=====================================================================
Found 19 duplicate lines in the following files:
 Between lines 509 and 531 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
 Between lines 960 and 982 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/catalog/dependency.c
	ScanKeyInit(&key[0],				Anum_pg_depend_classid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(object->classId));
	ScanKeyInit(&key[1],
				Anum_pg_depend_objid,
				BTEqualStrategyNumber, F_OIDEQ,
				ObjectIdGetDatum(object->objectId));
	if (object->objectSubId != 0)
	{
		ScanKeyInit(&key[2],
					Anum_pg_depend_objsubid,
					BTEqualStrategyNumber, F_INT4EQ,
					Int32GetDatum(object->objectSubId));
		nkeys = 3;
	}
	else
		nkeys = 2;

	scan = systable_beginscan(depRel, DependDependerIndexId, true,
							  SnapshotNow, nkeys, key);

	while (HeapTupleIsValid(tup = systable_getnext(scan)))
=====================================================================
Found 20 duplicate lines in the following files:
 Between lines 3363 and 3400 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
 Between lines 3265 and 3302 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/transam/xact.c
				 BlockStateAsString(s->blockState));			break;
	}

	foreach(cell, options)
	{
		DefElem    *elem = lfirst(cell);

		if (strcmp(elem->defname, "savepoint_name") == 0)
			name = strVal(elem->arg);
	}

	Assert(PointerIsValid(name));

	for (target = s; PointerIsValid(target); target = target->parent)
	{
		if (PointerIsValid(target->name) && strcmp(target->name, name) == 0)
			break;
	}

	if (!PointerIsValid(target))
		ereport(ERROR,
				(errcode(ERRCODE_S_E_INVALID_SPECIFICATION),
				 errmsg("no such savepoint")));

	/* disallow crossing savepoint level boundaries */
	if (target->savepointLevel != s->savepointLevel)
		ereport(ERROR,
				(errcode(ERRCODE_S_E_INVALID_SPECIFICATION),
				 errmsg("no such savepoint")));

	/*
	 * Mark "commit pending" all subtransactions up to the target
	 * subtransaction.	The actual commits will happen when control gets to
	 * CommitTransactionCommand.
	 */
	xact = CurrentTransactionState;
	for (;;)
=====================================================================
Found 20 duplicate lines in the following files:
 Between lines 1086 and 1113 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/functioncmds.c
 Between lines 287 and 312 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/aggregatecmds.c
	namespaceOid = procForm->pronamespace;
	/* make sure the new name doesn't exist */
	if (SearchSysCacheExists(PROCNAMEARGSNSP,
							 CStringGetDatum(newname),
							 PointerGetDatum(&procForm->proargtypes),
							 ObjectIdGetDatum(namespaceOid),
							 0))
		ereport(ERROR,
				(errcode(ERRCODE_DUPLICATE_FUNCTION),
				 errmsg("function %s already exists in schema \"%s\"",
						funcname_signature_string(newname,
												  procForm->pronargs,
											   procForm->proargtypes.values),
						get_namespace_name(namespaceOid))));

	/* must be owner */
	if (!pg_proc_ownercheck(procOid, GetUserId()))
		aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_PROC,
					   NameListToString(name));

	/* must have CREATE privilege on namespace */
	aclresult = pg_namespace_aclcheck(namespaceOid, GetUserId(), ACL_CREATE);
	if (aclresult != ACLCHECK_OK)
		aclcheck_error(aclresult, ACL_KIND_NAMESPACE,
					   get_namespace_name(namespaceOid));
=====================================================================
Found 20 duplicate lines in the following files:
 Between lines 721 and 756 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 203 and 238 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
	memset(values, 0, sizeof(values));	memset(nulls, false, sizeof(nulls));

	values[Anum_pg_opfamily_opfmethod - 1] = ObjectIdGetDatum(amoid);
	namestrcpy(&opfName, opfname);
	values[Anum_pg_opfamily_opfname - 1] = NameGetDatum(&opfName);
	values[Anum_pg_opfamily_opfnamespace - 1] = ObjectIdGetDatum(namespaceoid);
	values[Anum_pg_opfamily_opfowner - 1] = ObjectIdGetDatum(GetUserId());

	tup = heap_form_tuple(rel->rd_att, values, nulls);

	opfamilyoid = simple_heap_insert(rel, tup);

	CatalogUpdateIndexes(rel, tup);

	heap_freetuple(tup);

	/*
	 * Create dependencies for the opfamily proper.  Note: we do not create a
	 * dependency link to the AM, because we don't currently support DROP
	 * ACCESS METHOD.
	 */
	myself.classId = OperatorFamilyRelationId;
	myself.objectId = opfamilyoid;
	myself.objectSubId = 0;

	/* dependency on namespace */
	referenced.classId = NamespaceRelationId;
	referenced.objectId = namespaceoid;
	referenced.objectSubId = 0;
	recordDependencyOn(&myself, &referenced, DEPENDENCY_NORMAL);

	/* dependency on owner */
	recordDependencyOnOwner(OperatorFamilyRelationId, opfamilyoid, GetUserId());

	heap_close(rel, RowExclusiveLock);
=====================================================================
Found 20 duplicate lines in the following files:
 Between lines 853 and 877 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 401 and 425 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
		CreateOpClassItem *item = lfirst(l);		Oid			operOid;
		Oid			funcOid;
		OpFamilyMember *member;

		Assert(IsA(item, CreateOpClassItem));
		switch (item->itemtype)
		{
			case OPCLASS_ITEM_OPERATOR:
				if (item->number <= 0 || item->number > maxOpNumber)
					ereport(ERROR,
							(errcode(ERRCODE_INVALID_OBJECT_DEFINITION),
							 errmsg("invalid operator number %d,"
									" must be between 1 and %d",
									item->number, maxOpNumber)));
				if (item->args != NIL)
				{
					TypeName   *typeName1 = (TypeName *) linitial(item->args);
					TypeName   *typeName2 = (TypeName *) lsecond(item->args);

					operOid = LookupOperNameTypeNames(NULL, item->name,
													  typeName1, typeName2,
													  false, -1);
				}
				else
=====================================================================
Found 20 duplicate lines in the following files:
 Between lines 351 and 375 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
 Between lines 145 and 171 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/nbtree/nbtpage.c
		if (rel->rd_amcache)			pfree(rel->rd_amcache);
		rel->rd_amcache = NULL;
	}

	metabuf = _bt_getbuf(rel, BTREE_METAPAGE, BT_READ);
	metapg = BufferGetPage(metabuf);
	metaopaque = (BTPageOpaque) PageGetSpecialPointer(metapg);
	metad = BTPageGetMeta(metapg);

	/* sanity-check the metapage */
	if (!(metaopaque->btpo_flags & BTP_META) ||
		metad->btm_magic != BTREE_MAGIC)
		ereport(ERROR,
				(errcode(ERRCODE_INDEX_CORRUPTED),
				 errmsg("index \"%s\" is not a btree",
						RelationGetRelationName(rel))));

	if (metad->btm_version != BTREE_VERSION)
		ereport(ERROR,
				(errcode(ERRCODE_INDEX_CORRUPTED),
				 errmsg("version mismatch in index \"%s\": file version %d, code version %d",
						RelationGetRelationName(rel),
						metad->btm_version, BTREE_VERSION)));

	/* if no root page initialized yet, do it */
	if (metad->btm_root == P_NONE)
=====================================================================
Found 21 duplicate lines in the following files:
 Between lines 503 and 547 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
 Between lines 764 and 808 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/heap/heapam.c
		if (backward)		{
			finished = (page == scan->rs_startblock);
			if (page == 0)
				page = scan->rs_nblocks;
			page--;
		}
		else
		{
			page++;
			if (page >= scan->rs_nblocks)
				page = 0;
			finished = (page == scan->rs_startblock);

			/*
			 * Report our new scan position for synchronization purposes. We
			 * don't do that when moving backwards, however. That would just
			 * mess up any other forward-moving scanners.
			 *
			 * Note: we do this before checking for end of scan so that the
			 * final state of the position hint is back at the start of the
			 * rel.  That's not strictly necessary, but otherwise when you run
			 * the same query multiple times the starting position would shift
			 * a little bit backwards on every invocation, which is confusing.
			 * We don't guarantee any specific ordering in general, though.
			 */
			if (scan->rs_syncscan)
				ss_report_location(scan->rs_rd, page);
		}

		/*
		 * return NULL if we've exhausted all the pages
		 */
		if (finished)
		{
			if (BufferIsValid(scan->rs_cbuf))
				ReleaseBuffer(scan->rs_cbuf);
			scan->rs_cbuf = InvalidBuffer;
			scan->rs_cblock = InvalidBlockNumber;
			tuple->t_data = NULL;
			scan->rs_inited = false;
			return;
		}

		heapgetpage(scan, page);
=====================================================================
Found 22 duplicate lines in the following files:
 Between lines 902 and 929 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
 Between lines 450 and 477 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/opclasscmds.c
				addFamilyMember(&operators, member, false);				break;
			case OPCLASS_ITEM_FUNCTION:
				if (item->number <= 0 || item->number > maxProcNumber)
					ereport(ERROR,
							(errcode(ERRCODE_INVALID_OBJECT_DEFINITION),
							 errmsg("invalid procedure number %d,"
									" must be between 1 and %d",
									item->number, maxProcNumber)));
				funcOid = LookupFuncNameTypeNames(item->name, item->args,
												  false);
#ifdef NOT_USED
				/* XXX this is unnecessary given the superuser check above */
				/* Caller must own function */
				if (!pg_proc_ownercheck(funcOid, GetUserId()))
					aclcheck_error(ACLCHECK_NOT_OWNER, ACL_KIND_PROC,
								   get_func_name(funcOid));
#endif

				/* Save the info */
				member = (OpFamilyMember *) palloc0(sizeof(OpFamilyMember));
				member->object = funcOid;
				member->number = item->number;

				/* allow overriding of the function's actual arg types */
				if (item->class_args)
					processTypesSpec(item->class_args,
									 &member->lefttype, &member->righttype);
=====================================================================
Found 22 duplicate lines in the following files:
 Between lines 388 and 432 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/indextuple.c
 Between lines 506 and 550 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
				usecache = false;				continue;		/* this cannot be the target att */
			}

			/* If we know the next offset, we can skip the rest */
			if (usecache && att[i]->attcacheoff >= 0)
				off = att[i]->attcacheoff;
			else if (att[i]->attlen == -1)
			{
				/*
				 * We can only cache the offset for a varlena attribute if the
				 * offset is already suitably aligned, so that there would be
				 * no pad bytes in any case: then the offset will be valid for
				 * either an aligned or unaligned value.
				 */
				if (usecache &&
					off == att_align_nominal(off, att[i]->attalign))
					att[i]->attcacheoff = off;
				else
				{
					off = att_align_pointer(off, att[i]->attalign, -1,
											tp + off);
					usecache = false;
				}
			}
			else
			{
				/* not varlena, so safe to use att_align_nominal */
				off = att_align_nominal(off, att[i]->attalign);

				if (usecache)
					att[i]->attcacheoff = off;
			}

			if (i == attnum)
				break;

			off = att_addlength_pointer(off, att[i]->attlen, tp + off);

			if (usecache && att[i]->attlen <= 0)
				usecache = false;
		}
	}

	return fetchatt(att[attnum], tp + off);
=====================================================================
Found 22 duplicate lines in the following files:
 Between lines 2094 and 2122 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
 Between lines 1932 and 1960 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/executor/execMain.c
						 &update_ctid, &update_xmax,						 estate->es_output_cid,
						 estate->es_crosscheck_snapshot,
						 true /* wait for commit */ );
	switch (result)
	{
		case HeapTupleSelfUpdated:
			/* already deleted by self; nothing to do */
			return;

		case HeapTupleMayBeUpdated:
			break;

		case HeapTupleUpdated:
			if (IsXactIsoLevelSerializable)
				ereport(ERROR,
						(errcode(ERRCODE_T_R_SERIALIZATION_FAILURE),
						 errmsg("could not serialize access due to concurrent update")));
			else if (!ItemPointerEquals(tupleid, &update_ctid))
			{
				TupleTableSlot *epqslot;

				epqslot = EvalPlanQual(estate,
									   resultRelInfo->ri_RangeTableIndex,
									   &update_ctid,
									   update_xmax);
				if (!TupIsNull(epqslot))
				{
					*tupleid = update_ctid;
=====================================================================
Found 22 duplicate lines in the following files:
 Between lines 361 and 388 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
 Between lines 266 and 293 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/libpq/be-secure.c
			case SSL_ERROR_SYSCALL:				/* leave it to caller to ereport the value of errno */
				if (n != -1)
				{
					errno = ECONNRESET;
					n = -1;
				}
				break;
			case SSL_ERROR_SSL:
				ereport(COMMERROR,
						(errcode(ERRCODE_PROTOCOL_VIOLATION),
						 errmsg("SSL error: %s", SSLerrmessage())));
				/* fall through */
			case SSL_ERROR_ZERO_RETURN:
				errno = ECONNRESET;
				n = -1;
				break;
			default:
				ereport(COMMERROR,
						(errcode(ERRCODE_PROTOCOL_VIOLATION),
						 errmsg("unrecognized SSL error code: %d",
								err)));
				n = -1;
				break;
		}
	}
	else
#endif
=====================================================================
Found 23 duplicate lines in the following files:
 Between lines 373 and 395 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootparse.c
 Between lines 372 and 394 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/bootstrap/bootparse.c
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
=====================================================================
Found 24 duplicate lines in the following files:
 Between lines 1867 and 1895 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
 Between lines 975 and 1010 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/typecmds.c
			case CONSTR_CHECK:
				/*
				 * Check constraints are handled after domain creation, as
				 * they require the Oid of the domain
				 */
				break;

				/*
				 * All else are error cases
				 */
			case CONSTR_UNIQUE:
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
					 errmsg("unique constraints not possible for domains")));
				break;

			case CONSTR_PRIMARY:
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
				errmsg("primary key constraints not possible for domains")));
				break;

			case CONSTR_ATTR_DEFERRABLE:
			case CONSTR_ATTR_NOT_DEFERRABLE:
			case CONSTR_ATTR_DEFERRED:
			case CONSTR_ATTR_IMMEDIATE:
				ereport(ERROR,
						(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("specifying constraint deferrability not supported for domains")));
				break;

			default:
				elog(ERROR, "unrecognized constraint subtype: %d",
					 (int) constr->contype);
				break;
=====================================================================
Found 25 duplicate lines in the following files:
 Between lines 955 and 1001 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
 Between lines 1103 and 1149 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
		Form_pg_attribute thisatt = att[attnum];
		if (hasnulls && att_isnull(attnum, bp))
		{
			values[attnum] = (Datum) 0;
			isnull[attnum] = true;
			slow = true;		/* can't use attcacheoff anymore */
			continue;
		}

		isnull[attnum] = false;

		if (!slow && thisatt->attcacheoff >= 0)
			off = thisatt->attcacheoff;
		else if (thisatt->attlen == -1)
		{
			/*
			 * We can only cache the offset for a varlena attribute if the
			 * offset is already suitably aligned, so that there would be no
			 * pad bytes in any case: then the offset will be valid for either
			 * an aligned or unaligned value.
			 */
			if (!slow &&
				off == att_align_nominal(off, thisatt->attalign))
				thisatt->attcacheoff = off;
			else
			{
				off = att_align_pointer(off, thisatt->attalign, -1,
										tp + off);
				slow = true;
			}
		}
		else
		{
			/* not varlena, so safe to use att_align_nominal */
			off = att_align_nominal(off, thisatt->attalign);

			if (!slow)
				thisatt->attcacheoff = off;
		}

		values[attnum] = fetchatt(thisatt, tp + off);

		off = att_addlength_pointer(off, thisatt->attlen, tp + off);

		if (thisatt->attlen <= 0)
			slow = true;		/* can't use attcacheoff anymore */
=====================================================================
Found 25 duplicate lines in the following files:
 Between lines 435 and 502 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/heaptuple.c
 Between lines 317 and 384 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/indextuple.c
			int			j;
			for (j = 0; j <= attnum; j++)
			{
				if (att[j]->attlen <= 0)
				{
					slow = true;
					break;
				}
			}
		}
	}

	if (!slow)
	{
		int			natts = tupleDesc->natts;
		int			j = 1;

		/*
		 * If we get here, we have a tuple with no nulls or var-widths up to
		 * and including the target attribute, so we can use the cached offset
		 * ... only we don't have it yet, or we'd not have got here.  Since
		 * it's cheap to compute offsets for fixed-width columns, we take the
		 * opportunity to initialize the cached offsets for *all* the leading
		 * fixed-width columns, in hope of avoiding future visits to this
		 * routine.
		 */
		att[0]->attcacheoff = 0;

		/* we might have set some offsets in the slow path previously */
		while (j < natts && att[j]->attcacheoff > 0)
			j++;

		off = att[j - 1]->attcacheoff + att[j - 1]->attlen;

		for (; j < natts; j++)
		{
			if (att[j]->attlen <= 0)
				break;

			off = att_align_nominal(off, att[j]->attalign);

			att[j]->attcacheoff = off;

			off += att[j]->attlen;
		}

		Assert(j > attnum);

		off = att[attnum]->attcacheoff;
	}
	else
	{
		bool		usecache = true;
		int			i;

		/*
		 * Now we know that we have to walk the tuple CAREFULLY.  But we still
		 * might be able to cache some offsets for next time.
		 *
		 * Note - This loop is a little tricky.  For each non-null attribute,
		 * we have to first account for alignment padding before the attr,
		 * then advance over the attr based on its length.	Nulls have no
		 * storage and no alignment padding either.  We can use/set
		 * attcacheoff until we reach either a null or a var-width attribute.
		 */
		off = 0;
		for (i = 0;; i++)		/* loop exit is at "break" */
=====================================================================
Found 27 duplicate lines in the following files:
 Between lines 148 and 192 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/tupconvert.c
 Between lines 268 and 312 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/access/common/tupconvert.c
		for (i = 0; i < n; i++)		{
			if (attrMap[i] == (i + 1))
				continue;

			/*
			 * If it's a dropped column and the corresponding input column is
			 * also dropped, we needn't convert.  However, attlen and attalign
			 * must agree.
			 */
			if (attrMap[i] == 0 &&
				indesc->attrs[i]->attisdropped &&
				indesc->attrs[i]->attlen == outdesc->attrs[i]->attlen &&
				indesc->attrs[i]->attalign == outdesc->attrs[i]->attalign)
				continue;

			same = false;
			break;
		}
	}
	else
		same = false;

	if (same)
	{
		/* Runtime conversion is not needed */
		pfree(attrMap);
		return NULL;
	}

	/* Prepare the map structure */
	map = (TupleConversionMap *) palloc(sizeof(TupleConversionMap));
	map->indesc = indesc;
	map->outdesc = outdesc;
	map->attrMap = attrMap;
	/* preallocate workspace for Datum arrays */
	map->outvalues = (Datum *) palloc(n * sizeof(Datum));
	map->outisnull = (bool *) palloc(n * sizeof(bool));
	n = indesc->natts + 1;		/* +1 for NULL */
	map->invalues = (Datum *) palloc(n * sizeof(Datum));
	map->inisnull = (bool *) palloc(n * sizeof(bool));
	map->invalues[0] = (Datum) 0;		/* set up the NULL entry */
	map->inisnull[0] = true;

	return map;
=====================================================================
Found 28 duplicate lines in the following files:
 Between lines 2060 and 2097 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1877 and 1914 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1729 and 1766 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
 Between lines 1598 and 1635 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/trigger.c
		TRIGGER_EVENT_BEFORE;	LocTriggerData.tg_relation = relinfo->ri_RelationDesc;
	LocTriggerData.tg_trigtuple = NULL;
	LocTriggerData.tg_newtuple = NULL;
	LocTriggerData.tg_trigtuplebuf = InvalidBuffer;
	LocTriggerData.tg_newtuplebuf = InvalidBuffer;
	for (i = 0; i < ntrigs; i++)
	{
		Trigger    *trigger = &trigdesc->triggers[tgindx[i]];
		HeapTuple	newtuple;

		if (SessionReplicationRole == SESSION_REPLICATION_ROLE_REPLICA)
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_ORIGIN ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		else	/* ORIGIN or LOCAL role */
		{
			if (trigger->tgenabled == TRIGGER_FIRES_ON_REPLICA ||
				trigger->tgenabled == TRIGGER_DISABLED)
				continue;
		}
		LocTriggerData.tg_trigger = trigger;
		newtuple = ExecCallTriggerFunc(&LocTriggerData,
									   tgindx[i],
									   relinfo->ri_TrigFunctions,
									   relinfo->ri_TrigInstrument,
									   GetPerTupleMemoryContext(estate));

		if (newtuple)
			ereport(ERROR,
					(errcode(ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED),
				  errmsg("BEFORE STATEMENT trigger cannot return a value")));
	}
}

void
=====================================================================
Found 35 duplicate lines in the following files:
 Between lines 3142 and 3192 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
 Between lines 3202 and 3252 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/copy.c
		start = ptr;		while ((c = *ptr) != '\0')
		{
			if ((unsigned char) c < (unsigned char) 0x20)
			{
				/*
				 * \r and \n must be escaped, the others are traditional. We
				 * prefer to dump these using the C-like notation, rather than
				 * a backslash and the literal character, because it makes the
				 * dump file a bit more proof against Microsoftish data
				 * mangling.
				 */
				switch (c)
				{
					case '\b':
						c = 'b';
						break;
					case '\f':
						c = 'f';
						break;
					case '\n':
						c = 'n';
						break;
					case '\r':
						c = 'r';
						break;
					case '\t':
						c = 't';
						break;
					case '\v':
						c = 'v';
						break;
					default:
						/* If it's the delimiter, must backslash it */
						if (c == delimc)
							break;
						/* All ASCII control chars are length 1 */
						ptr++;
						continue;		/* fall to end of loop */
				}
				/* if we get here, we need to convert the control char */
				DUMPSOFAR();
				CopySendChar(cstate, '\\');
				CopySendChar(cstate, c);
				start = ++ptr;	/* do not include char in next run */
			}
			else if (c == '\\' || c == delimc)
			{
				DUMPSOFAR();
				CopySendChar(cstate, '\\');
				start = ptr++;	/* we include char in next run */
=====================================================================
Found 36 duplicate lines in the following files:
 Between lines 459 and 505 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
 Between lines 147 and 193 in /Users/dan/Desktop/files/postgresql-8.4.9/src/backend/commands/user.c
		else if (strcmp(defel->defname, "superuser") == 0)		{
			if (dissuper)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dissuper = defel;
		}
		else if (strcmp(defel->defname, "inherit") == 0)
		{
			if (dinherit)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dinherit = defel;
		}
		else if (strcmp(defel->defname, "createrole") == 0)
		{
			if (dcreaterole)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dcreaterole = defel;
		}
		else if (strcmp(defel->defname, "createdb") == 0)
		{
			if (dcreatedb)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dcreatedb = defel;
		}
		else if (strcmp(defel->defname, "canlogin") == 0)
		{
			if (dcanlogin)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dcanlogin = defel;
		}
		else if (strcmp(defel->defname, "connectionlimit") == 0)
		{
			if (dconnlimit)
				ereport(ERROR,
						(errcode(ERRCODE_SYNTAX_ERROR),
						 errmsg("conflicting or redundant options")));
			dconnlimit = defel;
=====================================================================
Found 9886 duplicate lines in 1081 blocks in 129 files
Processed a total of 100477 significant (207035 raw) lines in 192 files
Processing time: 2.117sec
