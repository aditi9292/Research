Similarity Analyser 2.3.34 - http://www.harukizaemon.com/simian
Copyright (c) 2003-2013 Simon Harris.  All rights reserved.
Simian is not free unless used solely for non-commercial or evaluation purposes.
{failOnDuplication=true, ignoreCharacterCase=true, ignoreCurlyBraces=true, ignoreIdentifierCase=true, ignoreModifiers=true, ignoreStringCase=true, reportDuplicateText=true, threshold=6}
Found 6 duplicate lines in the following files:
 Between lines 723 and 730 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
 Between lines 699 and 706 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
	List	   *result;	ListCell   *cell;

	Assert(IsPointerList(list1));
	Assert(IsPointerList(list2));

	result = list_copy(list1);
	foreach(cell, list2)
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 592 and 599 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
 Between lines 569 and 576 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
	ListCell   *cell;	ListCell   *prev;

	Assert(IsPointerList(list));
	check_list_invariants(list);

	prev = NULL;
	foreach(cell, list)
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 343 and 351 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
 Between lines 697 and 705 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
	WRITE_INT_FIELD(numCols);
	appendStringInfo(str, " :dupColIdx");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %d", node->dupColIdx[i]);

	appendStringInfo(str, " :dupOperators");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %u", node->dupOperators[i]);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 555 and 563 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
 Between lines 610 and 618 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
	WRITE_INT_FIELD(numCols);
	appendStringInfo(str, " :grpColIdx");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %d", node->grpColIdx[i]);

	appendStringInfo(str, " :grpOperators");
	for (i = 0; i < node->numCols; i++)
		appendStringInfo(str, " %u", node->grpOperators[i]);
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 884 and 892 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
 Between lines 897 and 905 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
 Between lines 1164 and 1172 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/outfuncs.c
	WRITE_OID_FIELD(opno);	WRITE_OID_FIELD(opfuncid);
	WRITE_OID_FIELD(opresulttype);
	WRITE_BOOL_FIELD(opretset);
	WRITE_NODE_FIELD(args);
	WRITE_LOCATION_FIELD(location);
}

static void
=====================================================================
Found 7 duplicate lines in the following files:
 Between lines 834 and 843 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
 Between lines 860 and 869 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
	ListCell   *cell;	List	   *result = NIL;

	Assert(IsPointerList(list1));
	Assert(IsPointerList(list2));

	if (list2 == NIL)
		return list_copy(list1);

	foreach(cell, list1)
=====================================================================
Found 8 duplicate lines in the following files:
 Between lines 918 and 936 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/readfuncs.c
 Between lines 565 and 583 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/readfuncs.c
 Between lines 536 and 554 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/readfuncs.c
	READ_OID_FIELD(opno);	READ_OID_FIELD(opfuncid);

	/*
	 * The opfuncid is stored in the textual format primarily for debugging
	 * and documentation reasons.  We want to always read it as zero to force
	 * it to be re-looked-up in the pg_operator entry.	This ensures that
	 * stored rules don't have hidden dependencies on operators' functions.
	 * (We don't currently support an ALTER OPERATOR command, but might
	 * someday.)
	 */
	local_node->opfuncid = InvalidOid;

	READ_OID_FIELD(opresulttype);
	READ_BOOL_FIELD(opretset);
	READ_NODE_FIELD(args);
	READ_LOCATION_FIELD(location);

	READ_DONE();
=====================================================================
Found 11 duplicate lines in the following files:
 Between lines 1154 and 1170 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
 Between lines 1207 and 1223 in /Users/dan/Desktop/toomuch/simian/smallpostgresql/list.c
	while (oldlist_cur)	{
		ListCell   *newlist_cur;

		newlist_cur = (ListCell *) palloc(sizeof(*newlist_cur));
		newlist_cur->data = oldlist_cur->data;
		newlist_prev->next = newlist_cur;

		newlist_prev = newlist_cur;
		oldlist_cur = oldlist_cur->next;
	}

	newlist_prev->next = NULL;
	newlist->tail = newlist_prev;

	check_list_invariants(newlist);
	return newlist;
=====================================================================
Found 133 duplicate lines in 18 blocks in 3 files
Processed a total of 3538 significant (6233 raw) lines in 5 files
Processing time: 0.662sec
