<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="7" endline="7">
void foo (double sum) {
    printf ("%3.1f", sum + 1.0);
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="8" endline="8">
void foo2 (double sum, double prod) {
    printf ("%3.1f", sum + prod + 1);
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="9" endline="9">
void foo3 (double sum, double prod, double temp) {
    printf ("%3.1f", sum + prod + temp);
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="13" endline="25">
float Type1a_Krawitz (int n) {
    int p = -1;
    int sum = 0;
    for (p = 0; p < n; p++) {
        sum += p;
    }
    if (n == 0)
        return sum;
    else
        return sum / n;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="28" endline="30">
int mult (int a, int b) {
    return a * b;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="34" endline="47">
float Type1b_Krawitz (int n) {
    int p = -1;
    int sum = 0;
    for (p = 0; p < n; p++)
        sum += p;
    if (n == 0)
        return sum;
    else
        return sum / n;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="53" endline="65">
float Type2a_Krawitz (int n) {
    int q = -1;
    double sum = 0;
    for (q = 0; q < n; q++) {
        sum += q;
    }
    if (n == 0)
        return sum;
    else
        return sum / n;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="68" endline="81">
float Type2b_Krawitz (int t) {
    int p = -1;
    int tot = 0;
    for (p = 0; p < t; p++)
        tot += p;
    if (t == 0)
        return tot;
    else
        return tot / t;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="85" endline="99">
float Type3a_Krawitz (int n) {
    int q = -1;
    double sum = 0;
    q = 0;
    while (q < n) {
        sum += q;
        q++;
    }
    if (n == 0)
        return sum;
    else
        return sum / n;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="102" endline="114">
float Type3b_Krawitz (int t) {
    int p = -1, tot = 0;
    for (p = 0; p < t; p++)
        tot += p;
    if (t == 0)
        return (double) tot;
    else
        return (double) tot / t;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="118" endline="135">
double Type4a_Krawitz (int limit) {
    double *d;
    double tot = 0;
    int n;
    if (limit > 1000 || limit < 1)
        limit = 1;
    d = (double *) malloc (limit * sizeof (double));
    for (n = 0; n < limit; n++)
        d[n] = n * n * n;
    for (n = 0; n < limit; n++)
        tot += d[n];
    free ((void *) d);
    return tot;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="139" endline="149">
double Type4b2_Krawitz (char s, int limit, double tot, int n) {
    if (limit > 1000 || limit < 1)
        limit = 1000;
    if (n < limit)
        tot = Type4b2_Krawitz ('-', limit, tot +n * n * n, ++n);
    return tot;
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="152" endline="159">
double Type4b_Krawitz (int limit) {
    if (limit > 1000 || limit < 1)
        limit = 1000;
    return Type4b2_Krawitz ('-', limit, 0, 0);
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="165" endline="175">
void sumProdO (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="178" endline="188">
void sumProd1A (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="191" endline="201">
void sumProd1B (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="204" endline="214">
void sumProd1C (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="217" endline="227">
void sumProd2A (int n) {
    double s = 0.0;
    double p = 1.0;
    int j;
    for (j = 1; j <= n; j++) {
        s = s + j;
        p = p * j;
        foo2 (s, p);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="230" endline="240">
void sumProd2B (int n) {
    double s = 0.0;
    double p = 1.0;
    int j;
    for (j = 1; j <= n; j++) {
        s = s + j;
        p = p * j;
        foo2 (p, s);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="243" endline="253">
void sumProd2C (int n) {
    int sum = 0;
    int prod = 1;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="256" endline="266">
void sumProd2D (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + (i * i);
        prod = prod * (i * i);
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="269" endline="279">
void sumProd3A (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo3 (sum, prod, n);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="282" endline="292">
void sumProd3B (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo (prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="295" endline="307">
void sumProd3C (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        if ((n % 2) == 0) {
            foo2 (sum, prod);
        }
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="310" endline="320">
void sumProd3D (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="324" endline="337">
void sumProd3E (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        if (i % 2 == 0) {
            sum += i;
        }
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="340" endline="350">
void sumProd4A (int n) {
    double prod = 1.0;
    double sum = 0.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        prod = prod * i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="353" endline="363">
void sumProd4B (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        prod = prod * i;
        sum = sum + i;
        foo2 (sum, prod);
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="366" endline="376">
void sumProd4C (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i;
    for (i = 1; i <= n; i++) {
        sum = sum + i;
        foo2 (sum, prod);
        prod = prod * i;
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="379" endline="388">
void sumProd4D (int n) {
    double sum = 0.0;
    double prod = 1.0;
    int i = 0;
    while (i <= n) {
        sum = sum + i;
        prod = prod * i;
    }
}
</source>
<source file="examples/kraw_c//kraw_try1.c.ifdefed" startline="393" endline="455">
void main () {
    printf ("Hello world!\n");
    printf ("mult %d \n", mult (5, 2));
    printf ("Type1a_Krawitz: %lf \n", Type1a_Krawitz (4));
    printf ("Type1b_Krawitz: %lf \n", Type1b_Krawitz (4));
    printf ("Type2a_Krawitz: %lf \n", Type2a_Krawitz (4));
    printf ("Type2b_Krawitz: %lf \n", Type2b_Krawitz (4));
    printf ("Type3a_Krawitz: %lf \n", Type3a_Krawitz (4));
    printf ("Type3b_Krawitz: %lf \n", Type3b_Krawitz (4));
    printf ("Type4a_Krawitz: %lf \n", Type4a_Krawitz (4));
    printf ("Type4b_Krawitz: %lf \n", Type4b_Krawitz (4));
    printf ("Type4b2_Krawitz: %lf \n", Type4b2_Krawitz ('-', 3, 3.0, 4));
    printf ("\nsumProdO_Cordy: %lf ");
    sumProdO (4);
    printf ("\nsumProd1A_Cordy: %lf ");
    sumProd1A (4);
    printf ("\nsumProd1B_Cordy: %lf ");
    sumProd1B (4);
    printf ("\nsumProd1C_Cordy: %lf ");
    sumProd1C (4);
    printf ("\nsumProd2A_Cordy: %lf ");
    sumProd2A (4);
    printf ("\nsumProd2B_Cordy: %lf ");
    sumProd2B (4);
    printf ("\nsumProd2C_Cordy: %lf ");
    sumProd2C (4);
    printf ("\nsumProd2D_Cordy: %lf ");
    sumProd2D (4);
    printf ("\nsumProd3A_Cordy: %lf ");
    sumProd3A (4);
    printf ("\nsumProd3B_Cordy: %lf ");
    sumProd3B (4);
    printf ("\nsumProd3C_Cordy: %lf ");
    sumProd3C (4);
    printf ("\nsumProd3D_Cordy: %lf ");
    sumProd3D (4);
    printf ("\nsumProd3E_Cordy: %lf ");
    sumProd3E (4);
    printf ("\nsumProd4A_Cordy: %lf ");
    sumProd4A (4);
    printf ("\nsumProd4B_Cordy: %lf ");
    sumProd4B (4);
    printf ("\nsumProd4C_Cordy: %lf ");
    sumProd4C (4);
    printf ("\nsumProd4D_Cordy: %lf ");
    sumProd4D (4);
    printf ("\n\n\n\n\n\n\n\n");
    system ("pause");
}
</source>
