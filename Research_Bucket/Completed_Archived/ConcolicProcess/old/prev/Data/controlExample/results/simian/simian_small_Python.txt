Similarity Analyser 2.3.34 - http://www.harukizaemon.com/simian
Copyright (c) 2003-2013 Simon Harris.  All rights reserved.
Simian is not free unless used solely for non-commercial or evaluation purposes.
{failOnDuplication=true, ignoreCharacterCase=true, ignoreCurlyBraces=true, ignoreIdentifierCase=true, ignoreModifiers=true, ignoreStringCase=true, reportDuplicateText=true, threshold=6}
Found 6 duplicate lines in the following files:
 Between lines 1339 and 1344 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c -> audioop_alaw2lin
 Between lines 1271 and 1276 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c -> audioop_ulaw2lin
        unsigned char *cp;        unsigned char cval;
        signed char *ncp;
        int len, size, val;
        PyObject *rv;
        int i;
=====================================================================
Found 6 duplicate lines in the following files:
 Between lines 99 and 108 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c    -> fcntl_fcntl
 Between lines 35 and 40 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c    -> fcntl_ioctl
	int fd;	int code;
	int arg;
	int ret;
	char *str;
	Py_ssize_t len;
=====================================================================
Found 6 duplicate lines in the following files:                 - Not method level
 Between lines 580 and 586 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 495 and 501 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
        best_result = result;        best_j = 0;
        j = 0;

        for ( j=1; j<=len1-len2; j++) {
                aj_m1 = (double)cp1[j-1];
                aj_lm1 = (double)cp1[j+len2-1];
=====================================================================
Found 6 duplicate lines in the following files:                 - Not method level
 Between lines 1499 and 1505 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 1397 and 1403 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
        if ( state == Py_None ) {                /* First time, it seems. Set defaults */
                valpred = 0;
                step = 7;
                index = 0;
        } else if ( !PyArg_ParseTuple(state, "ii", &valpred, &index) )
                return 0;
=====================================================================
Found 7 duplicate lines in the following files:             - Not method level
 Between lines 789 and 796 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 834 and 841 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 747 and 754 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                return 0;    
        if ( size == 1 ) maxval = (double) 0x7f;
        else if ( size == 2 ) maxval = (double) 0x7fff;
        else if ( size == 4 ) maxval = (double) 0x7fffffff;
        else {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
=====================================================================
Found 7 duplicate lines in the following files:             - Not method level
 Between lines 948 and 956 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 758 and 766 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 845 and 853 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
        if ( rv == 0 )                return 0;
        ncp = (signed char *)PyString_AsString(rv);
    
    
        for ( i=0; i < len; i += size ) {
                if ( size == 1 )      val = (int)*CHARP(cp, i);
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = (int)*LONGP(cp, i);
=====================================================================
Found 7 duplicate lines in the following files:             - Not method level
 Between lines 940 and 949 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 976 and 985 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                return 0;
        if ( size != 1 && size != 2 && size != 4 ) {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
        }
    
        rv = PyString_FromStringAndSize(NULL, len);
        if ( rv == 0 )
                return 0;
=====================================================================
Found 7 duplicate lines in the following files:             - Not method level
 Between lines 1254 and 1261 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 1322 and 1329 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 984 and 991 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
        if ( rv == 0 )                return 0;
        ncp = (unsigned char *)PyString_AsString(rv);
    
        for ( i=0; i < len; i += size ) {
                if ( size == 1 )      val = ((int)*CHARP(cp, i)) << 8;
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = ((int)*LONGP(cp, i)) >> 16;
=====================================================================
Found 8 duplicate lines in the following files:             - Not method level
 Between lines 1545 and 1554 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 1448 and 1457 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                if ( sign )                        valpred -= vpdiff;
                else
                        valpred += vpdiff;

                /* Step 4 - Clamp previous value to 16 bits */
                if ( valpred > 32767 )
                        valpred = 32767;
                else if ( valpred < -32768 )
                        valpred = -32768;
=====================================================================
Found 8 duplicate lines in the following files:             - Not method level
 Between lines 833 and 841 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 788 and 796 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
	                       &cp, &len, &size, &fac1, &fac2 ) )                return 0;
    
        if ( size == 1 ) maxval = (double) 0x7f;
        else if ( size == 2 ) maxval = (double) 0x7fff;
        else if ( size == 4 ) maxval = (double) 0x7fffffff;
        else {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
=====================================================================
Found 8 duplicate lines in the following files:             - Not method level
 Between lines 405 and 413 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 378 and 386 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 330 and 338 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                return 0;        if ( size != 1 && size != 2 && size != 4 ) {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
        }
        for ( i=0; i<len; i+= size) {
                if ( size == 1 )      val = (int)*CHARP(cp, i);
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = (int)*LONGP(cp, i);
=====================================================================
Found 8 duplicate lines in the following files:             - Not method level clone
 Between lines 174 and 184 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c
 Between lines 53 and 63 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c
		Py_END_ALLOW_THREADS		if (ret < 0) {
			PyErr_SetFromErrno(PyExc_IOError);
			return NULL;
		}
		return PyString_FromStringAndSize(buf, len);
	}

	PyErr_Clear();
	arg = 0;
	if (!PyArg_ParseTuple(args,
=====================================================================
Found 10 duplicate lines in the following files:                - Not method level
 Between lines 753 and 766 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 943 and 956 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");                return 0;
        }
    
        rv = PyString_FromStringAndSize(NULL, len);
        if ( rv == 0 )
                return 0;
        ncp = (signed char *)PyString_AsString(rv);
    
    
        for ( i=0; i < len; i += size ) {
                if ( size == 1 )      val = (int)*CHARP(cp, i);
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = (int)*LONGP(cp, i);
=====================================================================
Found 11 duplicate lines in the following files:                - Not method level
 Between lines 1279 and 1293 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 1347 and 1361 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                               &cp, &len, &size) )                return 0;

        if ( size != 1 && size != 2 && size != 4) {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
        }
    
        rv = PyString_FromStringAndSize(NULL, len*size);
        if ( rv == 0 )
                return 0;
        ncp = (signed char *)PyString_AsString(rv);
    
        for ( i=0; i < len*size; i += size ) {
                cval = *cp++;
=====================================================================
Found 13 duplicate lines in the following files:            - Not method level
 Between lines 1245 and 1261 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 1313 and 1329 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                               &cp, &len, &size) )                return 0;

        if ( size != 1 && size != 2 && size != 4) {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
        }
    
        rv = PyString_FromStringAndSize(NULL, len/size);
        if ( rv == 0 )
                return 0;
        ncp = (unsigned char *)PyString_AsString(rv);
    
        for ( i=0; i < len; i += size ) {
                if ( size == 1 )      val = ((int)*CHARP(cp, i)) << 8;
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = ((int)*LONGP(cp, i)) >> 16;
=====================================================================
Found 16 duplicate lines in the following files:                - Not method level
 Between lines 313 and 329 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c
 Between lines 254 and 271 in /Users/dan/Desktop/toomuch/simian/smallPython/fcntlmodule.c
#else
#ifndef LOCK_SH
#define LOCK_SH		1	/* shared lock */
#define LOCK_EX		2	/* exclusive lock */
#define LOCK_NB		4	/* don't block when locking */
#define LOCK_UN		8	/* unlock */
#endif
	{
		struct flock l;
		if (code == LOCK_UN)
			l.l_type = F_UNLCK;
		else if (code & LOCK_SH)
			l.l_type = F_RDLCK;
		else if (code & LOCK_EX)
			l.l_type = F_WRLCK;
		else {
			PyErr_SetString(PyExc_ValueError,
=====================================================================
Found 21 duplicate lines in the following files:                    - Not method level
 Between lines 611 and 639 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
 Between lines 668 and 696 in /Users/dan/Desktop/toomuch/simian/smallPython/audioop.c
                return 0;        if ( size != 1 && size != 2 && size != 4 ) {
                PyErr_SetString(AudioopError, "Size should be 1, 2 or 4");
                return 0;
        }
        /* Compute first delta value ahead. Also automatically makes us
        ** skip the first extreme value
        */
        if ( size == 1 )      prevval = (int)*CHARP(cp, 0);
        else if ( size == 2 ) prevval = (int)*SHORTP(cp, 0);
        else if ( size == 4 ) prevval = (int)*LONGP(cp, 0);
        if ( size == 1 )      val = (int)*CHARP(cp, size);
        else if ( size == 2 ) val = (int)*SHORTP(cp, size);
        else if ( size == 4 ) val = (int)*LONGP(cp, size);
        prevdiff = val - prevval;

        for ( i=size; i<len; i+= size) {
                if ( size == 1 )      val = (int)*CHARP(cp, i);
                else if ( size == 2 ) val = (int)*SHORTP(cp, i);
                else if ( size == 4 ) val = (int)*LONGP(cp, i);
                diff = val - prevval;
                if ( diff*prevdiff < 0 ) {
                        /* Derivative changed sign. Compute difference to
                        ** last extreme value and remember.
                        */
                        if ( prevextremevalid ) {
                                extremediff = prevval - prevextreme;
                                if ( extremediff < 0 )
                                        extremediff = -extremediff;
=====================================================================
Found 297 duplicate lines in 32 blocks in 2 files
Processed a total of 2142 significant (3330 raw) lines in 6 files
Processing time: 0.943sec
