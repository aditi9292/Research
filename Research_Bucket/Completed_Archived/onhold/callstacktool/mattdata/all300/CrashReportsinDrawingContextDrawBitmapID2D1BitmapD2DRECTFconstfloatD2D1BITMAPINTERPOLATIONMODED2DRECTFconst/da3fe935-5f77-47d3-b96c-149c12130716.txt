https://crash-stats.mozilla.com/report/index/da3fe935-5f77-47d3-b96c-149c12130716
DrawingContext::DrawBitmap(ID2D1Bitmap *,D2D_RECT_F const *,float,D2D1_BITMAP_INTERPOLATION_MODE,D2D_RECT_F const *)
D2DDeviceContextBase<ID2D1HwndRenderTarget,ID2D1HwndRenderTarget,ID2D1DeviceContext>::DrawBitmap(ID2D1Bitmap *,D2D_RECT_F const *,float,D2D1_BITMAP_INTERPOLATION_MODE,D2D_RECT_F const *)
mozilla::gfx::DrawTargetD2D::DrawSurface(mozilla::gfx::SourceSurface *,mozilla::gfx::Rect const &,mozilla::gfx::Rect const &,mozilla::gfx::DrawSurfaceOptions const &,mozilla::gfx::DrawOptions const &)
mozilla::dom::CanvasRenderingContext2D::DrawImage(mozilla::dom::HTMLImageElementOrHTMLCanvasElementOrHTMLVideoElement const &,double,double,double,double,double,double,double,double,unsigned char,mozilla::ErrorResult &)
mozilla::dom::CanvasRenderingContext2D::DrawImage(mozilla::dom::HTMLImageElementOrHTMLCanvasElementOrHTMLVideoElement const &,double,double,double,double,double,double,double,double,unsigned char,mozilla::ErrorResult &)
npcoba32.dll@0x30100
mozilla::dom::CanvasRenderingContext2D::DrawImage(mozilla::dom::HTMLImageElementOrHTMLCanvasElementOrHTMLVideoElement const &,double,double,double,double,double,double,double,double,mozilla::ErrorResult &)
mozilla::dom::CanvasRenderingContext2DBinding::drawImage
mozilla::dom::CanvasRenderingContext2DBinding::genericMethod
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_apply(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_call(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::ion::CanEnter(JSContext *,JSScript *,js::AbstractFramePtr,bool,bool)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
mozilla::dom::EventHandlerNonNull::Call(JSContext *,JSObject *,nsIDOMEvent *,mozilla::ErrorResult &)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
InternalFindAtom
nsWindow::IPCWindowProcHandler(unsigned int &,unsigned int &,long &)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
nsTArray_Impl<nsTimerImpl *,nsTArrayInfallibleAllocator>::IndexOf<nsTimerImpl *,nsDefaultComparator<nsTimerImpl *,nsTimerImpl *> >(nsTimerImpl * const &,unsigned int,nsDefaultComparator<nsTimerImpl *,nsTimerImpl *> const &)
nsXPConnect::GetXPConnect()
nsXPConnect::GetXPConnect()
nsXPConnect::Push(JSContext *)
nsCOMPtr_base::assign_with_AddRef(nsISupports *)
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsEventDispatcher::DispatchDOMEvent(nsISupports *,nsEvent *,nsIDOMEvent *,nsPresContext *,nsEventStatus *)
nspr4.dll@0x8d20
nsINode::DispatchEvent(nsIDOMEvent *,bool *)
nsContentUtils::DispatchEvent(nsIDocument *,nsISupports *,nsAString_internal const &,bool,bool,bool,bool *)
nsAsyncDOMEvent::Run()
nsThread::ProcessNextEvent(bool,bool *)
NS_ProcessNextEvent_P(nsIThread *,bool)
mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *)

