https://crash-stats.mozilla.com/report/index/0104d20a-ab48-4f06-8f43-407772130720
@0x2c590b8
RtlpAllocateHeap
CContext::PerformAmortizedRenderOperations()
TOptImmediateContext::AcquireDevCtxIfaceNoSync()
CContext::ID3D11DeviceContext1_RSSetState_Amortized<0>(ID3D11DeviceContext1 *,ID3D11RasterizerState *)
CD3DRenderState::ResetState()
CD3DDeviceLevel1::BeginDeviceStateChange()
CHwSurfaceRenderTarget::ProcessBatch(FlushReason::Enum,ListElem<CBatchBase,null_type> *,unsigned __int64 *,unsigned __int64 *,long *,bool *)
CBatchSerializer::FlushInternal(FlushReason::Enum)
DrawingContext::FlushInternal(FlushReason::Enum)
DrawingContext::FlushBatch(FlushReason::Enum)
DrawingContext::Flush(FlushReason::Enum,unsigned __int64 *,unsigned __int64 *)
DrawingContext::EndDraw(unsigned __int64 *,unsigned __int64 *)
D2DDeviceContextBase<ID2D1DCRenderTarget,ID2D1DCRenderTarget,ID2D1DeviceContext>::EndDraw(unsigned __int64 *,unsigned __int64 *)
_d2d_clear_surface
cairo_d2d_surface_create
gfxD2DSurface::gfxD2DSurface(nsIntSize const &,gfxASurface::gfxImageFormat)
gfxWindowsPlatform::CreateOffscreenSurface(nsIntSize const &,gfxASurface::gfxContentType)
gfxPlatform::Init()
gfxPlatform::GetPlatform()
ShouldUseImageSurfaces
imgFrame::Init(int,int,int,int,gfxASurface::gfxImageFormat,unsigned char)
mozilla::image::RasterImage::EnsureFrame(unsigned int,int,int,int,int,gfxASurface::gfxImageFormat,unsigned char,unsigned char * *,unsigned int *,unsigned int * *,unsigned int *)
mozilla::image::RasterImage::EnsureFrame(unsigned int,int,int,int,int,gfxASurface::gfxImageFormat,unsigned char * *,unsigned int *)
mozilla::image::nsGIFDecoder2::BeginImageFrame(unsigned short)
mozilla::image::nsGIFDecoder2::WriteInternal(char const *,unsigned int)
mozilla::image::Decoder::Write(char const *,unsigned int)
mozilla::image::RasterImage::WriteToDecoder(char const *,unsigned int)
mozilla::image::RasterImage::AddSourceData(char const *,unsigned int)
mozilla::image::RasterImage::WriteToRasterImage(nsIInputStream *,void *,char const *,unsigned int,unsigned int,unsigned int *)
nsPipeInputStream::ReadSegments(tag_nsresult (*)(nsIInputStream *,void *,char const *,unsigned int,unsigned int,unsigned int *),void *,unsigned int,unsigned int *)
mozilla::image::RasterImage::OnImageDataAvailable(nsIRequest *,nsISupports *,nsIInputStream *,unsigned __int64,unsigned int)
imgRequest::OnDataAvailable(nsIRequest *,nsISupports *,nsIInputStream *,unsigned __int64,unsigned int)
ProxyListener::OnDataAvailable(nsIRequest *,nsISupports *,nsIInputStream *,unsigned __int64,unsigned int)
nsJARChannel::OnDataAvailable(nsIRequest *,nsISupports *,nsIInputStream *,unsigned __int64,unsigned int)
nsInputStreamPump::OnStateTransfer()
nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream *)
nsInputStreamReadyEvent::Run()
nsThread::ProcessNextEvent(bool,bool *)
NS_ProcessNextEvent_P(nsIThread *,bool)
nsThread::Shutdown()
nsRunnableMethodImpl<tag_nsresult ( nsIUrlClassifierDBServiceWorker::*)(void),1>::Run()
nsThread::ProcessNextEvent(bool,bool *)
NS_ProcessNextEvent_P(nsIThread *,bool)
mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *)
MessageLoop::RunHandler()
MessageLoop::Run()
nsBaseAppShell::Run()
nsAppShell::Run()
XREMain::XRE_mainRun()
XREMain::XRE_main(int,char * * const,nsXREAppData const *)
XRE_main
do_main
wmain
__tmainCRTStartup
BaseThreadInitThunk
__RtlUserThreadStart
_RtlUserThreadStart

