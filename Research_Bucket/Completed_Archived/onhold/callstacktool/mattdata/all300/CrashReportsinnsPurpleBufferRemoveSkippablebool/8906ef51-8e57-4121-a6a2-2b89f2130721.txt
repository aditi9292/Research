https://crash-stats.mozilla.com/report/index/8906ef51-8e57-4121-a6a2-2b89f2130721
@0x905a4d
nsPurpleBuffer::RemoveSkippable(bool)
@0x400000
nsCycleCollector::ForgetSkippable(bool)
nspr4.dll@0x9030
FireForgetSkippable
CCTimerFired
nsTimerImpl::Fire()
nspr4.dll@0x8d20
nsTimerEvent::Run()
nsThread::ProcessNextEvent(bool,bool *)
nsComponentManagerImpl::GetServiceByContractID(char const *,nsID const &,void * *)
NS_ProcessNextEvent_P(nsIThread *,bool)
nsContentTreeOwner::ShowAsModal()
xpc_qsXPCOMObjectToJsval(XPCLazyCallContext &,qsObjectHelper &,nsID const *,XPCNativeInterface * *,JS::Value *)
nsXPConnect::GetXPConnect()
_create_dc_and_bitmap
js::GetPropertyOperation(JSContext *,JSScript *,unsigned char *,JS::MutableHandle<JS::Value>,JS::MutableHandle<JS::Value>)
ConvertArgsToArray
nsWindowWatcher::OpenWindow2(nsIDOMWindow *,char const *,char const *,char const *,bool,bool,bool,nsISupports *,nsIDOMWindow * *)
nsGlobalWindow::OpenInternal(nsAString_internal const &,nsAString_internal const &,nsAString_internal const &,bool,bool,bool,bool,bool,nsIArray *,nsISupports *,nsIPrincipal *,JSContext *,nsIDOMWindow * *)
nsGlobalWindow::OpenInternal(nsAString_internal const &,nsAString_internal const &,nsAString_internal const &,bool,bool,bool,bool,bool,nsIArray *,nsISupports *,nsIPrincipal *,JSContext *,nsIDOMWindow * *)
nsJSArgArray::nsJSArgArray(JSContext *,unsigned int,JS::Value *,tag_nsresult *)
NS_InvokeByIndex_P
XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
mozilla::dom::EventHandlerNonNull::Call(JSContext *,JSObject *,nsIDOMEvent *,mozilla::ErrorResult &)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
nsXBLPrototypeHandler::ExecuteHandler(nsIDOMEventTarget *,nsIDOMEvent *)
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsEventDispatcher::DispatchDOMEvent(nsISupports *,nsEvent *,nsIDOMEvent *,nsPresContext *,nsEventStatus *)
PresShell::HandleDOMEventWithTarget(nsIContent *,nsIDOMEvent *,nsEventStatus *)
nsContentUtils::DispatchXULCommand(nsIContent *,bool,nsIDOMEvent *,nsIPresShell *,bool,bool,bool,bool)
nsXULMenuCommandEvent::Run()
nspr4.dll@0x8d20

