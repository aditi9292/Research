https://crash-stats.mozilla.com/report/index/54dbf018-7035-4d53-83fb-26f372130718
nsWebShellWindow::RequestWindowClose(nsIWidget *)
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
DispatchClientMessage
__fnDWORD
KiUserCallbackDispatcher
xul.dll@0x101c50
RealDefWindowProcW
DoMsgDefault(_THEME_MSG const *)
OnDwpSysCommand(CThemeWnd *,_THEME_MSG *)
_ThemeDefWindowProc(HWND__ *,unsigned int,unsigned int,long,int)
ThemeDefWindowProcW
GetPropW
InternalCallWinProc
UserCallWinProcCheckWow
CallWindowProcAorW
CallWindowProcW
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
CallWindowProcAorW
CallWindowProcW
mozilla::ipc::windows::DeferredSendMessage::Run()
`anonymous namespace'::DeferredMessageHook(int,unsigned int,long)
DispatchHookW
fnHkINLPCWPSTRUCTW
__fnDWORD
KiUserCallbackDispatcher
nsAutoPtr<nsTArray<nsAutoPtr<mozilla::ipc::windows::DeferredMessage> > >::~nsAutoPtr<nsTArray<nsAutoPtr<mozilla::ipc::windows::DeferredMessage> > >()
GetRawInputDeviceInfoW
nsPluginInstanceOwner::Destroy()
nsObjectLoadingContent::DoStopPlugin(nsPluginInstanceOwner *,bool,bool)
nsObjectLoadingContent::StopPluginInstance()
nsObjectLoadingContent::DestroyContent()
nsHTMLSharedObjectElement::DestroyContent()
mozilla::dom::FragmentOrElement::DestroyContent()
mozilla::dom::FragmentOrElement::DestroyContent()
mozilla::dom::FragmentOrElement::DestroyContent()
mozilla::dom::FragmentOrElement::DestroyContent()
nsDocument::Destroy()
nsDocumentViewer::Destroy()
nsDocShell::Destroy()
nsFrameLoader::Finalize()
nsDocument::MaybeInitializeFinalizeFrameLoaders()
nsRunnableMethodImpl<void ( nsDocument::*)(void),1>::Run()
nsContentUtils::RemoveScriptBlocker()
nsXBLBinding::ChangeDocument(nsIDocument *,nsIDocument *)
nsBindingManager::RemovedFromDocumentInternal(nsIContent *,nsIDocument *,nsIContent *)
nsXULElement::DestroyContent()
nsXULElement::DestroyContent()
nsXULElement::DestroyContent()
nsXULElement::DestroyContent()
nsXULElement::DestroyContent()
nsXULElement::DestroyContent()
nsDocument::Destroy()
nsDocumentViewer::Destroy()
nsDocShell::Destroy()
nsXULWindow::Destroy()
nsWebShellWindow::Destroy()
nsWebShellWindow::RequestWindowClose(nsIWidget *)
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
DispatchClientMessage
__fnDWORD
KiUserCallbackDispatcher
xul.dll@0x101c50
PeekMessageA
CModalLoop::MyPeekMessage(tagMSG *,HWND__ *,unsigned int,unsigned int,unsigned short)
CModalLoop::WaitRemoveMessage(unsigned int,unsigned int,unsigned long)
CModalLoop::BlockFn(CCicEvent *,unsigned long,unsigned long &)
CProxy::SendReceive(tag_MARSHALMSG *,unsigned long)
CMarshalParamCreator::SendReceive(CProxy *,unsigned long)
CProxy::proxy_Param(unsigned long,unsigned long,CPROXY_PARAM *)
CProxyITfLangBarItemSink::OnUpdate(unsigned long)
CLangBarItemMgr::OnUpdateHandler()
CicMarshalWndProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
DispatchMessageWorker
DispatchMessageW
nsBaseAppShell::OnProcessNextEvent(nsIThreadInternal *,bool,unsigned int)
_MD_CURRENT_THREAD
_MD_CURRENT_THREAD
nsThread::ProcessNextEvent(bool,bool *)
std::_Destroy_range<std::allocator<mozilla::layers::Edit> >(mozilla::layers::Edit *,mozilla::layers::Edit *,std::allocator<mozilla::layers::Edit> &)
NS_ProcessNextEvent_P(nsIThread *,bool)
mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *)
_SEH_epilog4
MessageLoop::Run()
nsBaseAppShell::Run()
nsAppShell::Run()
XREMain::XRE_mainRun()
XREMain::XRE_main(int,char * * const,nsXREAppData const *)
XRE_main
do_main
wmain
__tmainCRTStartup
BaseProcessStart

