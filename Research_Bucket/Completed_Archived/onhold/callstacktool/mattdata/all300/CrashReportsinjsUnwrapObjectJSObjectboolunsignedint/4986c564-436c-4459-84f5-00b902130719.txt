https://crash-stats.mozilla.com/report/index/4986c564-436c-4459-84f5-00b902130719
js::UnwrapObject(JSObject *,bool,unsigned int *)
mozilla::dom::CallbackObject::CallSetup::CallSetup(JSObject * const)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
mozilla::ipc::RPCChannel::DispatchIncall(IPC::Message const &)
xul.dll@0x101c50
CallWindowProcCrashProtected
nsXPConnect::GetXPConnect()
nsXPConnect::Push(JSContext *)
nsCOMPtr_base::assign_with_AddRef(nsISupports *)
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
nspr4.dll@0x8d20
nsContentUtils::DispatchEvent(nsIDocument *,nsISupports *,nsAString_internal const &,bool,bool,bool,bool *)
nsAsyncDOMEvent::Run()
nsThread::ProcessNextEvent(bool,bool *)
NS_ProcessNextEvent_P(nsIThread *,bool)
nsSyncStreamListener::WaitForData()
nsSyncStreamListener::Available(unsigned __int64 *)
NS_ImplementChannelOpen(nsIChannel *,nsIInputStream * *)
NS_InvokeByIndex_P
XPC_WN_Shared_Enumerate
js::baseops::DefineGeneric(JSContext *,JS::Handle<JSObject *>,JS::Handle<int>,JS::Handle<JS::Value>,int (*)(JSContext *,JS::Handle<JSObject *>,JS::Handle<int>,JS::MutableHandle<JS::Value>),int (*)(JSContext *,JS::Handle<JSObject *>,JS::Handle<int>,int,JS::MutableHandle<JS::Value>),unsigned int)
DefinePropertyById
DefinePropertyIfFound
nsXPConnect::GetXPConnect()
js::ObjectImpl::nativeLookup(JSContext *,int)
js::ObjectImpl::nativeLookup(JSContext *,int)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
nsXPCWrappedJSClass::CallMethod(nsXPCWrappedJS *,unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *)
nsXPCWrappedJS::CallMethod(unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *)
PrepareAndDispatch
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsDocumentViewer::LoadComplete(tag_nsresult)
nsDocShell::EndPageLoad(nsIWebProgress *,nsIChannel *,tag_nsresult)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
PresShell::FlushPendingNotifications(mozilla::ChangesToFlush)
nsDocLoader::doStopDocumentLoad(nsIRequest *,tag_nsresult)
nsDocLoader::DocLoaderIsEmpty(bool)
@0xc4668830
nsDocLoader::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult)
nsLoadGroup::RemoveRequest(nsIRequest *,nsISupports *,tag_nsresult)
nsDocument::DoUnblockOnload()
nsDocument::UnblockOnload(bool)
nsDocument::DispatchContentLoadedEvents()
nspr4.dll@0x8d20
nsRunnableMethodImpl<void ( nsDocument::*)(void),1>::Run()
nsThread::ProcessNextEvent(bool,bool *)
NS_ProcessNextEvent_P(nsIThread *,bool)
nsSyncStreamListener::WaitForData()
nsSyncStreamListener::Available(unsigned __int64 *)
NS_ImplementChannelOpen(nsIChannel *,nsIInputStream * *)

