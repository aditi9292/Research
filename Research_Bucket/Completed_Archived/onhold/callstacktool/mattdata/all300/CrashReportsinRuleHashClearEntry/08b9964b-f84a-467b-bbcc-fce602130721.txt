https://crash-stats.mozilla.com/report/index/08b9964b-f84a-467b-bbcc-fce602130721
RuleHash_ClearEntry
PL_DHashTableFinish
xul.dll@0x1211a80
RuleHash::~RuleHash()
RuleCascadeData::~RuleCascadeData()
nsCSSRuleProcessor::~nsCSSRuleProcessor()
nsCSSRuleProcessor::`scalar deleting destructor'(unsigned int)
nsCSSRuleProcessor::Release()
nsCOMPtr_base::assign_with_AddRef(nsISupports *)
nsStyleSet::GatherRuleProcessors(nsStyleSet::sheetType)
nsStyleSet::EndUpdate()
PresShell::EndUpdate(nsIDocument *,unsigned int)
nsDocument::EndUpdate(unsigned int)
nsHTMLDocument::EndUpdate(unsigned int)
nsStyleLinkElement::DoUpdateStyleSheet(nsIDocument *,nsICSSLoaderObserver *,bool *,bool *,bool)
SearchTable
js::NewObjectWithGivenProto(JSContext *,js::Class *,js::TaggedProto,JSObject *,js::gc::AllocKind,js::NewObjectKind)
js::NewObjectWithClassProtoCommon(JSContext *,js::Class *,JSObject *,JSObject *,js::gc::AllocKind,js::NewObjectKind)
je_free
nsFrameManagerBase::UndisplayedMap::RemoveNodeFor(nsIContent *,UndisplayedNode *)
nsFrameManager::ClearUndisplayedContentIn(nsIContent *,nsIContent *)
je_free
PL_DHashTableRawRemove
nsDocument::RemoveFromIdTable(mozilla::dom::Element *,nsIAtom *)
mozilla::dom::Element::UnbindFromTree(bool,bool)
nsGenericHTMLElement::UnbindFromTree(bool,bool)
mozilla::dom::FragmentOrElement::RemoveChildAt(unsigned int,bool)
mozilla::dom::FragmentOrElement::IndexOf(nsINode const *)
mozilla::dom::NodeBinding::removeChild
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
js::GetPropertyOperation(JSContext *,JSScript *,unsigned char *,JS::MutableHandle<JS::Value>,JS::MutableHandle<JS::Value>)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_call(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js::CallOrConstructBoundFunction(JSContext *,unsigned int,JS::Value *)
js::mjit::CallCompiler::generateNativeStub()
js::mjit::ic::NativeCall(js::VMFrame &,js::mjit::ic::CallICInfo *)
js::mjit::EnterMethodJIT(JSContext *,js::StackFrame *,void *,JS::Value *,bool)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_apply(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
UncachedInlineCall
js::mjit::stubs::UncachedCallHelper(js::VMFrame &,unsigned int,bool,js::mjit::stubs::UncachedCallResult &)
js::mjit::CallCompiler::update()
js::mjit::ic::Call(js::VMFrame &,js::mjit::ic::CallICInfo *)
js::mjit::EnterMethodJIT(JSContext *,js::StackFrame *,void *,JS::Value *,bool)
CheckStackAndEnterMethodJIT
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
UncachedInlineCall
js::mjit::stubs::UncachedCallHelper(js::VMFrame &,unsigned int,bool,js::mjit::stubs::UncachedCallResult &)
js::mjit::CallCompiler::update()
js::mjit::ic::Call(js::VMFrame &,js::mjit::ic::CallICInfo *)
js::mjit::JaegerShot(JSContext *,bool)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::ion::CanEnter(JSContext *,JSScript *,js::AbstractFramePtr,bool,bool)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js::CallOrConstructBoundFunction(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js::CallOrConstructBoundFunction(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_apply(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
mozilla::dom::EventHandlerNonNull::Call(JSContext *,JSObject *,nsIDOMEvent *,mozilla::ErrorResult &)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
nsRefPtr<nsIRunnable>::~nsRefPtr<nsIRunnable>()
nsJSEventListener::HandleEvent(nsIDOMEvent *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsDOMEvent::nsDOMEvent(nsPresContext *,nsEvent *)
std::vector<mozilla::gfx::DrawTargetD2D::PushedClip,std::allocator<mozilla::gfx::DrawTargetD2D::PushedClip> >::push_back(mozilla::gfx::DrawTargetD2D::PushedClip const &)
nsXMLHttpRequest::ChangeState(unsigned int,bool)
mozalloc.dll@0x10a0
mozilla::net::nsHttpChannel::SetNotificationCallbacks(nsIInterfaceRequestor *)
nsXMLHttpRequest::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult)
nsCORSListenerProxy::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult)
nsForceXMLListener::OnStopRequest(nsIRequest *,nsISupports *,tag_nsresult)
MessageLoop::Run()
nsBaseAppShell::Run()
nsAppShell::Run()
XREMain::XRE_mainRun()
XREMain::XRE_main(int,char * * const,nsXREAppData const *)
XRE_main
do_main
wmain
__tmainCRTStartup
BaseProcessStart

