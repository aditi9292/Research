https://crash-stats.mozilla.com/report/index/4ef6d7da-7761-4c12-802a-a454c2130716
RtlEnterCriticalSection
coFFPl21.dll@0x52b2e
coFFPl21.dll@0x535d1
coFFPl21.dll@0x3fe27
coFFPl21.dll@0x3bcc8
coFFPl21.dll@0x2add5
coFFPl21.dll@0xef98
coFFPl21.dll@0x11adb
coFFPl21.dll@0x2c042
coFFPl21.dll@0x2e0d5
nsObserverService::NotifyObservers(nsISupports *,char const *,wchar_t const *)
nsWindowWatcher::RemoveWindow(nsWatcherWindowEntry *)
nsWindowWatcher::RemoveWindow(nsIDOMWindow *)
nsAppShellService::UnregisterTopLevelWindow(nsIXULWindow *)
nsXULWindow::Destroy()
nsWebShellWindow::Destroy()
nsWebShellWindow::RequestWindowClose(nsIWidget *)
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
DispatchClientMessage
__fnDWORD
KiUserCallbackDispatcher
xul.dll@0x101c50
RealDefWindowProcW
DoMsgDefault(_THEME_MSG const *)
OnDwpSysCommand(CThemeWnd *,_THEME_MSG *)
_ThemeDefWindowProc(HWND__ *,unsigned int,unsigned int,long,int)
ThemeDefWindowProcW
GetPropW
InternalCallWinProc
UserCallWinProcCheckWow
CallWindowProcAorW
CallWindowProcW
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
__fnINOUTLPSCROLLINFO
DispatchMessageWorker
DispatchMessageW
ccl120u.dll@0x5df4b
ccl120u.dll@0x5e245
coshdobj.dll@0x18812
coshdobj.dll@0x1887c
coidsafe.dll@0x5e7f2
coidsafe.dll@0x5e7b1
coidsafe.dll@0x59ae9
coidsafe.dll@0x48401
coFFPl21.dll@0xbcee8
coFFPl21.dll@0xc17ba
coFFPl21.dll@0xc2135
coFFPl21.dll@0x3bea1
coFFPl21.dll@0x2add5
coFFPl21.dll@0x10baf
coFFPl21.dll@0x1118b
coFFPl21.dll@0x12977
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsEventDispatcher::DispatchDOMEvent(nsISupports *,nsEvent *,nsIDOMEvent *,nsPresContext *,nsEventStatus *)
nsINode::DispatchEvent(nsIDOMEvent *,bool *)
mozilla::dom::EventTargetBinding::dispatchEvent
mozilla::dom::EventTargetBinding::genericMethod
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
mozilla::dom::EventHandlerNonNull::Call(JSContext *,JSObject *,nsIDOMEvent *,mozilla::ErrorResult &)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
xpc::WrapperFactory::WrapForSameCompartment(JSContext *,JSObject *)
JSCompartment::wrap(JSContext *,JS::MutableHandle<JS::Value>,JS::Handle<JSObject *>)
nsRefPtr<nsIRunnable>::~nsRefPtr<nsIRunnable>()
NS_NewJSEventListener(nsIScriptContext *,JSObject *,nsISupports *,nsIAtom *,nsEventHandler const &,nsIJSEventListener * *)

