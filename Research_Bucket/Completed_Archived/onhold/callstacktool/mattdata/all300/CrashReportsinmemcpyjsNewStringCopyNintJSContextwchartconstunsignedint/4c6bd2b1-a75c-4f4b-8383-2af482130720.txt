https://crash-stats.mozilla.com/report/index/4c6bd2b1-a75c-4f4b-8383-2af482130720
memcpy
js_NewStringCopyN<1>(JSContext *,wchar_t const *,unsigned int)
js::ScriptSource::substring(JSContext *,unsigned int,unsigned int)
JSScript::sourceData(JSContext *)
js::FunctionToString(JSContext *,JS::Handle<JSFunction *>,bool,bool)
fun_toStringHelper(JSContext *,JS::Handle<JSObject *>,unsigned int)
fun_toString
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
nsXPCWrappedJSClass::CallMethod(nsXPCWrappedJS *,unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *)
nsXPCWrappedJS::CallMethod(unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *)
PrepareAndDispatch
PL_DHashTableOperate
SharedStub
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsEventDispatcher::DispatchDOMEvent(nsISupports *,nsEvent *,nsIDOMEvent *,nsPresContext *,nsEventStatus *)
nsDocument::DispatchPageTransition(nsIDOMEventTarget *,nsAString_internal const &,bool)
nsDocument::OnPageShow(bool,nsIDOMEventTarget *)
nsDocumentViewer::LoadComplete(tag_nsresult)
nsDocShell::EndPageLoad(nsIWebProgress *,nsIChannel *,tag_nsresult)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
mozilla::net::nsHttpChannel::QueryInterface(nsID const &,void * *)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
nsRefPtr<nsIRunnable>::~nsRefPtr<nsIRunnable>()
nsSecureBrowserUIImpl::OnStateChange(nsIWebProgress *,nsIRequest *,unsigned int,tag_nsresult)
nsDocLoader::DoFireOnStateChange(nsIWebProgress * const,nsIRequest * const,int &,tag_nsresult)
nsDocLoader::doStopDocumentLoad(nsIRequest *,tag_nsresult)
nsDocLoader::ChildDoneWithOnload(nsIDocumentLoader *)

