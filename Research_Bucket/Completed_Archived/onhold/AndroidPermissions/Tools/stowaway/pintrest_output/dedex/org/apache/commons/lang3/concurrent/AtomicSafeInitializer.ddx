.class public abstract org/apache/commons/lang3/concurrent/AtomicSafeInitializer
.super java/lang/Object
.source AtomicSafeInitializer.java
.implements org/apache/commons/lang3/concurrent/ConcurrentInitializer

.annotation systemVisibility Ldalvik/annotation/Signature;
  value [Ljava/lang/String; = { "<T:" , "Ljava/lang/Object;" , ">" , "Ljava/lang/Object;" , "Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer" , "<TT;>;" }
.end annotation

.field private final factory Ljava/util/concurrent/atomic/AtomicReference;
  .annotation systemVisibility Ldalvik/annotation/Signature;
    value [Ljava/lang/String; = { "Ljava/util/concurrent/atomic/AtomicReference" , "<" , "Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer" , "<TT;>;>;" }
  .end annotation
.end field
.field private final reference Ljava/util/concurrent/atomic/AtomicReference;
  .annotation systemVisibility Ldalvik/annotation/Signature;
    value [Ljava/lang/String; = { "Ljava/util/concurrent/atomic/AtomicReference" , "<TT;>;" }
  .end annotation
.end field

.method public <init>()V
.limit registers 2
; this: v1 (Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;)
.line 56
	invoke-direct	{v1},java/lang/Object/<init>	; <init>()V
; v1 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
.line 59
	new-instance	v0,java/util/concurrent/atomic/AtomicReference
; v0 : Ljava/util/concurrent/atomic/AtomicReference;
	invoke-direct	{v0},java/util/concurrent/atomic/AtomicReference/<init>	; <init>()V
; v0 : Ljava/util/concurrent/atomic/AtomicReference;
	iput-object	v0,v1,org/apache/commons/lang3/concurrent/AtomicSafeInitializer.factory Ljava/util/concurrent/atomic/AtomicReference;
; v0 : Ljava/util/concurrent/atomic/AtomicReference; , v1 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
.line 63
	new-instance	v0,java/util/concurrent/atomic/AtomicReference
; v0 : Ljava/util/concurrent/atomic/AtomicReference;
	invoke-direct	{v0},java/util/concurrent/atomic/AtomicReference/<init>	; <init>()V
; v0 : Ljava/util/concurrent/atomic/AtomicReference;
	iput-object	v0,v1,org/apache/commons/lang3/concurrent/AtomicSafeInitializer.reference Ljava/util/concurrent/atomic/AtomicReference;
; v0 : Ljava/util/concurrent/atomic/AtomicReference; , v1 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	return-void	
.end method

.method public final get()Ljava/lang/Object;
.throws Lorg/apache/commons/lang3/concurrent/ConcurrentException;
.annotation systemVisibility Ldalvik/annotation/Signature;
    value [Ljava/lang/String; = { "()TT;" }
.end annotation
.limit registers 4
; this: v3 (Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;)
l1337c8:
.line 75
	iget-object	v1,v3,org/apache/commons/lang3/concurrent/AtomicSafeInitializer.reference Ljava/util/concurrent/atomic/AtomicReference;
; v1 : Ljava/util/concurrent/atomic/AtomicReference; , v3 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	invoke-virtual	{v1},java/util/concurrent/atomic/AtomicReference/get	; get()Ljava/lang/Object;
; v1 : Ljava/util/concurrent/atomic/AtomicReference;
	move-result-object	v0
; v0 : Ljava/lang/Object;
	if-nez	v0,l1337fe
; v0 : Ljava/lang/Object;
.line 76
	iget-object	v1,v3,org/apache/commons/lang3/concurrent/AtomicSafeInitializer.factory Ljava/util/concurrent/atomic/AtomicReference;
; v1 : Ljava/util/concurrent/atomic/AtomicReference; , v3 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	const/4	v2,0
; v2 : single-length
	invoke-virtual	{v1,v2,v3},java/util/concurrent/atomic/AtomicReference/compareAndSet	; compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z
; v1 : Ljava/util/concurrent/atomic/AtomicReference; , v2 : single-length , v3 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	move-result	v1
; v1 : single-length
	if-eqz	v1,l1337c8
; v1 : single-length
.line 77
	iget-object	v1,v3,org/apache/commons/lang3/concurrent/AtomicSafeInitializer.reference Ljava/util/concurrent/atomic/AtomicReference;
; v1 : Ljava/util/concurrent/atomic/AtomicReference; , v3 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	invoke-virtual	{v3},org/apache/commons/lang3/concurrent/AtomicSafeInitializer/initialize	; initialize()Ljava/lang/Object;
; v3 : Lorg/apache/commons/lang3/concurrent/AtomicSafeInitializer;
	move-result-object	v2
; v2 : Ljava/lang/Object;
	invoke-virtual	{v1,v2},java/util/concurrent/atomic/AtomicReference/set	; set(Ljava/lang/Object;)V
; v1 : Ljava/util/concurrent/atomic/AtomicReference; , v2 : Ljava/lang/Object;
	goto	l1337c8
l1337fe:
.line 81
	return-object	v0
; v0 : Ljava/lang/Object;
.end method

.method protected abstract initialize()Ljava/lang/Object;
.throws Lorg/apache/commons/lang3/concurrent/ConcurrentException;
.annotation systemVisibility Ldalvik/annotation/Signature;
    value [Ljava/lang/String; = { "()TT;" }
.end annotation
.end method


