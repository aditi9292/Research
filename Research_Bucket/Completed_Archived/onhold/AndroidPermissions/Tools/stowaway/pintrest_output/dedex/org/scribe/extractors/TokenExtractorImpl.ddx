.class public org/scribe/extractors/TokenExtractorImpl
.super java/lang/Object
.source TokenExtractorImpl.java
.implements org/scribe/extractors/RequestTokenExtractor
.implements org/scribe/extractors/AccessTokenExtractor

.field private static final SECRET_REGEX Ljava/util/regex/Pattern;
.field private static final TOKEN_REGEX Ljava/util/regex/Pattern;

.method static <clinit>()V
.limit registers 1
.line 18
	const-string	v0,"oauth_token=([^&]+)"
; v0 : Ljava/lang/String;
	invoke-static	{v0},java/util/regex/Pattern/compile	; compile(Ljava/lang/String;)Ljava/util/regex/Pattern;
; v0 : Ljava/lang/String;
	move-result-object	v0
; v0 : Ljava/util/regex/Pattern;
	sput-object	v0,org/scribe/extractors/TokenExtractorImpl.TOKEN_REGEX Ljava/util/regex/Pattern;
; v0 : Ljava/util/regex/Pattern;
.line 19
	const-string	v0,"oauth_token_secret=([^&]*)"
; v0 : Ljava/lang/String;
	invoke-static	{v0},java/util/regex/Pattern/compile	; compile(Ljava/lang/String;)Ljava/util/regex/Pattern;
; v0 : Ljava/lang/String;
	move-result-object	v0
; v0 : Ljava/util/regex/Pattern;
	sput-object	v0,org/scribe/extractors/TokenExtractorImpl.SECRET_REGEX Ljava/util/regex/Pattern;
; v0 : Ljava/util/regex/Pattern;
	return-void	
.end method

.method public <init>()V
.limit registers 1
; this: v0 (Lorg/scribe/extractors/TokenExtractorImpl;)
.line 16
	invoke-direct	{v0},java/lang/Object/<init>	; <init>()V
; v0 : Lorg/scribe/extractors/TokenExtractorImpl;
	return-void	
.end method

.method private extract(Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/lang/String;
.limit registers 7
; this: v4 (Lorg/scribe/extractors/TokenExtractorImpl;)
; parameter[0] : v5 (Ljava/lang/String;)
; parameter[1] : v6 (Ljava/util/regex/Pattern;)
	const/4	v2,1
; v2 : single-length
.line 34
	invoke-virtual	{v6,v5},java/util/regex/Pattern/matcher	; matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
; v6 : Ljava/util/regex/Pattern; , v5 : Ljava/lang/String;
	move-result-object	v0
; v0 : Ljava/util/regex/Matcher;
.line 35
	invoke-virtual	{v0},java/util/regex/Matcher/find	; find()Z
; v0 : Ljava/util/regex/Matcher;
	move-result	v1
; v1 : single-length
	if-eqz	v1,l14a57c
; v1 : single-length
	invoke-virtual	{v0},java/util/regex/Matcher/groupCount	; groupCount()I
; v0 : Ljava/util/regex/Matcher;
	move-result	v1
; v1 : single-length
	if-lt	v1,v2,l14a57c
; v1 : single-length , v2 : single-length
.line 37
	invoke-virtual	{v0,v2},java/util/regex/Matcher/group	; group(I)Ljava/lang/String;
; v0 : Ljava/util/regex/Matcher; , v2 : single-length
	move-result-object	v1
; v1 : Ljava/lang/String;
	invoke-static	{v1},org/scribe/utils/OAuthEncoder/decode	; decode(Ljava/lang/String;)Ljava/lang/String;
; v1 : Ljava/lang/String;
	move-result-object	v1
; v1 : Ljava/lang/String;
	return-object	v1
; v1 : Ljava/lang/String;
l14a57c:
.line 41
	new-instance	v1,org/scribe/exceptions/OAuthException
; v1 : Lorg/scribe/exceptions/OAuthException;
	new-instance	v2,java/lang/StringBuilder
; v2 : Ljava/lang/StringBuilder;
	invoke-direct	{v2},java/lang/StringBuilder/<init>	; <init>()V
; v2 : Ljava/lang/StringBuilder;
	const-string	v3,"Response body is incorrect. Can't extract token and secret from this: '"
; v3 : Ljava/lang/String;
	invoke-virtual	{v2,v3},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v2 : Ljava/lang/StringBuilder; , v3 : Ljava/lang/String;
	move-result-object	v2
; v2 : Ljava/lang/StringBuilder;
	invoke-virtual	{v2,v5},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v2 : Ljava/lang/StringBuilder; , v5 : Ljava/lang/String;
	move-result-object	v2
; v2 : Ljava/lang/StringBuilder;
	const-string	v3,"'"
; v3 : Ljava/lang/String;
	invoke-virtual	{v2,v3},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v2 : Ljava/lang/StringBuilder; , v3 : Ljava/lang/String;
	move-result-object	v2
; v2 : Ljava/lang/StringBuilder;
	invoke-virtual	{v2},java/lang/StringBuilder/toString	; toString()Ljava/lang/String;
; v2 : Ljava/lang/StringBuilder;
	move-result-object	v2
; v2 : Ljava/lang/String;
	const/4	v3,0
; v3 : single-length
	invoke-direct	{v1,v2,v3},org/scribe/exceptions/OAuthException/<init>	; <init>(Ljava/lang/String;Ljava/lang/Exception;)V
; v1 : Lorg/scribe/exceptions/OAuthException; , v2 : Ljava/lang/String; , v3 : single-length
	throw	v1
; v1 : Lorg/scribe/exceptions/OAuthException;
.end method

.method public extract(Ljava/lang/String;)Lorg/scribe/model/Token;
.limit registers 5
; this: v3 (Lorg/scribe/extractors/TokenExtractorImpl;)
; parameter[0] : v4 (Ljava/lang/String;)
.line 26
	const-string	v2,"Response body is incorrect. Can't extract a token from an empty string"
; v2 : Ljava/lang/String;
	invoke-static	{v4,v2},org/scribe/utils/Preconditions/checkEmptyString	; checkEmptyString(Ljava/lang/String;Ljava/lang/String;)V
; v4 : Ljava/lang/String; , v2 : Ljava/lang/String;
.line 27
	sget-object	v2,org/scribe/extractors/TokenExtractorImpl.TOKEN_REGEX Ljava/util/regex/Pattern;
; v2 : Ljava/util/regex/Pattern;
	invoke-direct	{v3,v4,v2},org/scribe/extractors/TokenExtractorImpl/extract	; extract(Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/lang/String;
; v3 : Lorg/scribe/extractors/TokenExtractorImpl; , v4 : Ljava/lang/String; , v2 : Ljava/util/regex/Pattern;
	move-result-object	v1
; v1 : Ljava/lang/String;
.line 28
	sget-object	v2,org/scribe/extractors/TokenExtractorImpl.SECRET_REGEX Ljava/util/regex/Pattern;
; v2 : Ljava/util/regex/Pattern;
	invoke-direct	{v3,v4,v2},org/scribe/extractors/TokenExtractorImpl/extract	; extract(Ljava/lang/String;Ljava/util/regex/Pattern;)Ljava/lang/String;
; v3 : Lorg/scribe/extractors/TokenExtractorImpl; , v4 : Ljava/lang/String; , v2 : Ljava/util/regex/Pattern;
	move-result-object	v0
; v0 : Ljava/lang/String;
.line 29
	new-instance	v2,org/scribe/model/Token
; v2 : Lorg/scribe/model/Token;
	invoke-direct	{v2,v1,v0,v4},org/scribe/model/Token/<init>	; <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
; v2 : Lorg/scribe/model/Token; , v1 : Ljava/lang/String; , v0 : Ljava/lang/String; , v4 : Ljava/lang/String;
	return-object	v2
; v2 : Lorg/scribe/model/Token;
.end method


