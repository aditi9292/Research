.class public org/apache/commons/io/filefilter/MagicNumberFileFilter
.super org/apache/commons/io/filefilter/AbstractFileFilter
.source MagicNumberFileFilter.java
.implements java/io/Serializable

.field private static final serialVersionUID J = -92282921	; 0xfffffffffa7fdfd7
.field private final byteOffset J
.field private final magicNumbers [B

.method public <init>(Ljava/lang/String;)V
.limit registers 4
; this: v2 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
; parameter[0] : v3 (Ljava/lang/String;)
.line 137
	const-wide/16	v0,0
; v0 : double-length
	invoke-direct	{v2,v3,v0,v1},org/apache/commons/io/filefilter/MagicNumberFileFilter/<init>	; <init>(Ljava/lang/String;J)V
; v2 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter; , v3 : Ljava/lang/String; , v0 : double-length
.line 138
	return-void	
.end method

.method public <init>(Ljava/lang/String;J)V
.limit registers 6
; this: v2 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
; parameter[0] : v3 (Ljava/lang/String;)
; parameter[1] : v4 (J)
.line 160
	invoke-direct	{v2},org/apache/commons/io/filefilter/AbstractFileFilter/<init>	; <init>()V
; v2 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 161
	if-nez	v3,l118f16
; v3 : Ljava/lang/String;
.line 162
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The magic number cannot be null"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118f16:
.line 164
	invoke-virtual	{v3},java/lang/String/length	; length()I
; v3 : Ljava/lang/String;
	move-result	v0
; v0 : single-length
	if-nez	v0,l118f32
; v0 : single-length
.line 165
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The magic number must contain at least one byte"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118f32:
.line 167
	const-wide/16	v0,0
; v0 : double-length
	cmp-long	v0,v4,v0
; v0 : single-length , v4 : double-length , v0 : single-length
	if-gez	v0,l118f4e
; v0 : single-length
.line 168
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The offset cannot be negative"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118f4e:
.line 171
	invoke-virtual	{v3},java/lang/String/getBytes	; getBytes()[B
; v3 : Ljava/lang/String;
	move-result-object	v0
; v0 : [B
	iput-object	v0,v2,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v0 : [B , v2 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 172
	iput-wide	v4,v2,org/apache/commons/io/filefilter/MagicNumberFileFilter.byteOffset J
; v4 : double-length , v2 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 173
	return-void	
.end method

.method public <init>([B)V
.limit registers 4
; this: v2 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
; parameter[0] : v3 ([B)
.line 112
	const-wide/16	v0,0
; v0 : double-length
	invoke-direct	{v2,v3,v0,v1},org/apache/commons/io/filefilter/MagicNumberFileFilter/<init>	; <init>([BJ)V
; v2 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter; , v3 : [B , v0 : double-length
.line 113
	return-void	
.end method

.method public <init>([BJ)V
.limit registers 7
; this: v3 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
; parameter[0] : v4 ([B)
; parameter[1] : v5 (J)
	const/4	v2,0
; v2 : single-length
.line 205
	invoke-direct	{v3},org/apache/commons/io/filefilter/AbstractFileFilter/<init>	; <init>()V
; v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 206
	if-nez	v4,l118fa8
; v4 : [B
.line 207
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The magic number cannot be null"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118fa8:
.line 209
	array-length	v0,v4
; v0 : single-length , v4 : [B
	if-nez	v0,l118fbe
; v0 : single-length
.line 210
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The magic number must contain at least one byte"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118fbe:
.line 212
	const-wide/16	v0,0
; v0 : double-length
	cmp-long	v0,v5,v0
; v0 : single-length , v5 : double-length , v0 : single-length
	if-gez	v0,l118fda
; v0 : single-length
.line 213
	new-instance	v0,java/lang/IllegalArgumentException
; v0 : Ljava/lang/IllegalArgumentException;
	const-string	v1,"The offset cannot be negative"
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/IllegalArgumentException/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/IllegalArgumentException; , v1 : Ljava/lang/String;
	throw	v0
; v0 : Ljava/lang/IllegalArgumentException;
l118fda:
.line 216
	array-length	v0,v4
; v0 : single-length , v4 : [B
	new-array	v0,v0,[B
; v0 : [B , v0 : [B
	iput-object	v0,v3,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v0 : [B , v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 217
	iget-object	v0,v3,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v0 : [B , v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	array-length	v1,v4
; v1 : single-length , v4 : [B
	invoke-static	{v4,v2,v0,v2,v1},java/lang/System/arraycopy	; arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
; v4 : [B , v2 : single-length , v0 : [B , v2 : single-length , v1 : single-length
.line 218
	iput-wide	v5,v3,org/apache/commons/io/filefilter/MagicNumberFileFilter.byteOffset J
; v5 : double-length , v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
.line 219
	return-void	
.end method

.method public accept(Ljava/io/File;)Z
.limit registers 9
; this: v7 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
; parameter[0] : v8 (Ljava/io/File;)
.catch java/io/IOException from l119064 to l11906e using l119092
.catch java/lang/Exception from l119064 to l11906e using l11908c
.catch java/io/IOException from l119040 to l119058 using l119092
.catch java/lang/Exception from l119040 to l119058 using l11908c
.catch java/io/IOException from l119028 to l119040 using l119078
.catch java/lang/Exception from l119028 to l119040 using l119082
.var 1 is randomAccessFile Ljava/io/RandomAccessFile; from l119028 to l119040
.var 0 is fileBytes [B from l119032 to l119062
.var 2 is randomAccessFile Ljava/io/RandomAccessFile; from l119040 to l119062
.var 3 is read I from l119052 to l119062
.var 0 is fileBytes [B from l119064 to l119078
.var 2 is randomAccessFile Ljava/io/RandomAccessFile; from l119064 to l119078
.var 3 is read I from l119064 to l119078
.var 1 is randomAccessFile Ljava/io/RandomAccessFile; from l119078 to l11908c
.var 2 is randomAccessFile Ljava/io/RandomAccessFile; from l11908c to l119090
.var 1 is randomAccessFile Ljava/io/RandomAccessFile; from l119090 to l119092
.var 2 is randomAccessFile Ljava/io/RandomAccessFile; from l119092 to l119096
	const/4	v4,0
; v4 : single-length
.line 239
	if-eqz	v8,l119062
; v8 : Ljava/io/File;
	invoke-virtual	{v8},java/io/File/isFile	; isFile()Z
; v8 : Ljava/io/File;
	move-result	v5
; v5 : single-length
	if-eqz	v5,l119062
; v5 : single-length
	invoke-virtual	{v8},java/io/File/canRead	; canRead()Z
; v8 : Ljava/io/File;
	move-result	v5
; v5 : single-length
	if-eqz	v5,l119062
; v5 : single-length
.line 240
	const/4	v1,0
; v1 : single-length
l119028:
.line 242
	iget-object	v5,v7,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v5 : [B , v7 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	array-length	v5,v5
; v5 : single-length , v5 : single-length
	new-array	v0,v5,[B
; v0 : [B , v5 : single-length
.line 243
	new-instance	v2,java/io/RandomAccessFile
; v2 : Ljava/io/RandomAccessFile;
	const-string	v5,"r"
; v5 : Ljava/lang/String;
	invoke-direct	{v2,v8,v5},java/io/RandomAccessFile/<init>	; <init>(Ljava/io/File;Ljava/lang/String;)V
; v2 : Ljava/io/RandomAccessFile; , v8 : Ljava/io/File; , v5 : Ljava/lang/String;
l119040:
.line 244
	iget-wide	v5,v7,org/apache/commons/io/filefilter/MagicNumberFileFilter.byteOffset J
; v5 : double-length , v7 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	invoke-virtual	{v2,v5,v6},java/io/RandomAccessFile/seek	; seek(J)V
; v2 : Ljava/io/RandomAccessFile; , v5 : double-length
.line 245
	invoke-virtual	{v2,v0},java/io/RandomAccessFile/read	; read([B)I
; v2 : Ljava/io/RandomAccessFile; , v0 : [B
	move-result	v3
; v3 : single-length
.line 246
	iget-object	v5,v7,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v5 : [B , v7 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	array-length	v5,v5
; v5 : single-length , v5 : single-length
l119058:
	if-eq	v3,v5,l119064
; v3 : single-length , v5 : single-length
.line 253
	invoke-static	{v2},org/apache/commons/io/IOUtils/closeQuietly	; closeQuietly(Ljava/io/Closeable;)V
; v2 : Ljava/io/RandomAccessFile;
l119062:
.line 257
	return	v4
; v4 : single-length
l119064:
.line 249
	iget-object	v5,v7,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v5 : [B , v7 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	invoke-static	{v5,v0},java/util/Arrays/equals	; equals([B[B)Z
; v5 : [B , v0 : [B
l11906e:
	move-result	v4
; v4 : single-length
.line 253
	invoke-static	{v2},org/apache/commons/io/IOUtils/closeQuietly	; closeQuietly(Ljava/io/Closeable;)V
; v2 : Ljava/io/RandomAccessFile;
	goto	l119062
l119078:
.line 250
	move-exception	v5
; v5 : java/io/IOException
l11907a:
.line 253
	invoke-static	{v1},org/apache/commons/io/IOUtils/closeQuietly	; closeQuietly(Ljava/io/Closeable;)V
; v1 : Ljava/io/RandomAccessFile;
	goto	l119062
l119082:
	move-exception	v4
; v4 : java/lang/Exception
l119084:
	invoke-static	{v1},org/apache/commons/io/IOUtils/closeQuietly	; closeQuietly(Ljava/io/Closeable;)V
; v1 : Ljava/io/RandomAccessFile;
	throw	v4
; v4 : java/lang/Exception
l11908c:
	move-exception	v4
; v4 : java/lang/Exception
	move-object	v1,v2
; v1 : Ljava/io/RandomAccessFile; , v2 : Ljava/io/RandomAccessFile;
l119090:
	goto	l119084
l119092:
.line 250
	move-exception	v5
; v5 : java/io/IOException
	move-object	v1,v2
; v1 : Ljava/io/RandomAccessFile; , v2 : Ljava/io/RandomAccessFile;
l119096:
	goto	l11907a
.end method

.method public toString()Ljava/lang/String;
.limit registers 4
; this: v3 (Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;)
.line 268
	new-instance	v0,java/lang/StringBuilder
; v0 : Ljava/lang/StringBuilder;
	invoke-super	{v3},org/apache/commons/io/filefilter/AbstractFileFilter/toString	; toString()Ljava/lang/String;
; v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	move-result-object	v1
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v1},java/lang/StringBuilder/<init>	; <init>(Ljava/lang/String;)V
; v0 : Ljava/lang/StringBuilder; , v1 : Ljava/lang/String;
.line 269
	const-string	v1,"("
; v1 : Ljava/lang/String;
	invoke-virtual	{v0,v1},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v0 : Ljava/lang/StringBuilder; , v1 : Ljava/lang/String;
.line 270
	new-instance	v1,java/lang/String
; v1 : Ljava/lang/String;
	iget-object	v2,v3,org/apache/commons/io/filefilter/MagicNumberFileFilter.magicNumbers [B
; v2 : [B , v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	invoke-direct	{v1,v2},java/lang/String/<init>	; <init>([B)V
; v1 : Ljava/lang/String; , v2 : [B
	invoke-virtual	{v0,v1},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v0 : Ljava/lang/StringBuilder; , v1 : Ljava/lang/String;
.line 271
	const-string	v1,","
; v1 : Ljava/lang/String;
	invoke-virtual	{v0,v1},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v0 : Ljava/lang/StringBuilder; , v1 : Ljava/lang/String;
.line 272
	iget-wide	v1,v3,org/apache/commons/io/filefilter/MagicNumberFileFilter.byteOffset J
; v1 : double-length , v3 : Lorg/apache/commons/io/filefilter/MagicNumberFileFilter;
	invoke-virtual	{v0,v1,v2},java/lang/StringBuilder/append	; append(J)Ljava/lang/StringBuilder;
; v0 : Ljava/lang/StringBuilder; , v1 : double-length
.line 273
	const-string	v1,")"
; v1 : Ljava/lang/String;
	invoke-virtual	{v0,v1},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v0 : Ljava/lang/StringBuilder; , v1 : Ljava/lang/String;
.line 274
	invoke-virtual	{v0},java/lang/StringBuilder/toString	; toString()Ljava/lang/String;
; v0 : Ljava/lang/StringBuilder;
	move-result-object	v1
; v1 : Ljava/lang/String;
	return-object	v1
; v1 : Ljava/lang/String;
.end method


