https://crash-stats.mozilla.com/report/index/3e1f279b-f68c-4037-9ba9-785cd2130716
mozilla::widget::WindowHook::Lookup(unsigned int)
mozilla::widget::WindowHook::RemoveMonitor(unsigned int,bool (*)(void *,HWND__ *,unsigned int,unsigned int,long,long *),void *)
mozilla::widget::TaskbarPreview::Disable()
mozilla::widget::TaskbarTabPreview::Disable()
mozilla::widget::TaskbarPreview::SetVisible(bool)
XPCWrappedNative::CallMethod(XPCCallContext &,XPCWrappedNative::CallMode)
XPCConvert::NativeInterface2JSObject(XPCLazyCallContext &,JS::Value *,nsIXPConnectJSObjectHolder * *,xpcObjectHelper &,nsID const *,XPCNativeInterface * *,bool,tag_nsresult *)
js::ValueToId<1>(JSContext *,JS::Value const &,JS::MutableHandle<int>)
mozjs.dll@0x2e3f50
@0x579600
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
JSObject::getGeneric(JSContext *,JS::Handle<JSObject *>,JS::Handle<JSObject *>,JS::Handle<int>,JS::MutableHandle<JS::Value>)
js::baseops::SetPropertyHelper(JSContext *,JS::Handle<JSObject *>,JS::Handle<JSObject *>,JS::Handle<int>,unsigned int,JS::MutableHandle<JS::Value>,int)
js::SetPropertyOperation(JSContext *,unsigned char *,JS::Handle<JS::Value>,JS::Handle<JS::Value>)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
js::CrossCompartmentWrapper::call(JSContext *,JSObject *,unsigned int,JS::Value *)
proxy_Call
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::ExecuteKernel(JSContext *,JS::Handle<JSScript *>,JSObject &,JS::Value const &,js::ExecuteType,js::AbstractFramePtr,JS::Value *)
EvalKernel
js::DirectEval(JSContext *,JS::CallArgs const &)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
mozilla::dom::EventHandlerNonNull::Call(JSContext *,JSObject *,nsIDOMEvent *,mozilla::ErrorResult &)
mozilla::dom::EventHandlerNonNull::Call<nsISupports *>(nsISupports * const &,nsIDOMEvent *,mozilla::ErrorResult &)
nsCOMPtr_base::assign_from_qi(nsQueryInterface,nsID const &)
je_malloc
js::ContextStack::ensureOnTop(JSContext *,js::MaybeReportError,unsigned int,js::ContextStack::MaybeExtend,bool *)
nsXPConnect::Push(JSContext *)
nsCxPusher::Push(nsIDOMEventTarget *)
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsDocumentViewer::PageHide(bool)
nsDocShell::FirePageHideNotification(bool)
nsDocShell::Destroy()
nsXULWindow::Destroy()
nsWebShellWindow::Destroy()
nsChromeTreeOwner::Destroy()
nsGlobalWindow::ReallyCloseWindow()
nsGlobalWindow::FinalClose()
nsGlobalWindow::ForceClose()
nsAppStartup::CloseAllWindows()
nsAppStartup::Quit(unsigned int)
NS_InvokeByIndex_P
XPC_WN_CallMethod(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,js::InvokeArgsGuard &,js::MaybeConstruct)
js_fun_apply(JSContext *,unsigned int,JS::Value *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Interpret(JSContext *,js::StackFrame *,js::InterpMode)
js::RunScript(JSContext *,js::StackFrame *)
js::InvokeKernel(JSContext *,JS::CallArgs,js::MaybeConstruct)
js::Invoke(JSContext *,JS::Value const &,JS::Value const &,unsigned int,JS::Value *,JS::Value *)
JS_CallFunctionValue(JSContext *,JSObject *,JS::Value,unsigned int,JS::Value *,JS::Value *)
nsXPCWrappedJSClass::CallMethod(nsXPCWrappedJS *,unsigned short,XPTMethodDescriptor const *,nsXPTCMiniVariant *)
ZwQuerySystemInformation
PrepareAndDispatch
mozilla::TimeStamp::operator-(mozilla::TimeStamp const &)
nsXPConnect::GetXPConnect()
nsXPConnect::Push(JSContext *)
nsCOMPtr_base::assign_with_AddRef(nsISupports *)
SharedStub
nsEventListenerManager::HandleEventInternal(nsPresContext *,nsEvent *,nsIDOMEvent * *,nsIDOMEventTarget *,nsEventStatus *,nsCxPusher *)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
nsEventDispatcher::DispatchDOMEvent(nsISupports *,nsEvent *,nsIDOMEvent *,nsPresContext *,nsEventStatus *)
PresShell::HandleDOMEventWithTarget(nsIContent *,nsIDOMEvent *,nsEventStatus *)
nsContentUtils::DispatchXULCommand(nsIContent *,bool,nsIDOMEvent *,nsIPresShell *,bool,bool,bool,bool)
nsButtonBoxFrame::DoMouseClick(nsGUIEvent *,bool)
nsButtonBoxFrame::MouseClicked(nsPresContext *,nsGUIEvent *)
nsButtonBoxFrame::HandleEvent(nsPresContext *,nsGUIEvent *,nsEventStatus *)
nsPresShellEventCB::HandleEvent(nsEventChainPostVisitor &)
nsEventTargetChainItem::HandleEventTargetChain(nsEventChainPostVisitor &,nsDispatchingCallback *,bool,nsCxPusher *)
nsEventDispatcher::Dispatch(nsISupports *,nsPresContext *,nsEvent *,nsIDOMEvent *,nsEventStatus *,nsDispatchingCallback *,nsCOMArray<nsIDOMEventTarget> *)
je_malloc
nsCOMArray_base::InsertObjectAt(nsISupports *,int)
nsCOMPtr<nsIWebProgressListener>::operator=(nsIWebProgressListener *)
PresShell::HandleEventWithTarget(nsEvent *,nsIFrame *,nsIContent *,nsEventStatus *)
nsEventStateManager::CheckForAndDispatchClick(nsPresContext *,nsMouseEvent *,nsEventStatus *)
nsRefPtr<nsIRunnable>::~nsRefPtr<nsIRunnable>()
@0x57e958
@0x12d
RtlpDecommitBlock
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
PR_Unlock
IsWindowVisible
nsWindow::DealWithPopups(HWND__ *,unsigned int,unsigned int,long,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected

