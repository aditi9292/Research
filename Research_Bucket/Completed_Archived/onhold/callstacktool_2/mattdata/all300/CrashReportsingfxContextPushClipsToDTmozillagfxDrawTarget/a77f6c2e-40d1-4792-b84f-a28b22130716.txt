https://crash-stats.mozilla.com/report/index/a77f6c2e-40d1-4792-b84f-a28b22130716
gfxContext::PushClipsToDT(mozilla::gfx::DrawTarget *)
gfxContext::PushGroup(gfxASurface::gfxContentType)
mozilla::layers::BasicLayerManager::PushGroupForLayer(gfxContext *,mozilla::layers::Layer *,nsIntRegion const &,bool *)
mozilla::layers::BasicThebesLayer::PaintThebes(gfxContext *,mozilla::layers::Layer *,void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::ReadbackProcessor *)
mozilla::gfx::NudgeToInteger
mozilla::layers::BasicLayerManager::PaintSelfOrChildren(mozilla::layers::PaintContext &,gfxContext *)
mozilla::layers::BasicLayerManager::PaintLayer(gfxContext *,mozilla::layers::Layer *,void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::ReadbackProcessor *)
mozilla::layers::BasicLayerManager::PaintSelfOrChildren(mozilla::layers::PaintContext &,gfxContext *)
mozilla::layers::BasicLayerManager::PaintLayer(gfxContext *,mozilla::layers::Layer *,void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::ReadbackProcessor *)
mozilla::layers::BasicLayerManager::EndTransactionInternal(void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::LayerManager::EndTransactionFlags)
mozilla::layers::BasicLayerManager::EndTransaction(void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::LayerManager::EndTransactionFlags)
mozilla::PaintInactiveLayer
mozilla::FrameLayerBuilder::DrawThebesLayer(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *)
gfxContext::Clip()
gfxContext::Clip()
mozilla::layers::ThebesLayerD3D10::Validate(mozilla::layers::ReadbackProcessor *)
nsTArray_Impl<nsRefPtr<mozilla::dom::indexedDB::FileManager>,nsTArrayInfallibleAllocator>::nsTArray_Impl<nsRefPtr<mozilla::dom::indexedDB::FileManager>,nsTArrayInfallibleAllocator>()
mozilla::layers::ContainerLayerD3D10::Validate()
mozilla::layers::LayerManagerD3D10::Render(mozilla::layers::LayerManager::EndTransactionFlags)
mozilla::layers::LayerManagerD3D10::EndTransaction(void (*)(mozilla::layers::ThebesLayer *,gfxContext *,nsIntRegion const &,nsIntRegion const &,void *),void *,mozilla::layers::LayerManager::EndTransactionFlags)
nsDisplayList::PaintForFrame(nsDisplayListBuilder *,nsRenderingContext *,nsIFrame *,unsigned int)
nsLayoutUtils::PaintFrame(nsRenderingContext *,nsIFrame *,nsRegion const &,unsigned int,unsigned int)
mozilla::FrameProperties::Set(mozilla::FramePropertyDescriptor const *,void *)
nsView::DoResetWidgetBounds(bool,bool)
wcscpy_s
GetParent
nsWindow::GetBounds(nsIntRect &)
nsIWidget::NeedsPaint()
PresShell::WillPaint()
nsRefPtr<nsIRunnable>::~nsRefPtr<nsIRunnable>()
nsViewManager::CallWillPaintOnObservers()
nsViewManager::ProcessPendingUpdates()
nsViewManager::WillPaintWindow(nsIWidget *)
nsView::WillPaintWindow(nsIWidget *)
nsWindow::OnPaint(HDC__ *,unsigned int)
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
NtUserGetDC
DispatchClientMessage
__fnDWORD
KiUserCallbackDispatcher
KiUserApcDispatcher
nsWindow::DispatchStarvedPaints(HWND__ *,long)
nsWindow::DispatchPendingEvents()
nsWindow::ProcessMessage(unsigned int,unsigned int &,long &,long *)
nsWindow::WindowProcInternal(HWND__ *,unsigned int,unsigned int,long)
CallWindowProcCrashProtected
nsWindow::WindowProc(HWND__ *,unsigned int,unsigned int,long)
InternalCallWinProc
UserCallWinProcCheckWow
DispatchMessageWorker
DispatchMessageW
nsBaseAppShell::OnProcessNextEvent(nsIThreadInternal *,bool,unsigned int)
je_free
je_free
nsThread::ProcessNextEvent(bool,bool *)
mozilla::Mutex::Unlock()
mozilla::ipc::MessagePump::Run(base::MessagePump::Delegate *)
MessageLoop::RunHandler()
MessageLoop::Run()
nsBaseAppShell::Run()
nsAppShell::Run()
XREMain::XRE_mainRun()
XREMain::XRE_main(int,char * * const,nsXREAppData const *)
XRE_main
do_main
wmain
__tmainCRTStartup
BaseThreadInitThunk
__RtlUserThreadStart
_RtlUserThreadStart

