https://crash-stats.mozilla.com/report/index/dc98ac59-ac91-467b-9740-52bfb2130720
IncrementalCollectSlice
ozone_size
gettimeofday
pthread_mutex_lock
PRMJ_Now()
GCCycle
Collect
nsJSContext::GarbageCollectNow(JS::gcreason::Reason, nsJSContext::IsIncremental, nsJSContext::IsCompartment, nsJSContext::IsShrinking, long long)
XUL@0x755130
nsTimerImpl::Fire()
nsTimerEvent::Run()
nsThread::ProcessNextEvent(bool, bool*)
pthread_mutex_unlock
PR_ExitMonitor
NS_InvokeByIndex_P
pthread_mutex_lock
pthread_mutex_unlock
XPCWrappedNative::CallMethod(XPCCallContext&, XPCWrappedNative::CallMode)
PR_GetIPNodeByName
nsThreadManager::GetIsMainThread(bool*)
NS_IsMainThread_P()
nsXPConnect::GetXPConnect()
XPCWrappedNative::GetWrappedNativeOfJSObject(JSContext*, JSObject*, JSObject*, JSObject**, XPCWrappedNativeTearOff**)
XPCCallContext::Init(XPCContext::LangType, int, JSObject*, JSObject*, XPCCallContext::WrapperInitOptions, long, unsigned int, JS::Value*, JS::Value*)
PR_GetCurrentThread
NS_IsMainThread_P()
nsXPConnect::GetXPConnect()
XPCCallContext::~XPCCallContext()
XPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)
pthread_mutex_unlock
PR_ExitMonitor
XPCCallContext::SetName(long)
XPCCallContext::Init(XPCContext::LangType, int, JSObject*, JSObject*, XPCCallContext::WrapperInitOptions, long, unsigned int, JS::Value*, JS::Value*)
PR_GetCurrentThread
XPCWrappedNative::GetWrappedNativeOfJSObject(JSContext*, JSObject*, JSObject*, JSObject**, XPCWrappedNativeTearOff**)
XPCCallContext::XPCCallContext(XPCContext::LangType, JSContext*, JSObject*, JSObject*, long, unsigned int, JS::Value*, JS::Value*)
XPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)
js::PropertyCache::fill(JSContext*, JSObject*, JSObject*, js::Shape*)
GeForceGLDriver@0x1
js::InvokeKernel(JSContext*, JS::CallArgs, js::MaybeConstruct)
js::GetPropertyOperation(JSContext*, JSScript*, unsigned char*, JS::MutableHandle<JS::Value>, JS::MutableHandle<JS::Value>)
js::Interpret(JSContext*, js::StackFrame*, js::InterpMode)
js::InvokeKernel(JSContext*, JS::CallArgs, js::MaybeConstruct)
js::NameOperation(JSContext*, unsigned char*, JS::MutableHandle<JS::Value>)
js::Interpret(JSContext*, js::StackFrame*, js::InterpMode)

