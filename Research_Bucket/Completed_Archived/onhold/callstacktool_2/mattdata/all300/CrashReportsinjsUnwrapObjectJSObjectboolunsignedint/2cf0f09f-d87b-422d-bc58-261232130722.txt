https://crash-stats.mozilla.com/report/index/2cf0f09f-d87b-422d-bc58-261232130722
js::UnwrapObject(JSObject *,bool,unsigned int *)
xpc::GetXBLScope(JSContext *,JSObject *)
nsXBLProtoImpl::InstallImplementation(nsXBLPrototypeBinding *,nsXBLBinding *)
nsXBLService::LoadBindings(nsIContent *,nsIURI *,nsIPrincipal *,nsXBLBinding * *,bool *)
nsCSSFrameConstructor::AddFrameConstructionItemsInternal(nsFrameConstructorState &,nsIContent *,nsIFrame *,nsIAtom *,int,bool,nsStyleContext *,unsigned int,nsCSSFrameConstructor::FrameConstructionItemList &)
nsCSSFrameConstructor::AddFrameConstructionItems(nsFrameConstructorState &,nsIContent *,bool,nsIFrame *,nsCSSFrameConstructor::FrameConstructionItemList &)
nsCSSFrameConstructor::FrameConstructionItemList::~FrameConstructionItemList()
nsCSSFrameConstructor::CreateAnonymousFrames(nsFrameConstructorState &,nsIContent *,nsIFrame *,PendingBinding *,nsFrameItems &)
nsCSSFrameConstructor::BeginBuildingScrollFrame(nsFrameConstructorState &,nsIContent *,nsStyleContext *,nsIFrame *,nsIAtom *,bool,nsIFrame * &)
nsCSSFrameConstructor::SetUpDocElementContainingBlock(nsIContent *)
nsCSSFrameConstructor::ConstructDocElementFrame(mozilla::dom::Element *,nsILayoutHistoryState *,nsIFrame * *)
nsCSSFrameConstructor::ContentRangeInserted(nsIContent *,nsIContent *,nsIContent *,nsILayoutHistoryState *,bool)
nsCSSFrameConstructor::ContentInserted(nsIContent *,nsIContent *,nsILayoutHistoryState *,bool)
PresShell::Initialize(int,int)
nsContentSink::StartLayout(bool)
nsHtml5TreeOpExecutor::StartLayout()
nsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor *,nsIContent * *)
nsHtml5TreeOpExecutor::RunFlushLoop()
mozilla::LinkedList<nsHtml5TreeOpExecutor>::popFirst()
FlushTimerCallback(nsITimer *,void *)
nsGlobalWindow::RunTimeout()
nsThread::HasPendingEvents(bool *)
nsBaseAppShell::OnProcessNextEvent(nsIThreadInternal *,bool,unsigned int)
_create_dc_and_bitmap
nspr4.dll@0x8d20
nsTimerEvent::Run()
nsThread::ProcessNextEvent(bool,bool *)
nsComponentManagerImpl::GetServiceByContractID(char const *,nsID const &,void * *)
NS_ProcessNextEvent_P(nsIThread *,bool)
nsXPConnect::AfterProcessNextEvent(nsIThreadInternal *,unsigned int)
nsXULWindow::CreateNewWindow(int,nsIXULWindow * *)

