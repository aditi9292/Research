- Create actual views for all of these and then re-upload them with the SQLite files once we have all the data in them

%%%%


### Get averages based on families of Genome

<<<Make this pull of an already created Genome File>>>


CREATE VIEW GetOverallCounts_malwareGroups AS
select parentFolder, count(ai.rowID) as AppCount, round(avg(FuzzyRiskValue),2) as FuzzyRisk, round(avg(JavaFiles),2) as JavaFiles, round(avg(JlintResult),2) as JLint, round(avg(DefectCount),2) as DefectCount, round(avg(LOC),2) as LOC, round(avg(simcad_clonefragment),2) as CloneFragment, round(avg(simcad_cloneGroup),2) as CloneGroup 

	, round(avg(JlintResult)/avg(LOC) * 100,1) as "Jlint/LOC"
	, round(avg(DefectCount)/avg(LOC) * 100,1) as "Defect/LOC"
	, round(avg(OPrivCount),1) as OPriv
	, round(avg(UPrivCount),1) as UPriv
	, round(avg(PrivCount),1) as PrivCount
	, round(round(avg(PrivCount),1)/round(avg(OPrivCount),1),2) as OPrivRatio
	, round(round(avg(PrivCount),1)/round(avg(UPrivCount),1),2) as UPrivRatio
	from apkInformation ai
	inner join toolResults tr on tr.apkID = ai.rowID
	left outer join (select count (permissionID) as OPrivCount, apkID from overprivilege o group by apkID) overprivCount on overprivCount.apkID = ai.rowID
	left outer join (select count (permissionID) as UPrivCount, apkID from underprivilege u group by apkID) underprivCount on underprivCount.apkID = ai.rowID
	inner join (select count (privID) as PrivCount, rowID from apkParser_privs_join apj group by rowID) permissionCount on permissionCount.rowID = ai.rowID
	
	
	group by parentFolder
	order by ParentFolder asc




#### Find Requested Priv (Not OverPrivs) Counts for all apps in Group

	CREATE VIEW GetPrivCounts AS
	select privName, count(apj.privID) as PrivCount
	from apkinformation ai
	inner join apkParser_privs_join apj on apj.rowID = ai.rowID
	inner join apkParser_privs ap on ap.privID = apj.privID
	-- Keep the lower downloads
	where ai.lowerdownloads >=10000
	group by apj.privID
	order by PrivCount desc




#### Find OverPrivs Counts for all apps in Group
	CREATE VIEW GetOverPrivCounts AS
	select count(p.Name) as OverPrivCount, P.Name
	from overprivilege o
	inner join permissions p on p.pid = o.permissionID 
	group by P.Name




### Find average values for all items in Group
	CREATE VIEW GetOverallCounts AS
	
%%% Fix the defect and Jlint LOC calculators
	select count(ai.rowID) as AppCount, round(avg(FuzzyRiskValue),2) as FuzzyRisk, round(avg(JavaFiles),2) as JavaFiles, round(avg(JlintResult),2) as JLint, round(avg(DefectCount),2) as DefectCount, round(avg(LOC),2) as LOC, round(avg(simcad_clonefragment),2) as CloneFragment, round(avg(simcad_cloneGroup),2) as CloneGroup 

	, round(avg(JlintResult)/avg(LOC) * 100,1) as "Jlint/LOC"
	, round(avg(DefectCount)/avg(LOC) * 100,1) as "Defect/LOC"
	, round(avg(OPrivCount),1) as OPriv
	, round(avg(UPrivCount),1) as UPriv
	, round(avg(PrivCount),1) as PrivCount
	, round(round(avg(PrivCount),1)/round(avg(OPrivCount),1),2) as OPrivRatio
	, round(round(avg(PrivCount),1)/round(avg(UPrivCount),1),2) as UPrivRatio
	from apkInformation ai
	inner join toolResults tr on tr.apkID = ai.rowID
	left outer join (select count (permissionID) as OPrivCount, apkID from overprivilege o group by apkID) overprivCount on overprivCount.apkID = ai.rowID
	left outer join (select count (permissionID) as UPrivCount, apkID from underprivilege u group by apkID) underprivCount on underprivCount.apkID = ai.rowID
	
	%% Keep this as inner join since apps with no permissions cannot exist
	inner join (select count (privID) as PrivCount, rowID from apkParser_privs_join apj group by rowID) permissionCount on permissionCount.rowID = ai.rowID

	and datepublished like '%2011%'



### Get the evolution of malware and which years of apps request permissions more often
	### Could probably stand to refine this a bit

	select ai.Name, FileCreated, FuzzyRiskValue as FuzzyRisk, JavaFiles as JavaFiles, JlintResult as JLint, 
	DefectCount as DefectCount, LOC as LOC, simcad_clonefragment as CloneFragment, 
	simcad_cloneGroup as CloneGroup 

	, OPrivCount as OPriv
	, UPrivCount as UPriv
	, PrivCount as PrivCount
	, PrivCount/OPrivCount as OPrivRatio
	, PrivCount/UPrivCount as UPrivRatio
	from apkInformation ai
	inner join toolResults tr on tr.apkID = ai.rowID
	left outer join (select count (permissionID) as OPrivCount, apkID from overprivilege o group by apkID) overprivCount on overprivCount.apkID = ai.rowID
	left outer join (select count (permissionID) as UPrivCount, apkID from underprivilege u group by apkID) underprivCount on underprivCount.apkID = ai.rowID
	inner join (select count (privID) as PrivCount, rowID from apkParser_privs_join apj group by rowID) permissionCount on permissionCount.rowID = ai.rowID
	where fileCreated <> ''
	and jlint is not null
	order by filecreated



##### Find basic info - mostly for debugging





