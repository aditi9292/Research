\begin{thebibliography}{10}

\bibitem{4288192}
S.~Bellon, R.~Koschke, G.~Antoniol, J.~Krinke, and E.~Merlo.
\newblock Comparison and evaluation of clone detection tools.
\newblock {\em Software Engineering, IEEE Transactions on}, 33(9):577--591,
  2007.

\bibitem{Burd:2002:ECD:827253.827745}
E.~Burd and J.~Bailey.
\newblock Evaluating clone detection tools for use during preventative
  maintenance.
\newblock In {\em Proceedings of the Second IEEE International Workshop on
  Source Code Analysis and Manipulation}, SCAM '02, pages 36--, Washington, DC,
  USA, 2002. IEEE Computer Society.

\bibitem{Kim:2011:MMC:1985793.1985835}
H.~Kim, Y.~Jung, S.~Kim, and K.~Yi.
\newblock Mecc: memory comparison-based clone detector.
\newblock In {\em Proceedings of the 33rd International Conference on Software
  Engineering}, ICSE '11, pages 301--310, New York, NY, USA, 2011. ACM.

\bibitem{Kraw2012}
R.~M. Krawitz.
\newblock {\em Code Clone Discovery Based on Functional Behavior}.
\newblock PhD thesis, Nova Southeastern University, 2012.

\bibitem{wcre2013}
D.~E. Krutz and E.~Shihab.
\newblock Cccd: Concolic code clone detection.
\newblock In {\em Reverse Engineering (WCRE), 2013 20th Working Conference on},
  2013.

\bibitem{Lavoie:2011:ATC:1985404.1985411}
T.~Lavoie and E.~Merlo.
\newblock Automated type-3 clone oracle using levenshtein metric.
\newblock In {\em Proceedings of the 5th International Workshop on Software
  Clones}, 2011.

\bibitem{Li:2012:CCB:2337223.2337260}
J.~Li and M.~D. Ernst.
\newblock Cbcd: cloned buggy code detector.
\newblock In {\em Proceedings of the 2012 International Conference on Software
  Engineering}, ICSE 2012, pages 310--320, Piscataway, NJ, USA, 2012. IEEE
  Press.

\bibitem{Li:2006:CFC}
Z.~Li, S.~Lu, S.~Myagmar, and Y.~Zhou.
\newblock Cp-miner: Finding copy-paste and related bugs in large-scale software
  code.
\newblock {\em IEEE Trans. Softw. Eng.}, 32(3):176--192, Mar. 2006.

\bibitem{Roy:2008:NAD:1437898.1438600}
C.~K. Roy and J.~R. Cordy.
\newblock Nicad: Accurate detection of near-miss intentional clones using
  flexible pretty-printing and code normalization.
\newblock In {\em Proceedings of the 2008 The 16th IEEE International
  Conference on Program Comprehension}, 2008.

\bibitem{Roy:2009:CEC:1530898.1531101}
C.~K. Roy, J.~R. Cordy, and R.~Koschke.
\newblock Comparison and evaluation of code clone detection techniques and
  tools: A qualitative approach.
\newblock {\em Sci. Comput. Program.}, 74(7):470--495, May 2009.

\bibitem{Saebjornsen:2009:DCC:1572272.1572287}
A.~Saebjornsen, J.~Willcock, T.~Panas, D.~Quinlan, and Z.~Su.
\newblock Detecting code clones in binary executables.
\newblock In {\em Proceedings of the Eighteenth International Symposium on
  Software Testing and Analysis}, ISSTA '09, pages 117--128, New York, NY, USA,
  2009. ACM.

\bibitem{6613857}
M.~Uddin, C.~Roy, and K.~Schneider.
\newblock Simcad: An extensible and faster clone detection tool for large scale
  software systems.
\newblock In {\em Program Comprehension (ICPC), 2013 IEEE 21st International
  Conference on}, pages 236--238, 2013.

\bibitem{Walenstein:2003:PCT:950792.951349}
A.~Walenstein, N.~Jyoti, J.~Li, Y.~Yang, and A.~Lakhotia.
\newblock Problems creating task-relevant clone detection reference data.
\newblock In {\em Proceedings of the 10th Working Conference on Reverse
  Engineering}, 2003.

\end{thebibliography}
