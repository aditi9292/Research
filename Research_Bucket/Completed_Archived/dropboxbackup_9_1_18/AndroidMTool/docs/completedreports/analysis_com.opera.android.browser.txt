---------------- Analysis Report -----------------
Package: com.opera.android.browser

----------- Permissions from Manifest ------------
   0 com.google.android.c2dm.permission.RECEIVE
   1 android.permission.WRITE_EXTERNAL_STORAGE
   2 android.permission.ACCESS_WIFI_STATE
   3 android.permission.RECORD_AUDIO
   4 android.permission.ACCESS_NETWORK_STATE
   5 com.opera.browser.permission.GET_PREINSTALL_DATA
   6 android.permission.SYSTEM_ALERT_WINDOW
   7 android.permission.ACCESS_FINE_LOCATION
   8 android.permission.WAKE_LOCK
   9 com.android.browser.permission.READ_HISTORY_BOOKMARKS
  10 android.permission.READ_PHONE_STATE
  11 android.permission.BLUETOOTH
  12 android.permission.CAMERA
  13 android.permission.CHANGE_WIFI_MULTICAST_STATE
  14 android.permission.VIBRATE
  15 android.permission.NFC
  16 com.android.launcher.permission.INSTALL_SHORTCUT
  17 com.opera.android.browser.permission.CRASHHANDLER
  18 android.permission.MODIFY_AUDIO_SETTINGS
  19 com.opera.android.browser.permission.C2D_MESSAGE
  20 android.permission.INTERNET

------------ Third Party Permissions -------------
   0 com.google.android.c2dm.permission.RECEIVE
   1 com.opera.browser.permission.GET_PREINSTALL_DATA
   2 com.android.browser.permission.READ_HISTORY_BOOKMARKS
   3 com.android.launcher.permission.INSTALL_SHORTCUT
   4 com.opera.android.browser.permission.C2D_MESSAGE
   5 com.opera.android.browser.permission.CRASHHANDLER

-------- Requested Dangerous Permissions ---------
storage: READ_EXTERNAL_STORAGE
storage: WRITE_EXTERNAL_STORAGE
phone: READ_PHONE_STATE
phone: CALL_PHONE
phone: READ_CALL_LOG
phone: WRITE_CALL_LOG
phone: ADD_VOICEMAIL
phone: USE_SIP
phone: PROCESS_OUTGOING_CALLS
camera: CAMERA
location: ACCESS_FINE_LOCATION
location: ACCESS_COARSE_LOCATION
microphone: RECORD_AUDIO

------------- Dangerous Permissions --------------
Total found: 47

ACCESS_COARSE_LOCATION:         if (id.a(context, "android.permission.ACCESS_FINE_LOCATION") == 0 || id.a(context, "android.permission.ACCESS_COARSE_LOCATION") == 0) {

ACCESS_FINE_LOCATION:         if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_FINE_LOCATION:         if (this.a.hasPermission("android.permission.ACCESS_COARSE_LOCATION") || this.a.hasPermission("android.permission.ACCESS_FINE_LOCATION")) {

WRITE_EXTERNAL_STORAGE:         return contentViewCore.a().hasPermission("android.permission.WRITE_EXTERNAL_STORAGE");

ACCESS_FINE_LOCATION:         if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_FINE_LOCATION:             if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

WRITE_CALENDAR:             if (f != null && !f.b() && Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {

ACCESS_FINE_LOCATION:         if (!this.a.canRequestPermission("android.permission.ACCESS_FINE_LOCATION") && this.e != 0L) {

ACCESS_COARSE_LOCATION:             if (b.a("android.permission.ACCESS_COARSE_LOCATION") || b.a("android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_FINE_LOCATION:             if (b.a("android.permission.ACCESS_COARSE_LOCATION") || b.a("android.permission.ACCESS_FINE_LOCATION")) {

READ_CALENDAR:                 if (Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {

RECORD_AUDIO:         final boolean hasPermission = this.h.hasPermission("android.permission.RECORD_AUDIO");

RECORD_AUDIO:         final boolean b = this.b("android.permission.RECORD_AUDIO");

ACCESS_FINE_LOCATION:         if (Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") || Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_FINE_LOCATION:                         if (a.a(v.b, "android.permission.ACCESS_FINE_LOCATION") == 0) {

ACCESS_FINE_LOCATION:         if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION") && !PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_COARSE_LOCATION")) {

ACCESS_COARSE_LOCATION:             if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

RECORD_AUDIO:                 return "android.permission.RECORD_AUDIO";

WRITE_EXTERNAL_STORAGE:                                 if (context.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0) {

ACCESS_COARSE_LOCATION:                         if (a.a(v.b, "android.permission.ACCESS_COARSE_LOCATION") == 0) {

CAMERA:         if (((this.i && this.d()) || (this.j && this.e())) && !windowAndroid.hasPermission("android.permission.CAMERA")) {

CAMERA:                 return "android.permission.CAMERA";

GET_ACCOUNTS:                 s3 = "android.permission.GET_ACCOUNTS";

READ_EXTERNAL_STORAGE:                 a.a(c.a.d.a(), new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, new cme(c, this.b));

ACCESS_COARSE_LOCATION:         if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION") && !PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_COARSE_LOCATION")) {

READ_CALENDAR:             if (f != null && !f.b() && Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {

ACCESS_FINE_LOCATION:                 return "android.permission.ACCESS_FINE_LOCATION";

ACCESS_COARSE_LOCATION:         if (this.a.hasPermission("android.permission.ACCESS_COARSE_LOCATION") || this.a.hasPermission("android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_COARSE_LOCATION:         if (!windowAndroid.hasPermission("android.permission.ACCESS_COARSE_LOCATION") && !windowAndroid.hasPermission("android.permission.ACCESS_FINE_LOCATION") && !windowAndroid.canRequestPermission("android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_FINE_LOCATION:         if (PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION")) {

GET_ACCOUNTS:             if (a(a2, "android.permission.GET_ACCOUNTS", true)) {

WRITE_CALENDAR:                 if (Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {

ACCESS_COARSE_LOCATION:         if (Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") || Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

RECORD_AUDIO:             final boolean b = this.b("android.permission.RECORD_AUDIO");

CAMERA:         final boolean hasPermission = this.h.hasPermission("android.permission.CAMERA");

RECORD_AUDIO:         if (this.k && this.f() && !windowAndroid.hasPermission("android.permission.RECORD_AUDIO")) {

WRITE_EXTERNAL_STORAGE:         return context != null && PermissionUtils.hasPermission(context, "android.permission.WRITE_EXTERNAL_STORAGE");

ACCESS_FINE_LOCATION:         if (id.a(context, "android.permission.ACCESS_FINE_LOCATION") == 0 || id.a(context, "android.permission.ACCESS_COARSE_LOCATION") == 0) {

ACCESS_FINE_LOCATION:             if (array[i].equals("android.permission.ACCESS_FINE_LOCATION")) {

ACCESS_COARSE_LOCATION:         if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

WRITE_EXTERNAL_STORAGE:                 if (!Utils.c(f.getContext(), "android.permission.WRITE_EXTERNAL_STORAGE") || !"mounted".equals(Environment.getExternalStorageState())) {

READ_EXTERNAL_STORAGE:             a.a(this.h(), "android.permission.READ_EXTERNAL_STORAGE", new clr(this, loadUrlParams));

ACCESS_FINE_LOCATION:         if (!windowAndroid.hasPermission("android.permission.ACCESS_COARSE_LOCATION") && !windowAndroid.hasPermission("android.permission.ACCESS_FINE_LOCATION") && !windowAndroid.canRequestPermission("android.permission.ACCESS_FINE_LOCATION")) {

WRITE_EXTERNAL_STORAGE:             contentViewCore.a().a(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, new eyx(this, n));

RECORD_AUDIO:             list.add("android.permission.RECORD_AUDIO");

CAMERA:             list.add("android.permission.CAMERA");

ACCESS_FINE_LOCATION:                 BluetoothChooserDialog.b(this.a).a(new String[] { "android.permission.ACCESS_FINE_LOCATION" }, this.a);


--------- Unrequested Dangerous (Under) ----------
                s3 = "android.permission.GET_ACCOUNTS";

            if (f != null && !f.b() && Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {

            if (a(a2, "android.permission.GET_ACCOUNTS", true)) {

                if (Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {


----------- Requested Dangerous (Over) -----------
['READ_PHONE_STATE', 'CALL_PHONE', 'READ_CALL_LOG', 'WRITE_CALL_LOG', 'ADD_VOICEMAIL', 'USE_SIP', 'PROCESS_OUTGOING_CALLS']

