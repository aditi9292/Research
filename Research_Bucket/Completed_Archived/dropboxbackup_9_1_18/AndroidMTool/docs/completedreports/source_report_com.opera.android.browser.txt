----------------- Source Report ------------------
Package: com.opera.android.browser

----------- Permissions Found in Files -----------
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayf.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayl.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayq.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayw.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/b.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/c.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/clq.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/clu.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/cmc.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/cmd.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/d.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dml.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpg.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dph.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpi.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpl.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpo.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpu.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpw.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpx.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpy.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dvr.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dvv.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwg.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwq.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwz.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dxi.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ea.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ehe.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ele.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ezf.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fey.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fir.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fjg.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fkx.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ho.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/vw.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/android/support/v4/content/FileProvider.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/bu.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/cc.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/ei.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/lv.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/r.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/AdMarvelActivity$k.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/p$g.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/p$w.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/Utils$r.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/Utils.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/util/d.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/Appboy.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/AppboyImageUtils.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/push/AppboyNotificationUtils.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/services/AppboyLocationService.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/support/PermissionUtils.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/Manifest$permission.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$dimen.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$id.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$layout.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$string.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/facebook/ads/internal/server/a.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/browser/dialog/BluetoothChooserDialog.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/OpJNI.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionCallback.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionDialogDelegate.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionStatus.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionStatusVector.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionType.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionTypeVector.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/BackgroundSyncNetworkObserver.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/DownloadController.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/MediaResourceGetter.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/device/bluetooth/ChromeBluetoothAdapter.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/device/bluetooth/Wrappers$BluetoothAdapterWrapper.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/media/AudioManagerAndroid.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/net/HttpNegotiateAuthenticator.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/ui/base/SelectFileDialog.java
sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/ui/base/WindowAndroid.java

------------- Occurrences in Source --------------

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayf.java

        this.f.sendOrderedBroadcast(intent, "com.google.android.gtalkservice.permission.GTALK_SERVICE");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayl.java

        this.registerReceiver(this.c, intentFilter, "com.google.android.c2dm.permission.RECEIVE", (Handler)null);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayq.java

            if (packageManager.checkPermission("com.google.android.c2dm.permission.RECEIVE", resolveInfo.serviceInfo.packageName) == 0) {
            new StringBuilder("Possible malicious package ").append(resolveInfo.serviceInfo.packageName).append(" declares com.google.android.c2dm.intent.REGISTER without permission");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ayw.java

        ayw.f = "com.google.android.providers.gsf.permission.READ_GSERVICES";

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/b.java

    public static final int all_sites_site_permission_list = 2131493598;
    public static final int per_site_permissions = 2131493537;
    public static final int permission_default = 2131493597;
    public static final int tw__padding_permission_horizontal_container = 2131427739;
    public static final int tw__padding_permission_vertical_container = 2131427740;
    public static final int tw__permission_description_text_size = 2131427741;
    public static final int tw__permission_title_text_size = 2131427742;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/c.java

    public static final int site_settings_permission = 2130903319;
    public static final int tw__padding_permission_horizontal_container = 2131427739;
    public static final int tw__padding_permission_vertical_container = 2131427740;
    public static final int tw__permission_description_text_size = 2131427741;
    public static final int tw__permission_title_text_size = 2131427742;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/clq.java

            a.a(this.h(), "android.permission.READ_EXTERNAL_STORAGE", new clr(this, loadUrlParams));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/clu.java

    public final void RequestPermissionDialog(final NativeChromiumTabDelegate$PermissionDialogType nativeChromiumTabDelegate$PermissionDialogType, final String s, final PermissionDialogDelegate permissionDialogDelegate) {
        this.b.a(nativeChromiumTabDelegate$PermissionDialogType, s, permissionDialogDelegate);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/cmc.java

    public final void a(final NativeChromiumTabDelegate$PermissionDialogType nativeChromiumTabDelegate$PermissionDialogType, final String s, final PermissionDialogDelegate permissionDialogDelegate) {
        final cmd cmd = new cmd(this, nativeChromiumTabDelegate$PermissionDialogType, permissionDialogDelegate);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/cmd.java

                a.a(c.a.d.a(), new String[] { "android.permission.READ_EXTERNAL_STORAGE" }, new cme(c, this.b));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com.java

                BluetoothChooserDialog.b(this.a).a(new String[] { "android.permission.ACCESS_FINE_LOCATION" }, this.a);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/d.java

    public static final int bluetooth_permission = 2131296856;
    public static final int geolocation_permission_dialog_message = 2131296537;
    public static final int geolocation_permission_dialog_title = 2131296536;
    public static final int notifications_permission_dialog_message = 2131296535;
    public static final int notifications_permission_dialog_title = 2131296534;
    public static final int per_site_permission_ask = 2131296864;
    public static final int per_site_permission_deny = 2131296866;
    public static final int per_site_permission_grant = 2131296865;
    public static final int permission_close = 2131296843;
    public static final int permission_multi_rationale_title = 2131296841;
    public static final int permission_rationale_text = 2131296840;
    public static final int permission_rationale_title = 2131296839;
    public static final int permission_update = 2131296842;
    public static final int quota_permission_dialog_message = 2131296531;
    public static final int quota_permission_dialog_title = 2131296530;
    public static final int toast_show_overdraw_permission = 2131296715;
    public static final int tw__padding_permission_horizontal_container = 2131427739;
    public static final int tw__padding_permission_vertical_container = 2131427740;
    public static final int tw__permission_description_text_size = 2131427741;
    public static final int tw__permission_title_text_size = 2131427742;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dml.java

            Log.e("LibraryManager", "Failed changing permissions of " + file.getPath());

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpg.java

    public final void a(final String s, final PermissionType permissionType) {
        this.a(s, permissionType, true);
    public final void a(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus, final boolean b) {
            this.a.a(s, permissionType, permissionStatus);
        this.a(s, permissionType, permissionStatus);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dph.java

    public final PermissionStatus GetPermissionStatus(final PermissionType permissionType, final String s) {
        return this.a.a(permissionType, s);
    public final int RequestPermissions(final Object o, final PermissionTypeVector permissionTypeVector, final String s, final PermissionCallback permissionCallback) {
        return this.a.a((clq)o, permissionTypeVector.getCollection().toArray(new PermissionType[(int)permissionTypeVector.size()]), s, permissionCallback);
    public final void ResetPermission(final PermissionType permissionType, final String s) {
        this.a.a(s, permissionType);
    public final int SubscribePermissionStatusChange(final PermissionType permissionType, final String s, final PermissionCallback permissionCallback) {
        final dpk dpk = new dpk(s, permissionType, permissionCallback);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpi.java

    public static PermissionStatus a(final PermissionType permissionType) {
        switch (dws.a[permissionType.ordinal()]) {
                n = l.b("location_permission_defualt");
                n = l.b("notifications_permission_defualt");
                n = l.b("camera_permission_defualt");
                n = l.b("permission_permission_defualt");
    static void a(final PermissionCallback permissionCallback, final PermissionStatus[] array) {
        final PermissionStatusVector permissionStatusVector = new PermissionStatusVector(array.length);
            permissionStatusVector.set(i, array[i]);
        permissionCallback.Run(permissionStatusVector);
    static String b(final String s, final PermissionType permissionType) {
        return s + permissionType;
    private void b(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus, boolean b) {
            final dpk dpk = this.h.get(b(s, permissionType));
                    if (dpo == null || dpo.a(permissionType, null) == null) {
                    a(dpk.c, new PermissionStatus[] { permissionStatus });
    private PermissionStatus c(final String s, final PermissionType permissionType) {
        final PermissionStatus a = a(permissionType);
        switch (dpj.a[permissionType.ordinal()]) {
                return b.a(permissionType, a);
    public final int a(final clq clq, final PermissionType[] array, final String s, final PermissionCallback permissionCallback) {
            PermissionStatus permissionStatus = dpu.a(h, array[i]);
            if (permissionStatus == PermissionStatus.DENIED) {
                    permissionStatus = PermissionStatus.DENIED;
            if (array2[i] == PermissionStatus.ASK || permissionStatus == PermissionStatus.ASK) {
            a(permissionCallback, array2);
        final dpl dpl = new dpl(this, clq, j, array, array2, s, this.d(), permissionCallback);
    final PermissionStatus a(final PermissionType permissionType, final String s) {
        final PermissionStatus c = this.c(s, permissionType);
                        return dpu.a(bol.e, permissionType);
    protected final void a(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus) {
            if (dpo.a(permissionType, null) != permissionStatus) {
                this.b(s, permissionType, permissionStatus, false);
                dpo.b(permissionType, permissionStatus);
    protected final void a(final String s, final PermissionType permissionType, final boolean b) {
                if (dpo != null && dpo.a(permissionType, null) != null) {
                    this.b(s, permissionType, a(permissionType), false);
                    dpo.a.remove(permissionType);
                        for (final PermissionType permissionType : dpo.a.keySet()) {
                            this.b(s, permissionType, a(permissionType), false);
                for (final PermissionType permissionType : entry.getValue().a.keySet()) {
                    this.b(s, permissionType, a(permissionType), false);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpl.java

        PermissionStatus permissionStatus;
            permissionStatus = PermissionStatus.GRANTED;
            permissionStatus = PermissionStatus.DENIED;
        this.a.a(this.h, this.f[this.i], permissionStatus, b2);
            this.g[1 + this.i] = permissionStatus;
            this.a.a(this.h, this.f[1 + this.i], permissionStatus, b2);
            permissionStatus = dpu.a(this.b.h(), this.f[this.i]);
            if (permissionStatus == PermissionStatus.ASK) {
        this.g[this.i] = permissionStatus;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpo.java

    public final PermissionStatus a(final PermissionType permissionType, final PermissionStatus permissionStatus) {
        final PermissionStatus permissionStatus2 = this.a.get(permissionType);
        if (permissionStatus2 == null) {
            return permissionStatus;
        return permissionStatus2;
    public final void b(final PermissionType permissionType, final PermissionStatus permissionStatus) {
        this.a.put(permissionType, permissionStatus);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpu.java

    static PermissionStatus a(final WindowAndroid windowAndroid, final PermissionType permissionType) {
        switch (dpv.a[permissionType.ordinal()]) {
                final String a = a(permissionType);
    static String a(final PermissionType permissionType) {
        switch (dpv.a[permissionType.ordinal()]) {
                return "android.permission.ACCESS_FINE_LOCATION";
                return "android.permission.RECORD_AUDIO";
                return "android.permission.CAMERA";

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpw.java

    private void b(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus) {
        dpo.b(permissionType, permissionStatus);
    public final void a(final String s, final PermissionType permissionType) {
    public final void a(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus, final boolean b) {
            new File(bjj.a().getFilesDir(), "permissions.bin").delete();
        //    39: ldc             "permissions.bin"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpx.java

        //    19: ldc             "permissions.bin.tmp"
        //    31: ldc             "permissions.bin"
        //    39: ldc             "permissions.bin.tmp"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dpy.java

    public final void a(final String s, final PermissionType permissionType) {
        this.a(s, permissionType, false);
    public final void a(final String s, final PermissionType permissionType, final PermissionStatus permissionStatus, final boolean b) {
        this.a(s, permissionType, permissionStatus);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dvr.java

        final PermissionType permissionType = (PermissionType)((Pair)adapterView.getAdapter().getItem(n)).first;
        ejo.c = (MenuItem$OnMenuItemClickListener)new dvs(this, permissionType);
        final int index = this.b.indexOf(dvq.a(this.c, permissionType));
        ((ContextMenu)a).setHeaderTitle(a.a(permissionType));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dvv.java

                final PermissionType permissionType = array[i];
                final PermissionStatus a = b.a(permissionType, null);
                    list.add(new Pair((Object)permissionType, (Object)a));
        final PermissionType permissionType = (PermissionType)pair.first;
        final PermissionStatus permissionStatus = (PermissionStatus)pair.second;
        statusButton.a(a.a(permissionType));
        statusButton.a((CharSequence)a.a(permissionStatus));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwg.java

        vector.add("android.permission.SYSTEM_ALERT_WINDOW");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwq.java

                bundle.putInt("location_permission_defualt", PermissionStatus.ASK.ordinal());
                bundle.putInt("notifications_permission_defualt", PermissionStatus.ASK.ordinal());
                bundle.putInt("camera_permission_defualt", PermissionStatus.ASK.ordinal());
                bundle.putInt("permission_permission_defualt", PermissionStatus.ASK.ordinal());

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dwz.java

    private void a(final int n, final int n2, final PermissionType permissionType) {
        this.a(n, (View$OnClickListener)new dxa(this, n2, permissionType));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/dxi.java

        final PermissionStatus permissionStatus = this.a.a[menuItem.getItemId()];
                l.a("location_permission_defualt", permissionStatus.ordinal());
                l.a("notifications_permission_defualt", permissionStatus.ordinal());
                l.a("camera_permission_defualt", permissionStatus.ordinal());
                l.a("permission_permission_defualt", permissionStatus.ordinal());

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ea.java

        return AppOpsManager.permissionToOp(s);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ehe.java

        if (id.a(context, "android.permission.ACCESS_FINE_LOCATION") == 0 || id.a(context, "android.permission.ACCESS_COARSE_LOCATION") == 0) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ele.java

        this.o = enc.b(b, "android.permission.ACCESS_NETWORK_STATE");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ezf.java

            evt.c("cr.LocationProvider", "Caught security exception while registering for location updates from the system. The application does not have sufficient geolocation permissions.", new Object[0]);
            LocationProviderAdapter.a("application does not have sufficient geolocation permissions.");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fey.java

        this.d = (context.checkCallingOrSelfPermission("android.permission.VIBRATE") == 0);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fir.java

                evt.b("net_auth", "ERR_MISSING_AUTH_CREDENTIALS: No account provided for the kerberos authentication. Please verify the configuration policies and that the CONTACTS runtime permission is granted. ", new Object[0]);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fjg.java

        this.c = (this.a.getPackageManager().checkPermission("android.permission.ACCESS_WIFI_STATE", this.a.getPackageName()) == 0);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/fkx.java

            final PermissionInfo permissionInfo = this.b().getPackageManager().getPermissionInfo(group, 128);
            if (!TextUtils.isEmpty((CharSequence)permissionInfo.group)) {
                group = permissionInfo.group;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/ho.java

                            if (resolveInfo.serviceInfo.permission != null) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/vw.java

                        if (a.a(v.b, "android.permission.ACCESS_COARSE_LOCATION") == 0) {
                        if (a.a(v.b, "android.permission.ACCESS_FINE_LOCATION") == 0) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/android/support/v4/content/FileProvider.java

            throw new SecurityException("Provider must grant uri permissions");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/bu.java

        if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION")) {
        if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION") && !PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_COARSE_LOCATION")) {
            AppboyLogger.i(bu.a, "Did not request single location update. Fine grained location permissions not found.");
        if (PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION")) {
            AppboyLogger.w(bu.a, "Failed to request single location update due to security exception from insufficient permissions.", ex);
        if (!PermissionUtils.hasPermission(this.b, "android.permission.ACCESS_FINE_LOCATION")) {
            AppboyLogger.i(bu.a, "Did not request background location updates. Fine grained location permissions not found.");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/cc.java

        //    31: ldc             ".permission.C2D_MESSAGE"
        //    52: ldc             "android.permission.INTERNET"
        //    61: ldc             "Missing permission. The %s permission must be set so that the Android application can send the registration ID to the 3rd party server."
        //    69: ldc             "android.permission.INTERNET"
        //    80: ldc             "android.permission.GET_ACCOUNTS"
        //    99: ldc             "Missing permission. The %s permission is recommended to be set so that pre-Jelly Bean Android devices can register with the GCM server."
        //   107: ldc             "android.permission.GET_ACCOUNTS"
        //   118: ldc             "android.permission.WAKE_LOCK"
        //   129: ldc             "Missing permission. The %s permission is recommended be set so that the GCM receiver can notify users by waking the phone when a message is received."
        //   137: ldc             "android.permission.WAKE_LOCK"
        //   246: ldc             "The manifest does not define the %s permission."
        //   268: ldc             "com.google.android.c2dm.permission.RECEIVE"
        //   277: ldc             "Missing permission. The %s permission must be set so that the Android application can register and receive messages."
        //   285: ldc             "com.google.android.c2dm.permission.RECEIVE"
        //   308: ldc             "Missing permission. The %s permission must be set so that ONLY this Android application can register and receive GCM messages."
        //   330: ldc             "Missing permission. The %s permission must be set so that this pre-Jelly Bean Android device can register with the GCM server."
        //   338: ldc             "android.permission.GET_ACCOUNTS"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/ei.java

            AppboyLogger.w(AppboyLocationService.a(), "Could not request single location update. Security exception from insufficient permissions", ex);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/lv.java

                                if (context.checkCallingOrSelfPermission("android.permission.WRITE_EXTERNAL_STORAGE") != 0) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/bo/app/r.java

            AppboyLogger.e(r.a, "Failed to get active network information.  Ensure the permission android.permission.ACCESS_NETWORK_STATE is defined in your AndroidManifest.xml", ex);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/AdMarvelActivity$k.java

        //   235: ldc             "android.permission.ACCESS_COARSE_LOCATION"
        //   245: ldc             "android.permission.ACCESS_FINE_LOCATION"
        //   328: ldc             "android.permission.READ_CALENDAR"
        //   338: ldc             "android.permission.WRITE_CALENDAR"
        //   380: ldc             "android.permission.WRITE_EXTERNAL_STORAGE"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/AdMarvelWebViewJSInterface.java

            if (f != null && !f.b() && Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {
            if (f != null && !f.b() && Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {
                if (Utils.c(context, "android.permission.READ_CALENDAR") && Utils.c(context, "android.permission.WRITE_CALENDAR")) {
                if (!Utils.c(f.getContext(), "android.permission.WRITE_EXTERNAL_STORAGE") || !"mounted".equals(Environment.getExternalStorageState())) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/p$g.java

        //   210: ldc             "android.permission.ACCESS_COARSE_LOCATION"
        //   223: ldc             "android.permission.ACCESS_FINE_LOCATION"
        //   321: ldc             "android.permission.READ_CALENDAR"
        //   334: ldc             "android.permission.WRITE_CALENDAR"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/p$w.java

        //   210: ldc             "android.permission.ACCESS_COARSE_LOCATION"
        //   223: ldc             "android.permission.ACCESS_FINE_LOCATION"
        //   321: ldc             "android.permission.READ_CALENDAR"
        //   334: ldc             "android.permission.WRITE_CALENDAR"

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/Utils$r.java

            if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/ads/Utils.java

        final boolean c = c(context, "android.permission.ACCESS_NETWORK_STATE");
            if (c(context, "android.permission.VIBRATE")) {
        if (c(context, "android.permission.ACCESS_NETWORK_STATE")) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/admarvel/android/util/d.java

        if (!Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") && !Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {
        if (Utils.c(f.getContext(), "android.permission.ACCESS_COARSE_LOCATION") || Utils.c(f.getContext(), "android.permission.ACCESS_FINE_LOCATION")) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/Appboy.java

        g = hk.a("android.permission.ACCESS_NETWORK_STATE", "android.permission.INTERNET");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/AppboyImageUtils.java

        return context != null && PermissionUtils.hasPermission(context, "android.permission.WRITE_EXTERNAL_STORAGE");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/push/AppboyNotificationUtils.java

        if (PermissionUtils.hasPermission(context, "android.permission.WAKE_LOCK") && (Build$VERSION.SDK_INT < 16 || getNotificationPriority(bundle) != -2)) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/services/AppboyLocationService.java

            AppboyLogger.w(AppboyLocationService.a, "Could not remove background location updates. Security exception from insufficient permissions", ex);
                    AppboyLogger.w(AppboyLocationService.a, "Could not request background location updates. Security exception from insufficient permissions", ex);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/support/PermissionUtils.java

            AppboyLogger.e(PermissionUtils.a, String.format("Failure checking permission %s", s), t);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/Manifest$permission.java

public final class Manifest$permission
    public static final String C2D_MESSAGE = "com.opera.android.browser.permission.C2D_MESSAGE";
    public static final String CRASHHANDLER = "com.opera.android.browser.permission.CRASHHANDLER";
    public static final String TURBO_SET = "com.opera.android.browser.permission.TURBO_SET";
    public static final String TURBO_VIEW = "com.opera.android.browser.permission.TURBO_VIEW";

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$dimen.java

    public static final int tw__padding_permission_horizontal_container = 2131427739;
    public static final int tw__padding_permission_vertical_container = 2131427740;
    public static final int tw__permission_description_text_size = 2131427741;
    public static final int tw__permission_title_text_size = 2131427742;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$id.java

    public static final int all_sites_site_permission_list = 2131493598;
    public static final int per_site_permissions = 2131493537;
    public static final int permission_default = 2131493597;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$layout.java

    public static final int site_settings_permission = 2130903319;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/appboy/ui/R$string.java

    public static final int bluetooth_permission = 2131296856;
    public static final int geolocation_permission_dialog_message = 2131296537;
    public static final int geolocation_permission_dialog_title = 2131296536;
    public static final int notifications_permission_dialog_message = 2131296535;
    public static final int notifications_permission_dialog_title = 2131296534;
    public static final int per_site_permission_ask = 2131296864;
    public static final int per_site_permission_deny = 2131296866;
    public static final int per_site_permission_grant = 2131296865;
    public static final int permission_close = 2131296843;
    public static final int permission_multi_rationale_title = 2131296841;
    public static final int permission_rationale_text = 2131296840;
    public static final int permission_rationale_title = 2131296839;
    public static final int permission_update = 2131296842;
    public static final int quota_permission_dialog_message = 2131296531;
    public static final int quota_permission_dialog_title = 2131296530;
    public static final int toast_show_overdraw_permission = 2131296715;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/facebook/ads/internal/server/a.java

        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/browser/dialog/BluetoothChooserDialog.java

        if (this.a.hasPermission("android.permission.ACCESS_COARSE_LOCATION") || this.a.hasPermission("android.permission.ACCESS_FINE_LOCATION")) {
        if (!this.a.canRequestPermission("android.permission.ACCESS_FINE_LOCATION") && this.e != 0L) {
        if (!windowAndroid.hasPermission("android.permission.ACCESS_COARSE_LOCATION") && !windowAndroid.hasPermission("android.permission.ACCESS_FINE_LOCATION") && !windowAndroid.canRequestPermission("android.permission.ACCESS_FINE_LOCATION")) {
            if (array[i].equals("android.permission.ACCESS_FINE_LOCATION")) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/OpJNI.java

        PermissionDialogDelegate permissionDialogDelegate;
            permissionDialogDelegate = null;
            permissionDialogDelegate = new PermissionDialogDelegate(n2, false);
        nativeChromiumTabDelegate.RequestPermissionDialog(swigToEnum, s, permissionDialogDelegate);
        final PermissionTypeVector permissionTypeVector = new PermissionTypeVector(n, false);
        PermissionCallback permissionCallback;
            permissionCallback = null;
            permissionCallback = new PermissionCallback(n2, true);
        return nativePermissionBridge.RequestPermissions(o, permissionTypeVector, s, permissionCallback);
        PermissionCallback permissionCallback;
            permissionCallback = null;
            permissionCallback = new PermissionCallback(n2, true);
        return nativePermissionBridge.SubscribePermissionStatusChange(swigToEnum, s, permissionCallback);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionCallback.java

    public static long getCPtr(final PermissionCallback permissionCallback) {
        if (permissionCallback == null) {
        return permissionCallback.swigCPtr;
    public void Run(final PermissionStatusVector permissionStatusVector) {
        OpJNI.PermissionCallback_Run(this.swigCPtr, this, PermissionStatusVector.getCPtr(permissionStatusVector), permissionStatusVector);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionDialogDelegate.java

    public static long getCPtr(final PermissionDialogDelegate permissionDialogDelegate) {
        if (permissionDialogDelegate == null) {
        return permissionDialogDelegate.swigCPtr;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionStatus.java

    private PermissionStatus(final String s, final int n, final PermissionStatus permissionStatus) {
        this.swigValue = permissionStatus.swigValue;
        for (final PermissionStatus permissionStatus : array) {
            if (permissionStatus.swigValue == n) {
                return permissionStatus;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionStatusVector.java

    public static long getCPtr(final PermissionStatusVector permissionStatusVector) {
        if (permissionStatusVector == null) {
        return permissionStatusVector.swigCPtr;
    public void add(final PermissionStatus permissionStatus) {
        OpJNI.PermissionStatusVector_add(this.swigCPtr, this, permissionStatus.swigValue());
    public void set(final int n, final PermissionStatus permissionStatus) {
        OpJNI.PermissionStatusVector_set(this.swigCPtr, this, n, permissionStatus.swigValue());

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionType.java

    private PermissionType(final String s, final int n, final PermissionType permissionType) {
        this.swigValue = permissionType.swigValue;
        for (final PermissionType permissionType : array) {
            if (permissionType.swigValue == n) {
                return permissionType;

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/com/opera/android/op/PermissionTypeVector.java

    public static long getCPtr(final PermissionTypeVector permissionTypeVector) {
        if (permissionTypeVector == null) {
        return permissionTypeVector.swigCPtr;
    public void add(final PermissionType permissionType) {
        OpJNI.PermissionTypeVector_add(this.swigCPtr, this, permissionType.swigValue());
    public void set(final int n, final PermissionType permissionType) {
        OpJNI.PermissionTypeVector_set(this.swigCPtr, this, n, permissionType.swigValue());

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/BackgroundSyncNetworkObserver.java

        if (c.b.checkPermission("android.permission.ACCESS_NETWORK_STATE", Process.myPid(), Process.myUid()) == 0) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/DownloadController.java

        return contentViewCore.a().hasPermission("android.permission.WRITE_EXTERNAL_STORAGE");
            contentViewCore.a().a(new String[] { "android.permission.WRITE_EXTERNAL_STORAGE" }, new eyx(this, n));

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/content/browser/MediaResourceGetter.java

            if (context.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") != 0) {
                evt.b("cr_MediaResource", "permission denied to access network state", new Object[0]);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/device/bluetooth/ChromeBluetoothAdapter.java

            if (b.a("android.permission.ACCESS_COARSE_LOCATION") || b.a("android.permission.ACCESS_FINE_LOCATION")) {

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/device/bluetooth/Wrappers$BluetoothAdapterWrapper.java

        if (context.checkCallingOrSelfPermission("android.permission.BLUETOOTH") == 0 && context.checkCallingOrSelfPermission("android.permission.BLUETOOTH_ADMIN") == 0) {
            evt.b("Bluetooth", "BluetoothAdapterWrapper.create failed: Lacking Bluetooth permissions.", new Object[0]);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/media/AudioManagerAndroid.java

        final boolean b = this.b("android.permission.RECORD_AUDIO");
        this.g = this.b("android.permission.MODIFY_AUDIO_SETTINGS");
        if (!(this.h = this.b("android.permission.BLUETOOTH"))) {
            evt.b("cr.media", "Requires BLUETOOTH permission", new Object[0]);
                    evt.b("cr.media", "hasBluetoothHeadset() requires BLUETOOTH permission", new Object[0]);
            final boolean b = this.b("android.permission.RECORD_AUDIO");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/net/HttpNegotiateAuthenticator.java

            if (a(a2, "android.permission.GET_ACCOUNTS", true)) {
                evt.c("net_auth", "ERR_MISCONFIGURED_AUTH_ENVIRONMENT: GET_ACCOUNTS permission not granted. Aborting authentication.", new Object[0]);
                s3 = "android.permission.MANAGE_ACCOUNTS";
                s3 = "android.permission.GET_ACCOUNTS";
                evt.c("net_auth", "ERR_MISCONFIGURED_AUTH_ENVIRONMENT: %s permission not granted. Aborting authentication", s3);

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/ui/base/SelectFileDialog.java

        final boolean hasPermission = this.h.hasPermission("android.permission.CAMERA");
        final boolean hasPermission = this.h.hasPermission("android.permission.RECORD_AUDIO");
        if (((this.i && this.d()) || (this.j && this.e())) && !windowAndroid.hasPermission("android.permission.CAMERA")) {
            list.add("android.permission.CAMERA");
        if (this.k && this.f() && !windowAndroid.hasPermission("android.permission.RECORD_AUDIO")) {
            list.add("android.permission.RECORD_AUDIO");

File:  sample_apks/com.opera.android.browser_37.2.2192.104943-37022_minAPI16(armeabi-v7a)(nodpi)_apkmirror.com.apk.uncompressed/app/src/org/chromium/ui/base/WindowAndroid.java

            throw new AssertionError((Object)"Failed to request permissions using a WindowAndroid without an Activity");
            throw new AssertionError((Object)"Failed to determine the request permission state using a WindowAndroid without an Activity");
