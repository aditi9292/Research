\begin{thebibliography}{10}

\bibitem{Artzi:2008}
S.~Artzi, S.~Kim, and M.~D. Ernst.
\newblock Recrash: Making software failures reproducible by preserving object
  states.
\newblock In {\em Proceedings of the 22nd European conference on
  Object-Oriented Programming}, ECOOP '08, 2008.

\bibitem{Bard:2007:STO:1274531.1274545}
G.~V. Bard.
\newblock Spelling-error tolerant, order-independent pass-phrases via the
  damerau-levenshtein string-edit distance metric.
\newblock In {\em Proceedings of the fifth Australasian symposium on ACSW
  frontiers - Volume 68}, 2007.

\bibitem{Bartz:2008:FSF:1855895.1855896}
K.~Bartz, J.~W. Stokes, J.~C. Platt, R.~Kivett, D.~Grant, S.~Calinoiu, and
  G.~Loihle.
\newblock Finding similar failures using callstack similarity.
\newblock In {\em Proceedings of the Third conference on Tackling computer
  systems problems with machine learning techniques}, SysML'08, pages 1--1,
  Berkeley, CA, USA, 2008. USENIX Association.

\bibitem{brodie:automated}
M.~Brodie, S.~Ma, L.~Rachevsky, and J.~Champlin.
\newblock Automated problem determination using call-stack matching.
\newblock {\em Journal of Network and Systems Management}, 13(2):219--237,
  2005.

\bibitem{bugzilla}
{Bugzilla}.
\newblock \url{http://www.bugzilla.org/}, 2012.

\bibitem{firefox}
{Crash Dumps for Mozilla Applications}.
\newblock \url{https://crash-stats.mozilla.com/products/}, 2012.

\bibitem{Dhaliwal:2011:CFC:2117694.2119726}
T.~Dhaliwal, F.~Khomh, and Y.~Zou.
\newblock Classifying field crash reports for fixing bugs: A case study of
  mozilla firefox.
\newblock In {\em Proceedings of the 2011 27th IEEE International Conference on
  Software Maintenance}, ICSM '11, pages 333--342, Washington, DC, USA, 2011.
  IEEE Computer Society.

\bibitem{Glerum:2009}
K.~Glerum, K.~Kinshumann, S.~Greenberg, G.~Aul, V.~Orgovan, G.~Nichols,
  D.~Grant, G.~Loihle, and G.~Hunt.
\newblock Debugging in the (very) large: ten years of implementation and
  experience.
\newblock In {\em Proceedings of the ACM SIGOPS 22nd symposium on Operating
  systems principles}, SOSP '09, pages 103--116, New York, NY, USA, 2009. ACM.

\bibitem{Han:2012}
S.~Han, Y.~Dang, S.~Ge, D.~Zhang, and T.~Xie.
\newblock Performance debugging in the large via mining millions of stack
  traces.
\newblock In {\em Proceedings of the 2012 International Conference on Software
  Engineering}, ICSE 2012, pages 145--155, Piscataway, NJ, USA, 2012. IEEE
  Press.

\bibitem{Kim:2011}
D.~Kim, X.~Wang, S.~Kim, A.~Zeller, S.~Cheung, and S.~Park.
\newblock Which crashes should i fix first?: Predicting top crashes at an early
  stage to prioritize debugging efforts.
\newblock {\em Software Engineering, IEEE Transactions on}, 2011.

\bibitem{Kim:2011:2}
S.~Kim, T.~Zimmermann, and N.~Nagappan.
\newblock Crash graphs: An aggregated view of multiple crashes to improve crash
  triage.
\newblock In {\em Dependable Systems Networks (DSN), 2011 IEEE/IFIP 41st
  International Conference on}, 2011.

\bibitem{brodie:quickly}
G.~Lohman, J.~Champlin, and P.~Sohn.
\newblock Quickly finding known software problems via automated symptom
  matching.
\newblock In {\em Proceedings of the Second International Conference on
  Automatic Computing}, ICAC '05, pages 101--110, Washington, DC, USA, 2005.
  IEEE Computer Society.

\bibitem{Lohman:2005:QFK:1078027.1078461}
G.~Lohman, J.~Champlin, and P.~Sohn.
\newblock Quickly finding known software problems via automated symptom
  matching.
\newblock In {\em Proceedings of the Second International Conference on
  Automatic Computing}, 2005.

\bibitem{watson}
{Microsoft Dr. Watson}.
\newblock
  \url{https://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/drwatson_overview.mspx?mfr=true},
  2012.

\bibitem{4401026}
N.~Modani, R.~Gupta, G.~Lohman, T.~Syeda-Mahmood, and L.~Mignet.
\newblock Automatically identifying known software problems.
\newblock In {\em Data Engineering Workshop, 2007 IEEE 23rd International
  Conference on}, 2007.

\bibitem{mozilla}
{Mozilla Crash Reporter}.
\newblock
  \url{https://support.mozilla.org/en-US/kb/Mozilla\%20Crash\%20Reporter},
  2012.

\bibitem{5463280}
A.~Schroter, N.~Bettenburg, and R.~Premraj.
\newblock Do stack traces help developers fix bugs?
\newblock In {\em Mining Software Repositories (MSR), 2010 7th IEEE Working
  Conference on}, 2010.

\bibitem{Shen:2015:APB:2771783.2771816}
D.~Shen, Q.~Luo, D.~Poshyvanyk, and M.~Grechanik.
\newblock Automating performance bottleneck detection using search-based
  application profiling.
\newblock In {\em Proceedings of the 2015 International Symposium on Software
  Testing and Analysis}, ISSTA 2015, pages 270--281, New York, NY, USA, 2015.
  ACM.

\bibitem{Wu:2016:CEA:2837614.2837619}
R.~Wu, X.~Xiao, S.-C. Cheung, H.~Zhang, and C.~Zhang.
\newblock Casper: An efficient approach to call trace collection.
\newblock In {\em Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages}, POPL 2016, pages 678--690, New York,
  NY, USA, 2016. ACM.

\end{thebibliography}
