-- Find the apps with the highest rates of OPriv (with at least 5,000 lines of code)


select Name, Genre, JavaFiles, Loc, OverPrivCount, Opriv_Java_Ratio, oPriv_LOC_Ratio, Frisk
from view_3_5_1000_Limit v1
--from view_0_3 v1
where LOC >=5000
--and name = 'Galaxy (OWA Contacts Sync) ish'
order by OPriv_java_Ratio desc


--select * from view_0_3




*********************************************************************************

/*
	Create the main view that 0-3 and 3-5 are grouped off of.
*/
drop view view_all_apps;
CREATE VIEW view_all_apps AS

select
ai.rowID as RowID, ai.apkid as apkID ,range, 

--, ai2.range as Range
ai.Name as Name,
ai.genre as Genre,
ai.UserRating as UserRating,
JavaFiles,
ai.LowerDownloads as LowerDownloads,

--,DefectCount
--,Simcad_SourceFragment
--,Simcad_CloneFragment
--,Simcad_CloneGroup
loc,
case when overprivCount.oprivcount is null then 0 else overprivCount.oprivcount end as OverPrivCount
,case when underprivCount.uprivcount is null then 0 else underprivCount.uprivcount end as UnderPrivCount


,case when round(round(overprivCount.oprivcount,1)/round(JavaFiles,1),5) * 1000 is null then 0 else round(round(overprivCount.oprivcount,1)/round(JavaFiles,1),5) * 1000 end as oPriv_Java_Ratio

,case when round(round(overprivCount.oprivcount,4)/round(LOC,4),5) * 10000 is null then 0 else round(round(overprivCount.oprivcount,4)/round(LOC,4),5) * 10000 end as oPriv_LOC_Ratio



--, round(round(overprivCount.oprivcount,1)/round(JavaFiles,1),5) * 1000 as oPriv_Java_Ratio
--, round(round(overprivCount.oprivcount,4)/round(LOC,4),5) * 10000 as oPriv_LOC_Ratio
,intentscount.intentscount as IntentsCount
,permissionCount.permissionCount as PermissionCount
--, JLintResult
--, ari.* -- Kind of messy to do this, but it seems to work
, round(ari.FuzzyRisk,2) as FRisk

from 
apkinformation ai
inner join AndroRiskInfo ARI on ari.rowID = ai.rowID
inner join toolresults tr on tr.apkid = ai.rowID
inner join (
select ai2.rowID, ai2.range
from (
select rowID, Name, version, case
when UserRating <.1 then '0'
when UserRating <=3 then '1'
when UserRating >3 then '2'
else 'x' end as range from apkinformation) ai2) ai2
on ai2.rowid = ai.rowID
left outer join (select count (permissionID) as oprivcount, apkID from overprivilege group by
apkid) overprivCount on (overprivCount.apkid) = ai.rowID
left outer join (select count (permissionID) as uprivcount, apkID from underprivilege group
by apkid) underprivCount on (underprivCount.apkid) = ai.rowID
left outer join (select count (intentID) as intentscount, rowID from apkParser_intents_join
group by rowID) intentscount on (intentsCount.rowid) = ai.rowID
left outer join
(select rowID, count(rowid) as permissionCount from apkParser_privs_join group by rowID) permissionCount on permissionCount.rowID = ai.rowID
where ai.lowerdownloads > 999
and userrating != 0.0
and ari.FuzzyRisk != ''

order by ai.RowID

--and ai2.range ='1' -- Change this to be 1 or 2 . 1=0-3; 2 =3-5
--order by random() limit 1000



*********************************************************************************




/*
	Find all items with a rating of 0-3
*/
drop view view_0_3;
CREATE VIEW view_0_3 AS
select * 
from view_all_apps
where range ='1' -- Change this to be 1 or 2 . 1=0-3; 2 =3-5




*********************************************************************************


/*
	Find all items with a rating of 3-5
*/
drop view view_3_5_1000_Limit;
CREATE VIEW view_3_5_1000_Limit AS
select * 
from view_all_apps
where range ='2' -- Change this to be 1 or 2 . 1=0-3; 2 =3-5
order by random() limit 1000





***** Now use the above queries to generate some aggregate values

select v1.Genre as Genre, count(v1.Genre) as GenreCount, round(avg(v1.UserRating),2) as UserRating, round(avg(v1.UnderPrivCount),2) as Upriv, round(avg(v1.OverPrivCount),2) as OPriv, round(avg(v1.PermissionCount),2) as PermCount, round(avg(FRisk),2) as FRisk
, round(avg(oPriv_Java_Ratio),2) as oPriv_Java_Ratio, round(avg(oPriv_LOC_Ratio),2) as oPriv_LOC_Ratio

--from view_0_3 v1
from view_3_5_1000_Limit v1
group by v1.Genre
order by v1.Genre












********************************************************************************************************
Group 1 (1-2.99)


select
ai2.range 
,ai.genre
,ai.UserRating
,ai.LowerDownloads
,tr.FuzzyRiskValue
,JavaFiles
,DefectCount
,loc
,Simcad_SourceFragment
,Simcad_CloneFragment
,Simcad_CloneGroup
,overprivCount.oprivcount as OPrivCount
,underprivCount.uprivcount UPrivCount
,intentscount.intentscount as IntentsCount
,permissionCount.permissionCount as PermissionCount
, JLintResult

from 
apkinformation ai
inner join toolresults tr on tr.apkid = ai.rowID
inner join (
select ai2.rowID, ai2.range
from (
select rowID, Name, version, case
when UserRating <.1 then '0'
when UserRating <=3 then '1'
when UserRating >3 then '2'
else 'x' end as range from apkinformation) ai2) ai2
on ai2.rowid = ai.rowID
left outer join (select count (permissionID) as oprivcount, apkID from overprivilege group by
apkid) overprivCount on (overprivCount.apkid) = ai.rowID
left outer join (select count (permissionID) as uprivcount, apkID from underprivilege group
by apkid) underprivCount on (underprivCount.apkid) = ai.rowID
left outer join (select count (intentID) as intentscount, rowID from apkParser_intents_join
group by rowID) intentscount on (intentsCount.rowid) = ai.rowID
left outer join
(select count(rowID) as permissionCount from apkParser_privs_join group by
rowID) permissionCount on (permissionCount.rowID) = ai.rowID
where ai.lowerdownloads > 999
and userrating != 0.0
and ai2.range ='1'
--order by random() limit 1000




Group 2 (3-5)

select

ai2.range 
,ai.genre
,ai.UserRating
,ai.LowerDownloads
,tr.FuzzyRiskValue
,JavaFiles
,DefectCount
,loc
,Simcad_SourceFragment
,Simcad_CloneFragment
,Simcad_CloneGroup
,overprivCount.oprivcount as OPrivCount
,underprivCount.uprivcount UPrivCount
,intentscount.intentscount as IntentsCount
,permissionCount.permissionCount as PermissionCount
, JlintResult
from 
apkinformation ai
inner join toolresults tr on tr.apkid = ai.rowID
inner join (
select ai2.rowID, ai2.range
from (
select rowID, Name, version, case
when UserRating <.1 then '0'
when UserRating <=3 then '1'
when UserRating >3 then '2'
else 'x' end as range from apkinformation) ai2) ai2
on ai2.rowid = ai.rowID
left outer join (select count (permissionID) as oprivcount, apkID from overprivilege group by
apkid) overprivCount on (overprivCount.apkid) = ai.rowID
left outer join (select count (permissionID) as uprivcount, apkID from underprivilege group
by apkid) underprivCount on (underprivCount.apkid) = ai.rowID
left outer join (select count (intentID) as intentscount, rowID from apkParser_intents_join
group by rowID) intentscount on (intentsCount.rowid) = ai.rowID
left outer join
(select count(rowID) as permissionCount from apkParser_privs_join group by
rowID) permissionCount on (permissionCount.rowID) = ai.rowID
where ai.lowerdownloads > 999
and userrating != 0.0
and ai2.range ='2'
order by random() limit 1000




